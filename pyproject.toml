[project]
name = "verenigingen-mollie-backend"
version = "1.0.0"
description = "Mollie Backend API Integration for Verenigingen"
authors = [
    {name = "Verenigingen Team", email = "dev@verenigingen.nl"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}

dependencies = [
    "frappe>=15.0.0",
    "mollie-api-python>=3.6.0",
    "cryptography>=41.0.0",
    "pycryptodome>=3.19.0",
    "python-jose>=3.3.0",
    "requests>=2.31.0",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "pytest-asyncio>=0.21.1",
    "black>=23.7.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
    "pre-commit>=3.3.3",
]

test = [
    "responses>=0.23.3",
    "freezegun>=1.2.2",
    "factory-boy>=3.3.0",
    "faker>=19.2.0",
]

monitoring = [
    "prometheus-client>=0.17.1",
    "opentelemetry-api>=1.19.0",
    "opentelemetry-sdk>=1.19.0",
    "opentelemetry-exporter-prometheus>=0.40b0",
]

[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["verenigingen/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=verenigingen",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.coverage.run]
branch = true
source = ["verenigingen"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
targets = ["verenigingen"]
skip = ["B101", "B601"]  # Skip assert_used and shell_with_subprocess
severity = "medium"
confidence = "medium"
