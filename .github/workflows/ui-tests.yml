name: UI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ui-tests-${{ github.event_name }}-${{ github.event.number || github.event.after }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        container: [1, 2, 3]

    services:
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        ports:
          - 3306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          check-latest: true

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache yarn
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: |
          bash ${{ github.workspace }}/.github/scripts/install-dependencies.sh
          pip install frappe-bench
          bench init --skip-redis-config-generation frappe-bench
          cd frappe-bench
          bench get-app verenigingen ${{ github.workspace }}

      - name: Set up site
        run: |
          cd frappe-bench
          bench new-site test-site --db-root-password root --admin-password admin
          bench --site test-site install-app verenigingen
          bench --site test-site add-to-hosts

      - name: Install Cypress
        run: |
          cd frappe-bench/apps/verenigingen
          yarn add cypress @cypress/code-coverage @testing-library/cypress cypress-real-events --save-dev

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frappe-bench/apps/verenigingen
          start: cd ../.. && bench start
          wait-on: 'http://test-site:8000'
          wait-on-timeout: 120
          record: true
          parallel: true
          group: 'UI Tests'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_baseUrl: http://test-site:8000

      - name: Upload Coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          directory: frappe-bench/apps/verenigingen/coverage
          flags: ui-tests
          token: ${{ secrets.CODECOV_TOKEN }}
