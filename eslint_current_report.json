[{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/bank_transaction_list.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/chapter_dashboard.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'approveExpense' is defined but never used. Allowed unused vars must match /^_/u.","line":193,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":24},{"ruleId":"no-unused-vars","severity":2,"message":"'formatCurrency' is defined but never used. Allowed unused vars must match /^_/u.","line":344,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":344,"endColumn":24},{"ruleId":"no-unused-vars","severity":2,"message":"'formatRelativeTime' is defined but never used. Allowed unused vars must match /^_/u.","line":360,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":360,"endColumn":28}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Chapter Dashboard JavaScript\n * Provides interactive functionality for the chapter board dashboard\n */\n\n// Global variables\nlet dashboardData = window.dashboardData || {};\nlet userPermissions = window.userPermissions || {};\nlet selectedChapter = window.selectedChapter || '';\n\n// Initialize dashboard when document is ready\n$(document).ready(function() {\n\tinitializeDashboard();\n});\n\nfunction initializeDashboard() {\n\n\t// Set up event listeners\n\tsetupEventListeners();\n\n\t// Set up auto-refresh\n\tsetupAutoRefresh();\n\n\t// Initialize tooltips if available\n\tif (typeof $().tooltip === 'function') {\n\t\t$('[data-toggle=\"tooltip\"]').tooltip();\n\t}\n}\n\nfunction setupEventListeners() {\n\t// Metric card click handlers\n\t$('.metric-card.members-card').on('click', function() {\n\t\tviewAllMembers();\n\t});\n\n\t$('.metric-card.pending-card').on('click', function() {\n\t\tshowPendingApplications();\n\t});\n\n\t$('.metric-card.expenses-card').on('click', function() {\n\t\tif (userPermissions.can_view_finances) {\n\t\t\tviewFinancialReports();\n\t\t}\n\t});\n\n\t// Keyboard shortcuts\n\t$(document).on('keydown', function(e) {\n\t\t// Ctrl/Cmd + R for refresh\n\t\tif ((e.ctrlKey || e.metaKey) && e.keyCode === 82) {\n\t\t\te.preventDefault();\n\t\t\trefreshDashboardData();\n\t\t}\n\t});\n}\n\nfunction setupAutoRefresh() {\n\t// Refresh dashboard data every 5 minutes\n\tsetInterval(function() {\n\t\trefreshDashboardData(true); // Silent refresh\n\t}, 300000);\n\n\t// Also refresh when page becomes visible again\n\t$(document).on('visibilitychange', function() {\n\t\tif (!document.hidden) {\n\t\t\trefreshDashboardData(true);\n\t\t}\n\t});\n}\n\n// Member Management Functions\nfunction viewAllMembers() {\n\tshowLoading();\n\twindow.location.href = `/app/report/chapter-members?chapter=${encodeURIComponent(selectedChapter)}`;\n}\n\nfunction addNewMember() {\n\tif (!userPermissions.can_approve_members) {\n\t\tfrappe.msgprint(__('You do not have permission to add members.'));\n\t\treturn;\n\t}\n\n\t// Open member creation dialog or navigate to member form\n\twindow.location.href = '/app/member/new';\n}\n\nfunction approveMember(memberId) {\n\tif (!userPermissions.can_approve_members) {\n\t\tfrappe.msgprint(__('You do not have permission to approve members.'));\n\t\treturn;\n\t}\n\n\tfrappe.confirm(\n\t\t__('Are you sure you want to approve this member application?'),\n\t\tfunction() {\n\t\t\tshowLoading();\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'verenigingen.api.membership_application_review.approve_membership_application',\n\t\t\t\targs: {\n\t\t\t\t\tmember_name: memberId,\n\t\t\t\t\tchapter: selectedChapter\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\thideLoading();\n\n\t\t\t\t\tif (r.message && r.message.success) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __('Member approved successfully'),\n\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Refresh dashboard data\n\t\t\t\t\t\trefreshDashboardData();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\t\ttitle: __('Error'),\n\t\t\t\t\t\t\tmessage: r.message ? r.message.error : __('Failed to approve member'),\n\t\t\t\t\t\t\tindicator: 'red'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function(r) {\n\t\t\t\t\thideLoading();\n\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\ttitle: __('Error'),\n\t\t\t\t\t\tmessage: __('An error occurred while approving the member'),\n\t\t\t\t\t\tindicator: 'red'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t);\n}\n\nfunction reviewMember(memberId) {\n\t// Open member record for review\n\twindow.location.href = `/app/member/${encodeURIComponent(memberId)}`;\n}\n\nfunction showPendingApplications() {\n\tif (dashboardData.pending_actions && dashboardData.pending_actions.membership_applications) {\n\t\tconst apps = dashboardData.pending_actions.membership_applications;\n\n\t\tif (apps.length === 0) {\n\t\t\tfrappe.msgprint(__('No pending applications at this time.'));\n\t\t\treturn;\n\t\t}\n\n\t\t// Create a dialog to show pending applications\n\t\tlet html = '<div class=\"pending-applications-dialog\">';\n\t\thtml += '<h4>Pending Member Applications</h4>';\n\t\thtml += '<div class=\"applications-list\">';\n\n\t\tapps.forEach(function(app) {\n\t\t\thtml += `<div class=\"application-item ${app.is_overdue ? 'overdue' : ''}\">`;\n\t\t\thtml += '<div class=\"app-info\">';\n\t\t\thtml += `<strong>${app.full_name}</strong>`;\n\t\t\thtml += `<br><small>Applied ${app.days_pending} days ago</small>`;\n\t\t\tif (app.is_overdue) {\n\t\t\t\thtml += '<span class=\"overdue-badge\">OVERDUE</span>';\n\t\t\t}\n\t\t\thtml += '</div>';\n\n\t\t\tif (userPermissions.can_approve_members) {\n\t\t\t\thtml += '<div class=\"app-actions\">';\n\t\t\t\thtml += `<button class=\"btn btn-success btn-sm\" onclick=\"approveMember('${app.member}')\">Approve</button>`;\n\t\t\t\thtml += `<button class=\"btn btn-default btn-sm\" onclick=\"reviewMember('${app.member}')\">Review</button>`;\n\t\t\t\thtml += '</div>';\n\t\t\t}\n\t\t\thtml += '</div>';\n\t\t});\n\n\t\thtml += '</div></div>';\n\n\t\tfrappe.msgprint({\n\t\t\ttitle: __('Pending Applications'),\n\t\t\tmessage: html,\n\t\t\twide: true\n\t\t});\n\t}\n}\n\n// Financial Functions\nfunction viewFinancialReports() {\n\tif (!userPermissions.can_view_finances) {\n\t\tfrappe.msgprint(__('You do not have permission to view financial reports.'));\n\t\treturn;\n\t}\n\n\twindow.location.href = '/app/report/chapter-expense-report';\n}\n\nfunction approveExpense(expenseId, amount) {\n\tif (!userPermissions.can_approve_expenses) {\n\t\tfrappe.msgprint(__('You do not have permission to approve expenses.'));\n\t\treturn;\n\t}\n\n\tif (amount > userPermissions.expense_limit) {\n\t\tfrappe.msgprint(__(`This expense exceeds your approval limit of €${userPermissions.expense_limit}`));\n\t\treturn;\n\t}\n\n\tfrappe.confirm(\n\t\t__(`Are you sure you want to approve this expense of €${amount}?`),\n\t\tfunction() {\n\t\t\t// Implementation for expense approval\n\t\t\tfrappe.msgprint(__('Expense approval functionality will be implemented when expense system is integrated.'));\n\t\t}\n\t);\n}\n\n// Board Management Functions\nfunction manageBoardMembers() {\n\tif (!userPermissions.can_manage_board) {\n\t\tfrappe.msgprint(__('You do not have permission to manage board members.'));\n\t\treturn;\n\t}\n\n\twindow.location.href = `/app/chapter/${encodeURIComponent(selectedChapter)}`;\n}\n\n// Dashboard Data Management\nfunction refreshDashboardData(silent = false) {\n\tif (!silent) {\n\t\tshowLoading();\n\t}\n\n\tfrappe.call({\n\t\tmethod: 'verenigingen.templates.pages.chapter_dashboard.get_chapter_dashboard_data',\n\t\targs: {\n\t\t\tchapter_name: selectedChapter\n\t\t},\n\t\tcallback: function(r) {\n\t\t\tif (!silent) {\n\t\t\t\thideLoading();\n\t\t\t}\n\n\t\t\tif (r.message) {\n\t\t\t\tdashboardData = r.message;\n\t\t\t\tupdateDashboardDisplay();\n\n\t\t\t\tif (!silent) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __('Dashboard refreshed'),\n\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\terror: function(r) {\n\t\t\tif (!silent) {\n\t\t\t\thideLoading();\n\t\t\t\tfrappe.msgprint({\n\t\t\t\t\ttitle: __('Error'),\n\t\t\t\t\tmessage: __('Failed to refresh dashboard data'),\n\t\t\t\t\tindicator: 'red'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction updateDashboardDisplay() {\n\t// Update metric cards\n\tupdateMetricCards();\n\n\t// Update pending actions count\n\tupdatePendingActionsDisplay();\n\n\t// Update last updated timestamp\n\tupdateLastUpdatedTime();\n}\n\nfunction updateMetricCards() {\n\tif (dashboardData.key_metrics) {\n\t\tconst metrics = dashboardData.key_metrics;\n\n\t\t// Update members metric\n\t\tif (metrics.members) {\n\t\t\t$('.members-card .metric-content h3').text(metrics.members.active);\n\t\t\tconst trend = $('.members-card .trend');\n\t\t\tif (metrics.members.new_this_month > 0) {\n\t\t\t\ttrend.text(`+${metrics.members.new_this_month} this month`).addClass('positive');\n\t\t\t} else {\n\t\t\t\ttrend.hide();\n\t\t\t}\n\t\t}\n\n\t\t// Update pending metric\n\t\tif (metrics.members) {\n\t\t\t$('.pending-card .metric-content h3').text(metrics.members.pending);\n\t\t}\n\n\t\t// Update expenses metric\n\t\tif (metrics.expenses) {\n\t\t\t$('.expenses-card .metric-content h3').text(`€${Math.round(metrics.expenses.pending_amount)}`);\n\t\t}\n\t}\n}\n\nfunction updatePendingActionsDisplay() {\n\tif (dashboardData.pending_actions) {\n\t\tconst totalPending = dashboardData.pending_actions.total_pending || 0;\n\t\t$('.urgency-indicator').text(`${totalPending} items`);\n\n\t\t// Show/hide pending actions card based on whether there are items\n\t\tif (totalPending === 0) {\n\t\t\t$('.pending-actions').hide();\n\t\t} else {\n\t\t\t$('.pending-actions').show();\n\t\t}\n\t}\n}\n\nfunction updateLastUpdatedTime() {\n\tif (dashboardData.last_updated) {\n\t\tconst now = new Date();\n\t\tconst lastUpdated = new Date(dashboardData.last_updated);\n\t\tconst diffMinutes = Math.floor((now - lastUpdated) / (1000 * 60));\n\n\t\tlet timeText;\n\t\tif (diffMinutes < 1) {\n\t\t\ttimeText = 'Just now';\n\t\t} else if (diffMinutes < 60) {\n\t\t\ttimeText = `${diffMinutes} minutes ago`;\n\t\t} else {\n\t\t\ttimeText = lastUpdated.toLocaleString();\n\t\t}\n\n\t\t$('.last-updated').text(`Last Updated: ${timeText}`);\n\t}\n}\n\n// Utility Functions\nfunction showLoading() {\n\t$('#loading-overlay').show();\n}\n\nfunction hideLoading() {\n\t$('#loading-overlay').hide();\n}\n\nfunction formatCurrency(amount) {\n\treturn new Intl.NumberFormat('en-EU', {\n\t\tstyle: 'currency',\n\t\tcurrency: 'EUR'\n\t}).format(amount);\n}\n\nfunction formatDate(dateString) {\n\tconst date = new Date(dateString);\n\treturn date.toLocaleDateString('en-EU', {\n\t\tyear: 'numeric',\n\t\tmonth: 'long',\n\t\tday: 'numeric'\n\t});\n}\n\nfunction formatRelativeTime(dateString) {\n\tconst date = new Date(dateString);\n\tconst now = new Date();\n\tconst diffDays = Math.floor((now - date) / (1000 * 60 * 60 * 24));\n\n\tif (diffDays === 0) {\n\t\treturn 'Today';\n\t} else if (diffDays === 1) {\n\t\treturn 'Yesterday';\n\t} else if (diffDays < 7) {\n\t\treturn `${diffDays} days ago`;\n\t} else if (diffDays < 30) {\n\t\tconst weeks = Math.floor(diffDays / 7);\n\t\treturn `${weeks} week${weeks > 1 ? 's' : ''} ago`;\n\t} else {\n\t\treturn formatDate(dateString);\n\t}\n}\n\n// Email Functions\nfunction emailAllMembers() {\n\tif (!userPermissions.can_approve_members) {\n\t\tfrappe.msgprint(__('You do not have permission to email all members.'));\n\t\treturn;\n\t}\n\n\t// Get member emails for the chapter\n\tfrappe.call({\n\t\tmethod: 'verenigingen.api.member_management.get_chapter_member_emails',\n\t\targs: {\n\t\t\tchapter_name: selectedChapter\n\t\t},\n\t\tcallback: function(r) {\n\t\t\tif (r.message && r.message.length > 0) {\n\t\t\t\tconst emails = r.message.join(';');\n\t\t\t\twindow.location.href = `mailto:${emails}`;\n\t\t\t} else {\n\t\t\t\tfrappe.msgprint(__('No member emails found for this chapter.'));\n\t\t\t}\n\t\t}\n\t});\n}\n\n// Export functions for global access\nwindow.chapterDashboard = {\n\tviewAllMembers,\n\taddNewMember,\n\tapproveMember,\n\treviewMember,\n\tshowPendingApplications,\n\tviewFinancialReports,\n\tmanageBoardMembers,\n\trefreshDashboardData,\n\temailAllMembers\n};\n\n// Make functions globally available for HTML onclick handlers\nwindow.viewAllMembers = viewAllMembers;\nwindow.addNewMember = addNewMember;\nwindow.approveMember = approveMember;\nwindow.reviewMember = reviewMember;\nwindow.viewFinancialReports = viewFinancialReports;\nwindow.manageBoardMembers = manageBoardMembers;\nwindow.refreshDashboardData = refreshDashboardData;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/components/error-handler.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/components/step-manager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/customer_member_link.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/dd_batch_management_enhanced.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/donation_form.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/dues_schedule_calendar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/eboekhouden_migration_config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/expense_validation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/member/js_modules/chapter-history-utils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/member/js_modules/chapter-utils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/member/js_modules/payment-utils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/member/js_modules/sepa-utils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/member/js_modules/termination-utils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/member/js_modules/ui-utils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/member/js_modules/volunteer-utils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/member_counter.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'show_counter_statistics_dialog' is defined but never used. Allowed unused vars must match /^_/u.","line":129,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":129,"endColumn":40},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":339,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":339,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[10129,10183],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":346,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":346,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[10367,10425],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Member Counter Management Frontend\n * verenigingen/public/js/member_counter.js\n */\n\n// Member doctype form customizations\nfrappe.ui.form.on('Member', {\n\trefresh: function(frm) {\n\t\t// Only show counter management for system managers\n\t\tif (frappe.user.has_role('System Manager')) {\n\t\t\tsetup_member_counter_section(frm);\n\t\t\tload_counter_statistics(frm);\n\t\t}\n\n\t\t// Show member ID preview for new members\n\t\tif (frm.doc.__islocal && !frm.doc.member_id) {\n\t\t\tshow_member_id_preview(frm);\n\t\t}\n\t},\n\n\treset_counter_button: function(frm) {\n\t\thandle_counter_reset(frm);\n\t},\n\n\tbirth_date: function(frm) {\n\t\t// Auto-calculate age when birth date changes\n\t\tif (frm.doc.birth_date) {\n\t\t\tconst age = calculate_age(frm.doc.birth_date);\n\t\t\tfrm.set_value('age', age);\n\n\t\t\t// Show warning for unusual ages\n\t\t\tif (age < 12) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tmessage: __('Applicant is under 12 years old - may require special handling'),\n\t\t\t\t\tindicator: 'orange'\n\t\t\t\t}, 8);\n\t\t\t} else if (age > 100) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tmessage: __('Please verify birth date - applicant would be over 100 years old'),\n\t\t\t\t\tindicator: 'yellow'\n\t\t\t\t}, 8);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction setup_member_counter_section(frm) {\n\t// Add custom buttons for counter management\n\t// Counter Statistics button removed as requested\n\n\tfrm.add_custom_button(__('Reset Counter'), function() {\n\t\tshow_counter_reset_dialog(frm);\n\t}, __('Member ID Management'));\n\n\tfrm.add_custom_button(__('Migration Tools'), function() {\n\t\tshow_migration_tools_dialog();\n\t}, __('Member ID Management'));\n}\n\nfunction load_counter_statistics(frm) {\n\t// Load and display current counter statistics\n\tfrappe.call({\n\t\tmethod: 'verenigingen.verenigingen.doctype.member.member_id_manager.get_member_id_statistics',\n\t\tcallback: function(r) {\n\t\t\tif (r.message) {\n\t\t\t\tupdate_counter_display(frm, r.message);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction update_counter_display(frm, stats) {\n\t// Update the next_member_id field display\n\tif (frm.doc.name === 'MEMBER-COUNTER-SYSTEM' || frappe.user.has_role('System Manager')) {\n\t\tfrm.set_df_property('next_member_id', 'description',\n\t\t\t`Next ID: ${stats.next_id} | Highest Assigned: ${stats.highest_assigned} | Gaps: ${stats.gap_count}`);\n\t}\n}\n\nfunction show_member_id_preview(frm) {\n\t// Show preview of next member ID for new members\n\tfrappe.call({\n\t\tmethod: 'verenigingen.verenigingen.doctype.member.member_id_manager.get_next_member_id_preview',\n\t\tcallback: function(r) {\n\t\t\tif (r.message) {\n\t\t\t\tfrm.set_df_property('member_id', 'description',\n\t\t\t\t\t`Will be assigned: ${r.message.next_id}`);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction handle_counter_reset(frm) {\n\t// Handle the reset counter button click\n\tif (!frm.doc.reset_counter_to) {\n\t\tfrappe.msgprint(__('Please enter a value to reset the counter to'));\n\t\treturn;\n\t}\n\n\tfrappe.confirm(\n\t\t__('Are you sure you want to reset the member ID counter to {0}? This action cannot be undone.', [frm.doc.reset_counter_to]),\n\t\tfunction() {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'verenigingen.verenigingen.doctype.member.member_id_manager.reset_member_id_counter',\n\t\t\t\targs: {\n\t\t\t\t\tcounter_value: frm.doc.reset_counter_to\n\t\t\t\t},\n\t\t\t\tfreeze: true,\n\t\t\t\tfreeze_message: __('Resetting counter...'),\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif (r.message && r.message.success) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: r.message.message,\n\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t}, 5);\n\n\t\t\t\t\t\t// Clear the input field\n\t\t\t\t\t\tfrm.set_value('reset_counter_to', '');\n\n\t\t\t\t\t\t// Reload statistics\n\t\t\t\t\t\tload_counter_statistics(frm);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t);\n}\n\nfunction show_counter_statistics_dialog() {\n\t// Show detailed counter statistics\n\tfrappe.call({\n\t\tmethod: 'verenigingen.verenigingen.doctype.member.member_id_manager.get_member_id_statistics',\n\t\tcallback: function(r) {\n\t\t\tif (r.message) {\n\t\t\t\tconst stats = r.message;\n\n\t\t\t\tlet dialog_content = `\n                    <div class=\"counter-stats\">\n                        <h4>Member ID Counter Statistics</h4>\n                        <table class=\"table table-bordered\">\n                            <tr><td><strong>Next ID to Assign</strong></td><td>${stats.next_id}</td></tr>\n                            <tr><td><strong>Current Counter Value</strong></td><td>${stats.current_counter}</td></tr>\n                            <tr><td><strong>Highest Assigned ID</strong></td><td>${stats.highest_assigned}</td></tr>\n                            <tr><td><strong>Total Members with Numeric IDs</strong></td><td>${stats.total_with_numeric_ids}</td></tr>\n                            <tr><td><strong>ID Gaps Found</strong></td><td>${stats.gap_count}</td></tr>\n                        </table>\n                `;\n\n\t\t\t\tif (stats.gaps && stats.gaps.length > 0) {\n\t\t\t\t\tdialog_content += `\n                        <h5>Available ID Gaps (first 10):</h5>\n                        <p class=\"text-muted\">${stats.gaps.join(', ')}</p>\n                    `;\n\t\t\t\t}\n\n\t\t\t\tdialog_content += '</div>';\n\n\t\t\t\tfrappe.msgprint({\n\t\t\t\t\ttitle: __('Member ID Statistics'),\n\t\t\t\t\tmessage: dialog_content,\n\t\t\t\t\twide: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction show_counter_reset_dialog(frm) {\n\t// Show dialog for counter reset with validation\n\tlet d = new frappe.ui.Dialog({\n\t\ttitle: __('Reset Member ID Counter'),\n\t\tfields: [\n\t\t\t{\n\t\t\t\tfieldname: 'new_counter_value',\n\t\t\t\tfieldtype: 'Int',\n\t\t\t\tlabel: __('New Counter Value'),\n\t\t\t\treqd: 1,\n\t\t\t\tdescription: __('Enter the new counter value. Must be greater than current highest assigned ID.')\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: 'confirm_reset',\n\t\t\t\tfieldtype: 'Check',\n\t\t\t\tlabel: __('I understand this action cannot be undone'),\n\t\t\t\treqd: 1\n\t\t\t}\n\t\t],\n\t\tprimary_action_label: __('Reset Counter'),\n\t\tprimary_action: function(values) {\n\t\t\tif (!values.confirm_reset) {\n\t\t\t\tfrappe.msgprint(__('Please confirm you understand this action cannot be undone'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'verenigingen.verenigingen.doctype.member.member_id_manager.reset_member_id_counter',\n\t\t\t\targs: {\n\t\t\t\t\tcounter_value: values.new_counter_value\n\t\t\t\t},\n\t\t\t\tfreeze: true,\n\t\t\t\tfreeze_message: __('Resetting counter...'),\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif (r.message && r.message.success) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: r.message.message,\n\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t}, 5);\n\n\t\t\t\t\t\td.hide();\n\t\t\t\t\t\tload_counter_statistics(frm);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\td.show();\n}\n\nfunction show_migration_tools_dialog() {\n\t// Show migration tools for counter system\n\tlet d = new frappe.ui.Dialog({\n\t\ttitle: __('Member ID Migration Tools'),\n\t\tfields: [\n\t\t\t{\n\t\t\t\tfieldname: 'migration_info',\n\t\t\t\tfieldtype: 'HTML',\n\t\t\t\toptions: `\n                    <div class=\"alert alert-info\">\n                        <h5>Migration Tools</h5>\n                        <p>These tools help migrate from the old counter system in Verenigingen Settings to the new Member-based counter system.</p>\n                        <p><strong>Warning:</strong> Only run migration once during system upgrade.</p>\n                    </div>\n                `\n\t\t\t}\n\t\t],\n\t\tprimary_action_label: __('Run Migration'),\n\t\tprimary_action: function() {\n\t\t\tfrappe.confirm(\n\t\t\t\t__('Run member ID counter migration? This should only be done once during system upgrade.'),\n\t\t\t\tfunction() {\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: 'verenigingen.verenigingen.doctype.member.member.migrate_member_id_counter',\n\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\tfreeze_message: __('Running migration...'),\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\t\tif (r.message.success) {\n\t\t\t\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\t\t\t\tmessage: r.message.message,\n\t\t\t\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t\t\t\t}, 8);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfrappe.msgprint(__('Migration failed: {0}', [r.message.error]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\td.show();\n}\n\nfunction calculate_age(birth_date) {\n\t// Calculate age from birth date\n\tif (!birth_date) return null;\n\n\tconst birth = new Date(birth_date);\n\tconst today = new Date();\n\n\tif (isNaN(birth.getTime())) return null;\n\n\tlet age = today.getFullYear() - birth.getFullYear();\n\n\t// Adjust if birthday hasn't occurred this year\n\tif (today.getMonth() < birth.getMonth() ||\n        (today.getMonth() === birth.getMonth() && today.getDate() < birth.getDate())) {\n\t\tage--;\n\t}\n\n\treturn age;\n}\n\n// Verenigingen Settings form customizations\nfrappe.ui.form.on('Verenigingen Settings', {\n\trefresh: function(frm) {\n\t\tif (frappe.user.has_role('System Manager')) {\n\t\t\tsetup_settings_counter_section(frm);\n\t\t}\n\t},\n\n\tmember_id_start: function(frm) {\n\t\t// Show warning when changing the start value\n\t\tif (frm.doc.member_id_start) {\n\t\t\tfrm.set_df_property('member_id_start', 'description',\n\t\t\t\t'Changes to this value will update the member ID counter if the new value is higher than the current counter.');\n\t\t}\n\t}\n});\n\nfunction setup_settings_counter_section(frm) {\n\t// Add button to view current counter status\n\tfrm.add_custom_button(__('View Member ID Status'), function() {\n\t\tfrappe.call({\n\t\t\tmethod: 'verenigingen.verenigingen.doctype.member.member_id_manager.get_member_id_statistics',\n\t\t\tcallback: function(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tconst stats = r.message;\n\n\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\ttitle: __('Current Member ID Status'),\n\t\t\t\t\t\tmessage: `\n                            <table class=\"table\">\n                                <tr><td><strong>Current Counter:</strong></td><td>${stats.current_counter}</td></tr>\n                                <tr><td><strong>Next ID:</strong></td><td>${stats.next_id}</td></tr>\n                                <tr><td><strong>Settings Start Value:</strong></td><td>${frm.doc.member_id_start || 1000}</td></tr>\n                                <tr><td><strong>Highest Assigned:</strong></td><td>${stats.highest_assigned}</td></tr>\n                            </table>\n                            <p class=\"text-muted\">The counter will only be updated if you set the start value higher than the current counter.</p>\n                        `,\n\t\t\t\t\t\twide: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}, __('Member ID Management'));\n}\n\n/**\n * Migration Script\n * Run this once after updating the system\n */\n\n// Console command for manual migration (run in browser console if needed)\nfunction migrate_member_id_system() {\n\tconsole.log('Starting member ID system migration...');\n\n\tfrappe.call({\n\t\tmethod: 'verenigingen.verenigingen.doctype.member.member.migrate_member_id_counter',\n\t\tcallback: function(r) {\n\t\t\tif (r.message) {\n\t\t\t\tif (r.message.success) {\n\t\t\t\t\tconsole.log('✓ Migration successful:', r.message.message);\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: 'Member ID system migration completed successfully',\n\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t}, 8);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('✗ Migration failed:', r.message.error);\n\t\t\t\t\tfrappe.msgprint('Migration failed: ' + r.message.error);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\terror: function(r) {\n\t\t\tconsole.error('✗ Migration error:', r);\n\t\t\tfrappe.msgprint('Migration error occurred. Check console for details.');\n\t\t}\n\t});\n}\n\n// Make migration function available globally for console use\nwindow.migrate_member_id_system = migrate_member_id_system;\n\n// Auto-run migration check on page load for System Managers\n$(document).ready(function() {\n\tif (frappe.user.has_role('System Manager') &&\n        (frappe.get_route()[0] === 'List' && frappe.get_route()[1] === 'Member') ||\n        (frappe.get_route()[0] === 'Form' && frappe.get_route()[1] === 'Verenigingen Settings')) {\n\n\t\t// Check if migration might be needed\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.client.get_single_value',\n\t\t\targs: {\n\t\t\t\tdoctype: 'Verenigingen Settings',\n\t\t\t\tfield: 'last_member_id'\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif (r.message && parseInt(r.message) > 0) {\n\t\t\t\t\t// Old system detected, suggest migration\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __('Old member ID system detected. Consider running migration. Type migrate_member_id_system() in console.'),\n\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t}, 10);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/member_portal_redirect.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/membership_application.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'MembershipApplication' is defined but never used. Allowed unused vars must match /^_/u.","line":67,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":67,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'APIService' is not defined.","line":91,"column":26,"nodeType":"Identifier","messageId":"undef","endLine":91,"endColumn":36},{"ruleId":"no-undef","severity":2,"message":"'ValidationService' is not defined.","line":100,"column":33,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":50},{"ruleId":"no-undef","severity":2,"message":"'StorageService' is not defined.","line":104,"column":30,"nodeType":"Identifier","messageId":"undef","endLine":104,"endColumn":44},{"ruleId":"no-undef","severity":2,"message":"'ErrorHandler' is not defined.","line":110,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":110,"endColumn":40},{"ruleId":"no-undef","severity":2,"message":"'StepManager' is not defined.","line":117,"column":27,"nodeType":"Identifier","messageId":"undef","endLine":117,"endColumn":38},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":149,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":149,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3270,3330],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":154,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":154,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3362,3427],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":176,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":176,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3961,4035],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":197,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":197,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4716,4752],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":204,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":204,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4950,4989],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":319,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":319,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[8276,8344],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":335,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[8732,8804],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":342,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":342,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[8930,8967],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":354,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":354,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[9259,9320],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":366,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":366,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[9460,9495],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":411,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":411,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[10614,10664],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":427,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":427,"endColumn":83},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":442,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":442,"endColumn":37},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":451,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":451,"endColumn":83},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":467,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":467,"endColumn":69},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":468,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":468,"endColumn":53},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":504,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":504,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[14115,14158],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":507,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":507,"endColumn":75},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":508,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":508,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[14277,14332],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":510,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":510,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[14364,14406],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":518,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":518,"endColumn":35},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":519,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":519,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[14618,14651],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":521,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":521,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[14696,14725],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":533,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":533,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[15192,15249],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":546,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":546,"endColumn":59},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":547,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":547,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[15745,15796],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":549,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":549,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[15859,15903],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":559,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":559,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[16289,16339],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":589,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":589,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[17063,17121],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":753,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":753,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[22206,22278],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":768,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":768,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[22763,22848],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":776,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":776,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[23012,23083],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":799,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":799,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[23698,23748],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1136,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1136,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[33644,33680],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1153,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1153,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[34157,34204],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1196,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1196,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[35462,35508],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1201,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1201,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[35592,35646],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1212,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1212,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[35947,36021],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1219,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1219,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[36187,36246],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1322,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1322,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[39385,39469],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-dupe-class-members","severity":2,"message":"Duplicate name 'bindCustomValidationEvents'.","line":1352,"column":2,"nodeType":"MethodDefinition","messageId":"unexpected","endLine":1388,"endColumn":3},{"ruleId":"no-dupe-class-members","severity":2,"message":"Duplicate name 'bindAgeCalculation'.","line":1390,"column":2,"nodeType":"MethodDefinition","messageId":"unexpected","endLine":1396,"endColumn":3},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1393,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1393,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[41458,41512],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1464,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1464,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[43487,43531],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-dupe-class-members","severity":2,"message":"Duplicate name 'showChapterSuggestion'.","line":1499,"column":2,"nodeType":"MethodDefinition","messageId":"unexpected","endLine":1507,"endColumn":3},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1510,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1510,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[44577,44622],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1515,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1515,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[44698,44737],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1524,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1524,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[44941,44983],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1539,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1539,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[45296,45337],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'skillContainer' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":1564,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":1564,"endColumn":23},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1592,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1592,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[47429,47464],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1606,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1606,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[47871,47935],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1607,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1607,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[47939,48053],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1608,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1608,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[48057,48156],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1609,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1609,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[48160,48264],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1610,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1610,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[48268,48372],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1611,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1611,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[48376,48480],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1612,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1612,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[48484,48590],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1617,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1617,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[48811,48892],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1621,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1621,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[49029,49099],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1627,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1627,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[49149,49193],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1638,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1638,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[49467,49511],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1642,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1642,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[49614,49674],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1708,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1708,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[51647,51733],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1716,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1716,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[52068,52173],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1723,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1723,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[52417,52502],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1727,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1727,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[52590,52666],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1735,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1735,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[52933,53007],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1740,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1740,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[53155,53199],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1746,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1746,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[53406,53465],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1750,"column":8,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1750,"endColumn":19,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[53566,53619],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1789,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1789,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[55000,55080],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1831,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1831,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[56324,56394],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1835,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1835,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[56536,56620],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1851,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1851,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[57198,57279],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1873,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1873,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[58088,58171],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1888,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1888,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[58681,58760],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1893,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1893,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[58845,58919],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1942,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1942,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[60598,60665],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1960,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1960,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[61030,61121],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1981,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1981,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[61583,61663],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1986,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1986,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[61794,61880],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2117,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2117,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[66233,66288],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2124,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2124,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[66698,66776],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2146,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2146,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[67520,67565],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2148,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2148,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[67606,67655],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2239,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2239,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[71296,71376],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2257,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2257,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[72268,72360],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2335,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2335,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[75430,75484],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2336,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2336,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"trace"},"fix":{"range":[75487,75538],"text":""},"desc":"Remove the console.trace()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2377,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2377,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[76888,76923],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2383,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2383,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[77170,77386],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2440,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2440,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[78907,79026],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2476,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2476,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[80053,80146],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2544,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2544,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[82216,82301],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2576,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2576,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[83144,83197],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2590,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2590,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[83663,83748],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'show_bank_details' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":2609,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":2609,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2611,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2611,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[84462,84534],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2612,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2612,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[84537,84635],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2621,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2621,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[84876,84952],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":2627,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2627,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[85162,85237],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":2801,"column":49,"nodeType":"Identifier","messageId":"undef","endLine":2801,"endColumn":62},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":2806,"column":25,"nodeType":"Identifier","messageId":"undef","endLine":2806,"endColumn":38},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":2980,"column":49,"nodeType":"Identifier","messageId":"undef","endLine":2980,"endColumn":62},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":2985,"column":25,"nodeType":"Identifier","messageId":"undef","endLine":2985,"endColumn":38},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3200,"column":47,"nodeType":"Identifier","messageId":"undef","endLine":3200,"endColumn":60},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3201,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3201,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[99902,99994],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3202,"column":4,"nodeType":"Identifier","messageId":"undef","endLine":3202,"endColumn":17},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3298,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3298,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[103011,103062],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3303,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3303,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[103241,103324],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3309,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3309,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[103479,103556],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3315,"column":47,"nodeType":"Identifier","messageId":"undef","endLine":3315,"endColumn":60},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3316,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3316,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[103783,103852],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3317,"column":4,"nodeType":"Identifier","messageId":"undef","endLine":3317,"endColumn":17},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3320,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3320,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[103904,103998],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3321,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3321,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[104001,104093],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3327,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3327,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[104163,104216],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3330,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":3330,"endColumn":16},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3341,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3341,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[104671,104759],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3346,"column":47,"nodeType":"Identifier","messageId":"undef","endLine":3346,"endColumn":60},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3347,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3347,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[104987,105073],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3348,"column":4,"nodeType":"Identifier","messageId":"undef","endLine":3348,"endColumn":17},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3351,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3351,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[105184,105270],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3358,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3358,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[105484,105540],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3361,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3361,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[105632,105710],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3370,"column":47,"nodeType":"Identifier","messageId":"undef","endLine":3370,"endColumn":60},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3371,"column":4,"nodeType":"Identifier","messageId":"undef","endLine":3371,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3506,"column":20,"nodeType":"Identifier","messageId":"undef","endLine":3506,"endColumn":33},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3545,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3545,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[111665,111715],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3559,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3559,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[112100,112147],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3563,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3563,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[112280,112334],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3641,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3641,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[114475,114519],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3653,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3653,"endColumn":17,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[114806,114853],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'UIManager' is defined but never used. Allowed unused vars must match /^_/u.","line":3709,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":3709,"endColumn":16},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3806,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3806,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[119748,119789],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3807,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3807,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[119791,119851],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3808,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3808,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[119853,119922],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3809,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3809,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[119924,120006],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3810,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3810,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[120008,120048],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3819,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3819,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[120239,120289],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3821,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3821,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[120357,120401],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3822,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3822,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[120403,120440],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3823,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3823,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[120442,120547],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3824,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3824,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[120549,120652],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3825,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3825,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[120654,120747],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3830,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3830,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[120897,120959],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3831,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3831,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[120962,121034],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3836,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3836,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[121134,121221],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3840,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3840,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[121259,121321],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3840,"column":32,"nodeType":"Identifier","messageId":"undef","endLine":3840,"endColumn":45},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3842,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3842,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[121324,121373],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3849,"column":15,"nodeType":"Identifier","messageId":"undef","endLine":3849,"endColumn":28},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3850,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3850,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[121560,121627],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3853,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3853,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[121651,121691],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3855,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3855,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[121720,121759],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3857,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3857,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[121774,121811],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3885,"column":47,"nodeType":"Identifier","messageId":"undef","endLine":3885,"endColumn":60},{"ruleId":"no-undef","severity":2,"message":"'membershipApp' is not defined.","line":3886,"column":4,"nodeType":"Identifier","messageId":"undef","endLine":3886,"endColumn":17},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3932,"column":2,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3932,"endColumn":13,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[123869,123923],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3949,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3949,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[124275,124330],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":38,"fatalErrorCount":0,"warningCount":129,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Refactored Membership Application JavaScript\n * Uses modular components and services for better maintainability\n * Updated to use the Membership Dues Schedule system.\n */\n\n// Form Validator class - needed by BaseStep\nclass FormValidator {\n\tvalidateRequired(selector) {\n\t\tconst element = $(selector);\n\t\tconst value = element.val()?.trim();\n\n\t\tif (!value) {\n\t\t\tthis.showError(selector, 'This field is required');\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.showSuccess(selector);\n\t\treturn true;\n\t}\n\n\tshowError(selector, message) {\n\t\tconst element = $(selector);\n\t\telement.addClass('is-invalid').removeClass('is-valid');\n\n\t\tlet feedback = element.siblings('.invalid-feedback');\n\t\tif (feedback.length === 0) {\n\t\t\tfeedback = $('<div class=\"invalid-feedback\"></div>');\n\t\t\telement.after(feedback);\n\t\t}\n\t\tfeedback.text(message).show();\n\t}\n\n\tshowSuccess(selector) {\n\t\tconst element = $(selector);\n\t\telement.addClass('is-valid').removeClass('is-invalid');\n\t\telement.siblings('.invalid-feedback').hide();\n\t}\n}\n\n// Base class for step components\nclass BaseStep {\n\tconstructor(stepId) {\n\t\tthis.stepId = stepId;\n\t\tthis.validator = new FormValidator();\n\t}\n\n\trender(state) {\n\t\t// Override in subclasses\n\t}\n\n\tbindEvents() {\n\t\t// Override in subclasses\n\t}\n\n\tasync validate() {\n\t\t// Override in subclasses\n\t\treturn true;\n\t}\n\n\tgetData() {\n\t\t// Override in subclasses\n\t\treturn {};\n\t}\n}\n\nclass MembershipApplication {\n\tconstructor(config = {}) {\n\t\tthis.config = {\n\t\t\tmaxSteps: 6,\n\t\t\tautoSaveInterval: 30000,\n\t\t\tenableErrorHandling: true,\n\t\t\tenableAutoSave: true,\n\t\t\t...config\n\t\t};\n\n\t\t// Wait for service classes to be available, then initialize\n\t\tthis._initializeServices();\n\n\t\t// Legacy state for compatibility\n\t\tthis.state = new ApplicationState();\n\t\tthis.membershipTypes = [];\n\t\tthis.paymentMethod = '';\n\n\t\tthis.init();\n\t}\n\n\t_initializeServices() {\n\t\t// Initialize services when available\n\t\tif (typeof APIService !== 'undefined') {\n\t\t\tthis.apiService = new APIService({\n\t\t\t\ttimeout: 30000,\n\t\t\t\tretryCount: 3\n\t\t\t});\n\t\t} else {\n\t\t\tthis.apiService = new MembershipAPI();\n\t\t}\n\n\t\tif (typeof ValidationService !== 'undefined') {\n\t\t\tthis.validationService = new ValidationService(this.apiService);\n\t\t}\n\n\t\tif (typeof StorageService !== 'undefined') {\n\t\t\tthis.storageService = new StorageService(this.apiService, {\n\t\t\t\tautoSaveInterval: this.config.autoSaveInterval\n\t\t\t});\n\t\t}\n\n\t\tif (typeof ErrorHandler !== 'undefined') {\n\t\t\tthis.errorHandler = new ErrorHandler({\n\t\t\t\tenableLogging: true,\n\t\t\t\tenableUserFeedback: true\n\t\t\t});\n\t\t}\n\n\t\tif (typeof StepManager !== 'undefined' && this.validationService && this.storageService) {\n\t\t\tthis.stepManager = new StepManager(\n\t\t\t\tthis.validationService,\n\t\t\t\tthis.storageService,\n\t\t\t\t{\n\t\t\t\t\ttotalSteps: this.config.maxSteps,\n\t\t\t\t\tautoSave: this.config.enableAutoSave\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tinitializeSteps() {\n\t\t// Initialize step classes for form validation and interaction\n\t\tthis.steps = [\n\t\t\tnew PersonalInfoStep(),\n\t\t\tnew AddressStep(),\n\t\t\tnew MembershipStep(),\n\t\t\tnew VolunteerStep(),\n\t\t\tnew PaymentStep(),\n\t\t\tnew ConfirmationStep()\n\t\t];\n\n\t\t// Bind events for all steps\n\t\tthis.steps.forEach(step => {\n\t\t\ttry {\n\t\t\t\tstep.bindEvents();\n\t\t\t\tstep.render(this.state);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(`Failed to initialize step ${step.stepId}:`, error);\n\t\t\t}\n\t\t});\n\n\t\tconsole.log('Initialized', this.steps.length, 'form steps');\n\t}\n\n\tasync init() {\n\t\ttry {\n\t\t\tconsole.log('Initializing refactored membership application...');\n\n\t\t\t// Initialize step classes\n\t\t\tthis.initializeSteps();\n\n\t\t\t// Load initial data\n\t\t\tawait this.loadInitialData();\n\n\t\t\t// Set up validation for form fields\n\t\t\tthis.setupFieldValidation();\n\n\t\t\t// Bind events\n\t\t\tthis.bindEvents();\n\n\t\t\t// Start auto-save if enabled\n\t\t\tif (this.config.enableAutoSave && this.storageService && typeof this.storageService.startAutoSave === 'function') {\n\t\t\t\tthis.storageService.startAutoSave(() => this.getAllFormData());\n\t\t\t}\n\n\t\t\t// Try to load any existing draft\n\t\t\tawait this.loadExistingDraft();\n\n\t\t\tconsole.log('Refactored membership application initialized successfully');\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to initialize application:', error);\n\t\t\tif (this.errorHandler && typeof this.errorHandler.handleError === 'function') {\n\t\t\t\tthis.errorHandler.handleError(error, { context: 'initialization' });\n\t\t\t} else {\n\t\t\t\tconsole.warn('ErrorHandler not available, showing basic error message');\n\t\t\t\t// Show a simple error message to the user\n\t\t\t\tif (typeof frappe !== 'undefined' && frappe.msgprint) {\n\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\ttitle: 'Initialization Error',\n\t\t\t\t\t\tmessage: 'Failed to initialize the membership application form. Please refresh the page.',\n\t\t\t\t\t\tindicator: 'red'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync loadInitialData() {\n\t\ttry {\n\t\t\tconsole.log('Loading form data...');\n\t\t\tconst data = await this.apiService.getFormData();\n\n\t\t\t// Store in both legacy state and new format\n\t\t\tthis.state.setInitialData(data);\n\t\t\tthis.membershipTypes = data.membership_types || [];\n\n\t\t\tconsole.log('Form data loaded:', data);\n\n\t\t\t// Load static data into form fields\n\t\t\tthis.loadStaticData(data);\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load initial data:', error);\n\t\t\tif (this.errorHandler && typeof this.errorHandler.handleAPIError === 'function') {\n\t\t\t\tthis.errorHandler.handleAPIError(error, 'get_application_form_data');\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tloadStaticData(data) {\n\t\t// Load countries into address step\n\t\tconst countries = data.countries || this.state.get('countries');\n\t\tif (countries && countries.length > 0) {\n\t\t\tconst select = $('#country');\n\t\t\tif (select.length && select.children().length <= 1) {\n\t\t\t\tselect.empty().append('<option value=\"\">Select Country...</option>');\n\n\t\t\t\tcountries.forEach(country => {\n\t\t\t\t\tselect.append(`<option value=\"${country.name}\">${country.name}</option>`);\n\t\t\t\t});\n\n\t\t\t\t// Set Netherlands as default\n\t\t\t\tselect.val('Netherlands');\n\t\t\t}\n\t\t}\n\n\t\t// Load chapters - always try to load chapters\n\t\tconst chapters = data.chapters || this.state.get('chapters');\n\t\tconst select = $('#selected_chapter');\n\n\t\tif (select.length) {\n\t\t\t// Always populate chapter dropdown if chapters exist\n\t\t\tif (chapters && chapters.length > 0) {\n\t\t\t\t// Only rebuild if not already populated\n\t\t\t\tif (select.children().length <= 1) {\n\t\t\t\t\tselect.empty().append('<option value=\"\">Select a chapter...</option>');\n\n\t\t\t\t\tchapters.forEach(chapter => {\n\t\t\t\t\t\tlet displayText = chapter.name;\n\t\t\t\t\t\tlet locationInfo = [];\n\n\t\t\t\t\t\tif (chapter.region) locationInfo.push(chapter.region);\n\n\t\t\t\t\t\tif (locationInfo.length > 0) {\n\t\t\t\t\t\t\tdisplayText += ` (${locationInfo.join(', ')})`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselect.append(`<option value=\"${chapter.name}\">${displayText}</option>`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// No chapters available - show message\n\t\t\t\tselect.empty().append('<option value=\"\">No chapters available</option>');\n\t\t\t}\n\n\t\t\t// Chapter selection is always visible in the HTML now\n\t\t\t// No need to show/hide\n\t\t}\n\n\t\t// Load membership types\n\t\tthis.loadMembershipTypes(data.membership_types || []);\n\n\t\t// Load payment methods\n\t\tthis.loadPaymentMethods(data.payment_methods || []);\n\t}\n\n\tbindEvents() {\n\t\t// Navigation handled by StepManager, but we can add custom handlers\n\t\t$(document).on('step:change', (event, data) => {\n\t\t\tthis.onStepChange(data.from, data.to);\n\t\t});\n\n\t\t$(document).on('application:submit', (event, data) => {\n\t\t\tthis.submitApplication(data);\n\t\t});\n\n\t\t// Legacy form submit handler\n\t\t$('#membership-application-form').off('submit').on('submit', (e) => {\n\t\t\te.preventDefault();\n\t\t\tif (this.stepManager && typeof this.stepManager.submitApplication === 'function') {\n\t\t\t\tthis.stepManager.submitApplication();\n\t\t\t} else {\n\t\t\t\tthis.submitApplication();\n\t\t\t}\n\t\t});\n\n\t\t// Bind step navigation buttons\n\t\tthis.bindStepNavigation();\n\n\t\t// Custom validation events\n\t\tthis.bindCustomValidationEvents();\n\n\t\t// Direct binding for age calculation since step system might not be working\n\t\tthis.bindAgeCalculation();\n\n\t\t// Bind chapter suggestion based on postal code\n\t\tthis.bindChapterSuggestion();\n\t}\n\n\tbindStepNavigation() {\n\t\t// Initialize step navigation\n\t\tthis.currentStep = 1;\n\t\tthis.maxSteps = 6;  // Fixed: Match template which has 6 steps\n\n\t\t// Show first step\n\t\tthis.showStep(1);\n\n\t\t// Next button\n\t\t$('#btn-next').off('click').on('click', async (e) => {\n\t\t\te.preventDefault();\n\t\t\tconsole.log('Next button clicked, current step:', this.currentStep);\n\n\t\t\t// Disable button during validation\n\t\t\t$('#btn-next').prop('disabled', true).html('<i class=\"fa fa-spinner fa-spin\"></i> Validating...');\n\n\t\t\ttry {\n\t\t\t\tawait this.nextStep();\n\t\t\t} finally {\n\t\t\t\t// Re-enable button\n\t\t\t\t$('#btn-next').prop('disabled', false).html('Next →');\n\t\t\t}\n\t\t});\n\n\t\t// Previous button\n\t\t$('#btn-prev').off('click').on('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tconsole.log('Previous button clicked, current step:', this.currentStep);\n\t\t\tthis.prevStep();\n\t\t});\n\n\t\t// Submit button\n\t\t$('#btn-submit').off('click').on('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tconsole.log('Submit button clicked');\n\t\t\tthis.submitApplication();\n\t\t});\n\t}\n\n\tasync nextStep() {\n\t\t// Await validation before proceeding\n\t\tconst isValid = await this.validateCurrentStep();\n\t\tif (isValid && this.currentStep < this.maxSteps) {\n\t\t\tthis.currentStep++;\n\t\t\tthis.showStep(this.currentStep);\n\t\t} else if (!isValid) {\n\t\t\tconsole.log('Validation failed for step:', this.currentStep);\n\t\t}\n\t}\n\n\tprevStep() {\n\t\tif (this.currentStep > 1) {\n\t\t\tthis.currentStep--;\n\t\t\tthis.showStep(this.currentStep);\n\t\t}\n\t}\n\n\tshowStep(step) {\n\t\tconsole.log('Showing step:', step);\n\n\t\t// Hide all steps\n\t\t$('.form-step').hide().removeClass('active');\n\n\t\t// Show current step\n\t\t$(`.form-step[data-step=\"${step}\"]`).show().addClass('active');\n\n\t\t// Update navigation buttons\n\t\tif (step > 1) {\n\t\t\t$('#btn-prev').removeClass('hidden').show();\n\t\t} else {\n\t\t\t$('#btn-prev').addClass('hidden').hide();\n\t\t}\n\n\t\tif (step < this.maxSteps) {\n\t\t\t$('#btn-next').removeClass('hidden').show();\n\t\t\t$('#btn-submit').addClass('hidden').hide();\n\t\t} else {\n\t\t\t$('#btn-next').addClass('hidden').hide();\n\t\t\t$('#btn-submit').removeClass('hidden').show();\n\t\t}\n\n\t\t// Update progress bar\n\t\tconst progress = (step / this.maxSteps) * 100;\n\t\t$('#form-progress').css('width', `${progress}%`);\n\n\t\t// Update step indicators\n\t\t$('.step').removeClass('active completed');\n\t\tfor (let i = 1; i < step; i++) {\n\t\t\t$(`.step[data-step=\"${i}\"]`).addClass('completed');\n\t\t}\n\t\t$(`.step[data-step=\"${step}\"]`).addClass('active');\n\n\t\t// Update internal state\n\t\tthis.state.set('currentStep', step);\n\n\t\t// Set up step-specific content\n\t\tthis.setupStepContent(step);\n\n\t\t// Scroll to top\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\tasync validateCurrentStep() {\n\t\tconsole.log('Validating step:', this.currentStep);\n\n\t\t// Use basic validation for now (step-specific validation disabled)\n\t\t// TODO: Fix step-specific validation integration\n\t\treturn this.validateStepBasic(this.currentStep);\n\t}\n\n\tvalidateStepBasic(step) {\n\t\tlet isValid = true;\n\n\t\t// Clear previous errors only for current step\n\t\t$(`.form-step[data-step=\"${step}\"] .is-invalid`).removeClass('is-invalid');\n\t\t$(`.form-step[data-step=\"${step}\"] .invalid-feedback`).hide();\n\n\t\tswitch(step) {\n\t\t\tcase 1: // Personal info\n\t\t\t\tconst requiredFields = ['#first_name', '#last_name', '#email', '#birth_date'];\n\t\t\t\trequiredFields.forEach(field => {\n\t\t\t\t\tconst $field = $(field);\n\t\t\t\t\tif (!$field.val() || $field.val().trim() === '') {\n\t\t\t\t\t\t$field.addClass('is-invalid');\n\t\t\t\t\t\tlet feedback = $field.siblings('.invalid-feedback');\n\t\t\t\t\t\tif (feedback.length === 0) {\n\t\t\t\t\t\t\t$field.after('<div class=\"invalid-feedback\">This field is required</div>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$field.siblings('.invalid-feedback').show();\n\t\t\t\t\t\tisValid = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Email validation\n\t\t\t\tconst email = $('#email').val();\n\t\t\t\tif (email && !this.isValidEmail(email)) {\n\t\t\t\t\t$('#email').addClass('is-invalid');\n\t\t\t\t\t$('#email').siblings('.invalid-feedback').text('Please enter a valid email').show();\n\t\t\t\t\tisValid = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // Address\n\t\t\t\tconst addressFields = ['#address_line1', '#city', '#postal_code', '#country'];\n\t\t\t\taddressFields.forEach(field => {\n\t\t\t\t\tconst $field = $(field);\n\t\t\t\t\tif (!$field.val() || $field.val().trim() === '') {\n\t\t\t\t\t\t$field.addClass('is-invalid');\n\t\t\t\t\t\tlet feedback = $field.siblings('.invalid-feedback');\n\t\t\t\t\t\tif (feedback.length === 0) {\n\t\t\t\t\t\t\t$field.after('<div class=\"invalid-feedback\">This field is required</div>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$field.siblings('.invalid-feedback').show();\n\t\t\t\t\t\tisValid = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // Membership type\n\t\t\t\tconst selectedType = this.state.get('selected_membership_type');\n\t\t\t\tconst membership = this.state.get('membership');\n\n\t\t\t\tif (!selectedType && (!membership || !membership.type)) {\n\t\t\t\t\t$('#membership-type-error').text('Please select a membership type').show();\n\t\t\t\t\tisValid = false;\n\t\t\t\t} else {\n\t\t\t\t\t// Check if custom amount is valid when used\n\t\t\t\t\tconst membershipAmount = this.state.get('custom_contribution_fee') || (membership && membership.amount);\n\t\t\t\t\tconst usesCustomAmount = this.state.get('uses_custom_amount') || (membership && membership.isCustom);\n\n\t\t\t\t\tif (usesCustomAmount && (!membershipAmount || membershipAmount <= 0)) {\n\t\t\t\t\t\t$('#membership-type-error').text('Please enter a valid membership amount').show();\n\t\t\t\t\t\tisValid = false;\n\t\t\t\t\t} else if (usesCustomAmount && membershipAmount > 0) {\n\t\t\t\t\t\t// Validate minimum fee requirement\n\t\t\t\t\t\tconst currentType = selectedType || (membership && membership.type);\n\t\t\t\t\t\tif (currentType && this.membershipTypes && this.membershipTypes.length > 0) {\n\t\t\t\t\t\t\tconst typeData = this.membershipTypes.find(t => t.name === currentType);\n\t\t\t\t\t\t\tif (typeData && typeData.amount) {\n\t\t\t\t\t\t\t\tconst minAmount = typeData.amount * 0.5; // 50% minimum\n\t\t\t\t\t\t\t\tif (membershipAmount < minAmount) {\n\t\t\t\t\t\t\t\t\tconst formattedMin = this.formatCurrency(minAmount);\n\t\t\t\t\t\t\t\t\t$('#membership-type-error').text(`Minimum contribution is ${formattedMin} (50% of standard amount)`).show();\n\t\t\t\t\t\t\t\t\tisValid = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 4: // Volunteer (optional)\n\t\t\t\t// No required fields\n\t\t\t\tbreak;\n\n\t\t\tcase 5: // Payment\n\t\t\t\tconsole.log('Validating step 5 - Payment');\n\n\t\t\t\t// Check payment method selection\n\t\t\t\tconst paymentMethod = $('input[name=\"payment_method\"]:checked').val();\n\t\t\t\tconsole.log('Payment method selected:', paymentMethod);\n\t\t\t\tif (!paymentMethod) {\n\t\t\t\t\tconsole.log('No payment method selected');\n\t\t\t\t\tif (typeof frappe !== 'undefined' && frappe.msgprint) {\n\t\t\t\t\t\tfrappe.msgprint('Please select a payment method');\n\t\t\t\t\t}\n\t\t\t\t\tisValid = false;\n\t\t\t\t}\n\n\t\t\t\t// Check IBAN\n\t\t\t\tconst iban = $('#iban').val();\n\t\t\t\tconsole.log('IBAN value:', iban);\n\t\t\t\tif (!iban || iban.trim() === '') {\n\t\t\t\t\tconsole.log('IBAN is empty');\n\t\t\t\t\t$('#iban').addClass('is-invalid');\n\t\t\t\t\tlet feedback = $('#iban').siblings('.invalid-feedback');\n\t\t\t\t\tif (feedback.length === 0) {\n\t\t\t\t\t\t$('#iban').after('<div class=\"invalid-feedback\">IBAN is required</div>');\n\t\t\t\t\t}\n\t\t\t\t\t$('#iban').siblings('.invalid-feedback').show();\n\t\t\t\t\tisValid = false;\n\t\t\t\t} else {\n\t\t\t\t\t// Perform comprehensive IBAN validation with checksum\n\t\t\t\t\tconst validation = this.performIBANValidation(iban);\n\t\t\t\t\tif (!validation.valid) {\n\t\t\t\t\t\tconsole.log('IBAN validation failed:', validation.error);\n\t\t\t\t\t\t$('#iban').removeClass('is-valid').addClass('is-invalid');\n\t\t\t\t\t\t$('#iban').siblings('.invalid-feedback').remove();\n\t\t\t\t\t\t$('#iban').after(`<div class=\"invalid-feedback\">${validation.error}</div>`);\n\t\t\t\t\t\tisValid = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Format the IBAN if valid\n\t\t\t\t\t\t$('#iban').val(validation.formatted);\n\t\t\t\t\t\t$('#iban').removeClass('is-invalid').addClass('is-valid');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check account holder name\n\t\t\t\tconst accountHolder = $('#account_holder_name').val();\n\t\t\t\tconsole.log('Account holder name:', accountHolder);\n\t\t\t\tif (!accountHolder || accountHolder.trim() === '') {\n\t\t\t\t\tconsole.log('Account holder name is empty');\n\t\t\t\t\t$('#account_holder_name').addClass('is-invalid');\n\t\t\t\t\tlet feedback = $('#account_holder_name').siblings('.invalid-feedback');\n\t\t\t\t\tif (feedback.length === 0) {\n\t\t\t\t\t\t$('#account_holder_name').after('<div class=\"invalid-feedback\">Account holder name is required</div>');\n\t\t\t\t\t}\n\t\t\t\t\t$('#account_holder_name').siblings('.invalid-feedback').show();\n\t\t\t\t\tisValid = false;\n\t\t\t\t}\n\n\t\t\t\tconsole.log('Step 5 validation result:', isValid);\n\t\t\t\tbreak;\n\n\t\t\tcase 6: // Confirmation\n\t\t\t\t// Check terms and privacy checkboxes\n\t\t\t\tif (!$('input[name=\"terms_accepted\"]').is(':checked')) {\n\t\t\t\t\tif (typeof frappe !== 'undefined' && frappe.msgprint) {\n\t\t\t\t\t\tfrappe.msgprint('Please accept the terms and conditions');\n\t\t\t\t\t}\n\t\t\t\t\tisValid = false;\n\t\t\t\t}\n\n\t\t\t\tif (!$('input[name=\"privacy_accepted\"]').is(':checked')) {\n\t\t\t\t\tif (typeof frappe !== 'undefined' && frappe.msgprint) {\n\t\t\t\t\t\tfrappe.msgprint('Please agree to the privacy policy');\n\t\t\t\t\t}\n\t\t\t\t\tisValid = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tisValidEmail(email) {\n\t\treturn /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\t}\n\n\t// Step navigation now handled by StepManager\n\tonStepChange(fromStep, toStep) {\n\t\tconsole.log(`Step changed from ${fromStep} to ${toStep}`);\n\n\t\t// Update legacy state for compatibility\n\t\tthis.state.set('currentStep', toStep);\n\n\t\t// Perform step-specific setup\n\t\tthis.setupStepContent(toStep);\n\t}\n\n\tsetupStepContent(stepNumber) {\n\t\tswitch(stepNumber) {\n\t\t\tcase 1:\n\t\t\t\tthis.setupPersonalInfoStep();\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.setupAddressStep();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.setupMembershipStep();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.setupVolunteerStep();\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.setupPaymentStep();\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tthis.setupConfirmationStep();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tgetCurrentStep() {\n\t\tif (this.stepManager && typeof this.stepManager.getCurrentStep === 'function') {\n\t\t\treturn this.stepManager.getCurrentStep();\n\t\t}\n\t\treturn this.currentStep || 1;\n\t}\n\n\t// New method to get all form data\n\tgetAllFormData() {\n\t\tconst formData = {};\n\n\t\t// Get data from step manager if available\n\t\tif (this.stepManager && typeof this.stepManager.getAllData === 'function') {\n\t\t\ttry {\n\t\t\t\tconst stepData = this.stepManager.getAllData();\n\t\t\t\tObject.assign(formData, stepData);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('StepManager.getAllData failed:', error);\n\t\t\t}\n\t\t}\n\n\t\t// Collect data directly from form fields (fallback and primary method)\n\t\tconst directFormData = this.collectFormDataDirectly();\n\t\tObject.assign(formData, directFormData);\n\n\t\t// Get additional form data not handled by step manager\n\t\tconst additionalData = this.getAdditionalFormData();\n\t\tObject.assign(formData, additionalData);\n\n\t\treturn formData;\n\t}\n\n\tcollectFormDataDirectly() {\n\t\t// Collect data directly from form fields\n\t\treturn {\n\t\t\t// Step 1: Personal Information\n\t\t\tfirst_name: $('#first_name').val() || '',\n\t\t\tmiddle_name: $('#middle_name').val() || '',\n\t\t\tlast_name: $('#last_name').val() || '',\n\t\t\temail: $('#email').val() || '',\n\t\t\tcontact_number: $('#contact_number').val() || '',\n\t\t\tbirth_date: $('#birth_date').val() || '',\n\t\t\tpronouns: $('#pronouns').val() || '',\n\n\t\t\t// Step 2: Address Information\n\t\t\taddress_line1: $('#address_line1').val() || '',\n\t\t\taddress_line2: $('#address_line2').val() || '',\n\t\t\tcity: $('#city').val() || '',\n\t\t\tstate: $('#state').val() || '',\n\t\t\tpostal_code: $('#postal_code').val() || '',\n\t\t\tcountry: $('#country').val() || '',\n\n\t\t\t// Step 3: Membership and Chapter selection\n\t\t\tselected_membership_type: this.state.get('selected_membership_type') || '',\n\t\t\tcustom_contribution_fee: this.state.get('custom_contribution_fee') || 0,\n\t\t\tuses_custom_amount: this.state.get('uses_custom_amount') || false,\n\t\t\tselected_chapter: $('#selected_chapter').val() || '',\n\n\t\t\t// Step 4: Volunteer Information\n\t\t\tinterested_in_volunteering: $('#interested_in_volunteering').is(':checked'),\n\t\t\tvolunteer_availability: $('#volunteer_availability').val() || '',\n\t\t\tvolunteer_experience_level: $('#volunteer_experience_level').val() || '',\n\t\t\tnewsletter_opt_in: $('#newsletter_opt_in').is(':checked'),\n\t\t\tapplication_source: $('#application_source').val() || '',\n\t\t\tapplication_source_details: $('#application_source_details').val() || '',\n\n\t\t\t// Step 5: Payment Details\n\t\t\tpayment_method: $('input[name=\"payment_method\"]:checked').val() || $('#payment_method').val() || '',\n\n\n\t\t\t// Bank Account Details (SEPA Direct Debit)\n\t\t\tiban: $('#iban').val() || '',\n\t\t\tbank_account_name: $('#account_holder_name').val() || $('#bank_account_name').val() || '',\n\n\t\t\t// Bank Transfer Account Details (for payment matching)\n\t\t\t// Note: These should map to the member IBAN fields when payment_method is 'Bank Transfer'\n\t\t\ttransfer_iban: $('#transfer_iban').val() || '',\n\t\t\ttransfer_account_name: $('#transfer_account_name').val() || '',\n\n\t\t\t// Step 6: Final Confirmation\n\t\t\tadditional_notes: $('#additional_notes').val() || '',\n\t\t\tterms: $('#terms').is(':checked'),\n\t\t\tgdpr_consent: $('#gdpr_consent').is(':checked'),\n\t\t\tconfirm_accuracy: $('#confirm_accuracy').is(':checked'),\n\n\t\t\t// Collect volunteer interests\n\t\t\tvolunteer_interests: this.getSelectedVolunteerInterests(),\n\n\t\t\t// Collect volunteer skills\n\t\t\tvolunteer_skills: this.getVolunteerSkills()\n\t\t};\n\t}\n\n\tgetSelectedVolunteerInterests() {\n\t\tconst interests = [];\n\t\t$('#volunteer-interests input[type=\"checkbox\"]:checked').each(function() {\n\t\t\tinterests.push($(this).val());\n\t\t});\n\t\treturn interests;\n\t}\n\n\tgetVolunteerSkills() {\n\t\tconst skills = [];\n\t\t$('.skill-row').each(function() {\n\t\t\tconst skillName = $(this).find('input[name=\"skill_name[]\"]').val();\n\t\t\tconst skillLevel = $(this).find('select[name=\"skill_level[]\"]').val();\n\n\t\t\tif (skillName && skillName.trim() && skillLevel) {\n\t\t\t\tskills.push({\n\t\t\t\t\tskill_name: skillName.trim(),\n\t\t\t\t\tskill_level: skillLevel\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn skills;\n\t}\n\n\tbindAgeCalculation() {\n\t\t// Bind age calculation to birth date field\n\t\t$('#birth_date').on('change blur', () => {\n\t\t\tthis.calculateAndShowAge();\n\t\t});\n\t}\n\n\tbindChapterSuggestion() {\n\t\t// Bind chapter suggestion to postal code field changes\n\t\t$(document).on('change blur', '#postal_code', async () => {\n\t\t\tconst postalCode = $('#postal_code').val();\n\t\t\tconst city = $('#city').val();\n\t\t\tconst country = $('#country').val();\n\n\t\t\tif (postalCode && postalCode.trim().length >= 4) {\n\t\t\t\tconsole.log('Checking chapter suggestion for postal code:', postalCode);\n\t\t\t\tawait this.suggestChapterFromPostalCode(postalCode, city, country);\n\t\t\t} else {\n\t\t\t\t// Hide suggestion if postal code is too short\n\t\t\t\t$('#suggested-chapter').hide();\n\t\t\t}\n\t\t});\n\n\t\t// Also trigger when city changes (for better matching)\n\t\t$(document).on('change blur', '#city', async () => {\n\t\t\tconst postalCode = $('#postal_code').val();\n\t\t\tconst city = $('#city').val();\n\t\t\tconst country = $('#country').val();\n\n\t\t\tif (postalCode && postalCode.trim().length >= 4 && city) {\n\t\t\t\tconsole.log('Checking chapter suggestion for city + postal code:', city, postalCode);\n\t\t\t\tawait this.suggestChapterFromPostalCode(postalCode, city, country);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync suggestChapterFromPostalCode(postalCode, city, country) {\n\t\ttry {\n\t\t\tconsole.log('Suggesting chapters for:', { postalCode, city, country });\n\n\t\t\t// Make API call to get chapter suggestions\n\t\t\tconst result = await new Promise((resolve, reject) => {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'verenigingen.verenigingen.doctype.chapter.chapter.suggest_chapters_for_member',\n\t\t\t\t\targs: {\n\t\t\t\t\t\tmember: null, // We don't have a member yet during application\n\t\t\t\t\t\tpostal_code: postalCode,\n\t\t\t\t\t\tcity: city,\n\t\t\t\t\t\tstate: null // Could be derived from city if needed\n\t\t\t\t\t},\n\t\t\t\t\tcallback: (r) => {\n\t\t\t\t\t\tif (r.message !== undefined) {\n\t\t\t\t\t\t\tresolve(r.message);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error('No response'));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\terror: reject\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconsole.log('Chapter suggestion result:', result);\n\n\t\t\tif (result && result.length > 0) {\n\t\t\t\tthis.showChapterSuggestion(result[0]); // Show the best match\n\t\t\t} else {\n\t\t\t\t// Hide suggestion if no matches found\n\t\t\t\t$('#suggested-chapter').hide();\n\t\t\t}\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Error suggesting chapters:', error);\n\t\t\t// Hide suggestion on error\n\t\t\t$('#suggested-chapter').hide();\n\t\t}\n\t}\n\n\tshowChapterSuggestion(chapter) {\n\t\tconst suggestionDiv = $('#suggested-chapter');\n\n\t\tif (suggestionDiv.length === 0) {\n\t\t\t// Create suggestion div if it doesn't exist\n\t\t\t$('#chapter-selection').append(`\n                <div id=\"suggested-chapter\" class=\"alert alert-info mt-3\" style=\"display: none;\">\n                    <h6><i class=\"fa fa-lightbulb-o\"></i> Suggested Chapter</h6>\n                    <div id=\"chapter-suggestion-content\"></div>\n                    <div class=\"mt-2\">\n                        <button type=\"button\" class=\"btn btn-sm btn-primary\" id=\"accept-chapter-suggestion\">\n                            Select This Chapter\n                        </button>\n                        <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" id=\"dismiss-chapter-suggestion\">\n                            Dismiss\n                        </button>\n                    </div>\n                </div>\n            `);\n\n\t\t\t// Bind events for suggestion buttons\n\t\t\t$('#accept-chapter-suggestion').on('click', () => {\n\t\t\t\t$('#chapter').val(chapter.name).trigger('change');\n\t\t\t\t$('#suggested-chapter').hide();\n\t\t\t});\n\n\t\t\t$('#dismiss-chapter-suggestion').on('click', () => {\n\t\t\t\t$('#suggested-chapter').hide();\n\t\t\t});\n\t\t}\n\n\t\t// Update content\n\t\tconst content = `\n            <p><strong>${chapter.name}</strong></p>\n            <p class=\"mb-1\">Location: ${chapter.city || chapter.state || 'Not specified'}</p>\n            <p class=\"mb-1 text-muted\">Match score: ${chapter.match_score || 0}%</p>\n        `;\n\n\t\t$('#chapter-suggestion-content').html(content);\n\t\t$('#suggested-chapter').show();\n\t}\n\n\tcalculateAndShowAge() {\n\t\tconst birthDate = $('#birth_date').val();\n\t\tconst ageWarning = $('#age-warning');\n\n\t\tif (!birthDate) {\n\t\t\tageWarning.hide();\n\t\t\treturn;\n\t\t}\n\n\t\tconst today = new Date();\n\t\tconst birth = new Date(birthDate);\n\t\tlet age = today.getFullYear() - birth.getFullYear();\n\t\tconst monthDiff = today.getMonth() - birth.getMonth();\n\n\t\tif (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n\t\t\tage--;\n\t\t}\n\n\t\t// Show age warnings\n\t\tif (age < 16) {\n\t\t\tageWarning.html('<strong>Note:</strong> You must be at least 16 years old to become a member. Please contact us if you have questions.').show();\n\t\t} else if (age < 18) {\n\t\t\tageWarning.html('<strong>Note:</strong> You are under 18. Parental consent may be required for membership.').show();\n\t\t} else if (age > 120) {\n\t\t\tageWarning.html('<strong>Please check your birth date:</strong> The entered date would make you over 120 years old.').show();\n\t\t} else {\n\t\t\tageWarning.hide();\n\t\t}\n\n\t\treturn age;\n\t}\n\n\tbindCustomValidationEvents() {\n\t\t// Email validation\n\t\t$('#email').on('blur', () => {\n\t\t\tthis.validateEmail();\n\t\t});\n\n\t\t// Postal code validation and chapter suggestion\n\t\t$('#postal_code').on('blur', () => {\n\t\t\tthis.validatePostalCodeAndSuggestChapter();\n\t\t});\n\n\t\t// IBAN validation\n\t\t$('#iban').on('blur', () => {\n\t\t\tthis.validateIBAN();\n\t\t});\n\t}\n\n\tvalidateEmail() {\n\t\tconst email = $('#email').val();\n\t\tconst emailField = $('#email');\n\n\t\tif (!email) return;\n\n\t\t// Basic email regex\n\t\tconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n\t\tif (!emailRegex.test(email)) {\n\t\t\temailField.addClass('is-invalid');\n\t\t\temailField.siblings('.invalid-feedback').remove();\n\t\t\temailField.after('<div class=\"invalid-feedback\">Please enter a valid email address</div>');\n\t\t} else {\n\t\t\temailField.removeClass('is-invalid').addClass('is-valid');\n\t\t\temailField.siblings('.invalid-feedback').hide();\n\t\t}\n\t}\n\n\tvalidatePostalCodeAndSuggestChapter() {\n\t\tconst postalCode = $('#postal_code').val();\n\n\t\tif (!postalCode || postalCode.length < 4) return;\n\n\t\t// Call API to validate postal code and suggest chapters\n\t\tfrappe.call({\n\t\t\tmethod: 'verenigingen.api.membership_application.suggest_chapters_for_postal_code',\n\t\t\targs: { postal_code: postalCode },\n\t\t\tcallback: (r) => {\n\t\t\t\tif (r.message && r.message.suggested_chapters && r.message.suggested_chapters.length > 0) {\n\t\t\t\t\t// Show chapter suggestions\n\t\t\t\t\tthis.showChapterSuggestions(r.message.suggested_chapters);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tvalidateIBAN() {\n\t\tconst iban = $('#iban').val();\n\t\tconst ibanField = $('#iban');\n\n\t\tif (!iban) return;\n\n\t\t// Use comprehensive IBAN validation with mod-97 checksum\n\t\tconst validation = this.performIBANValidation(iban);\n\n\t\t// Remove existing feedback\n\t\tibanField.siblings('.invalid-feedback').remove();\n\t\tibanField.siblings('.valid-feedback').remove();\n\n\t\tif (!validation.valid) {\n\t\t\tibanField.removeClass('is-valid').addClass('is-invalid');\n\t\t\tibanField.after(`<div class=\"invalid-feedback\">${validation.error}</div>`);\n\n\t\t\t// Clear BIC field if IBAN is invalid\n\t\t\t$('#bic').val('');\n\t\t} else {\n\t\t\tibanField.removeClass('is-invalid').addClass('is-valid');\n\n\t\t\t// Format the IBAN\n\t\t\tibanField.val(validation.formatted);\n\n\t\t\t// Show success message with bank info if available\n\t\t\tconst bankName = this.getBankNameFromIBAN(iban);\n\t\t\tif (bankName) {\n\t\t\t\tibanField.after(`<div class=\"valid-feedback\">Valid ${bankName} IBAN</div>`);\n\t\t\t} else {\n\t\t\t\tibanField.after('<div class=\"valid-feedback\">Valid IBAN</div>');\n\t\t\t}\n\n\t\t\t// Auto-derive BIC for Dutch IBANs\n\t\t\tconst bic = this.deriveBICFromIBAN(iban);\n\t\t\tif (bic && $('#bic').length > 0) {\n\t\t\t\t$('#bic').val(bic);\n\t\t\t\t$('#bic').prop('readonly', true);\n\t\t\t\t$('#bic').addClass('is-valid');\n\t\t\t}\n\t\t}\n\t}\n\n\tperformIBANValidation(iban) {\n\t\tif (!iban) {\n\t\t\treturn { valid: false, error: 'IBAN is required' };\n\t\t}\n\n\t\t// Remove spaces and convert to uppercase\n\t\tconst cleanIBAN = iban.replace(/\\s/g, '').toUpperCase();\n\n\t\t// Check for invalid characters\n\t\tif (!/^[A-Z0-9]+$/.test(cleanIBAN)) {\n\t\t\treturn { valid: false, error: 'IBAN contains invalid characters' };\n\t\t}\n\n\t\t// Basic format check\n\t\tif (!/^[A-Z]{2}[0-9]{2}[A-Z0-9]+$/.test(cleanIBAN)) {\n\t\t\treturn { valid: false, error: 'Invalid IBAN format' };\n\t\t}\n\n\t\t// Extract country code\n\t\tconst countryCode = cleanIBAN.substring(0, 2);\n\n\t\t// IBAN length specifications\n\t\tconst ibanLengths = {\n\t\t\t'AD': 24, 'AT': 20, 'BE': 16, 'CH': 21, 'CZ': 24,\n\t\t\t'DE': 22, 'DK': 18, 'ES': 24, 'FI': 18, 'FR': 27,\n\t\t\t'GB': 22, 'IE': 22, 'IT': 27, 'LU': 20, 'NL': 18,\n\t\t\t'NO': 15, 'PL': 28, 'PT': 25, 'SE': 24\n\t\t};\n\n\t\t// Check if country is supported\n\t\tif (!(countryCode in ibanLengths)) {\n\t\t\treturn { valid: false, error: `Unsupported country code: ${countryCode}` };\n\t\t}\n\n\t\t// Check length\n\t\tconst expectedLength = ibanLengths[countryCode];\n\t\tif (cleanIBAN.length !== expectedLength) {\n\t\t\tconst countryNames = {\n\t\t\t\t'NL': 'Dutch', 'BE': 'Belgian', 'DE': 'German',\n\t\t\t\t'FR': 'French', 'GB': 'British', 'IT': 'Italian',\n\t\t\t\t'ES': 'Spanish', 'AT': 'Austrian', 'CH': 'Swiss'\n\t\t\t};\n\t\t\tconst countryName = countryNames[countryCode] || countryCode;\n\t\t\treturn {\n\t\t\t\tvalid: false,\n\t\t\t\terror: `${countryName} IBAN must be ${expectedLength} characters (you have ${cleanIBAN.length})`\n\t\t\t};\n\t\t}\n\n\t\t// Perform mod-97 checksum validation\n\t\tconst rearranged = cleanIBAN.substring(4) + cleanIBAN.substring(0, 4);\n\t\tconst numeric = rearranged.replace(/[A-Z]/g, char => char.charCodeAt(0) - 55);\n\t\tconst remainder = numeric.match(/.{1,9}/g).reduce((acc, chunk) => {\n\t\t\treturn (parseInt(acc + chunk) % 97).toString();\n\t\t}, '');\n\n\t\tif (remainder !== '1') {\n\t\t\treturn { valid: false, error: 'Invalid IBAN checksum - please check for typos' };\n\t\t}\n\n\t\t// Format IBAN with spaces\n\t\tconst formatted = cleanIBAN.match(/.{1,4}/g).join(' ');\n\n\t\treturn { valid: true, error: null, formatted: formatted };\n\t}\n\n\tderiveBICFromIBAN(iban) {\n\t\tif (!iban) return null;\n\n\t\tconst cleanIBAN = iban.replace(/\\s/g, '').toUpperCase();\n\n\t\tif (!cleanIBAN.startsWith('NL') || cleanIBAN.length < 8) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst bankCode = cleanIBAN.substring(4, 8);\n\t\tconst nlBicCodes = {\n\t\t\t'INGB': 'INGBNL2A',\n\t\t\t'ABNA': 'ABNANL2A',\n\t\t\t'RABO': 'RABONL2U',\n\t\t\t'TRIO': 'TRIONL2U',\n\t\t\t'SNSB': 'SNSBNL2A',\n\t\t\t'ASNB': 'ASNBNL21',\n\t\t\t'KNAB': 'KNABNL2H',\n\t\t\t'BUNQ': 'BUNQNL2A',\n\t\t\t'REVO': 'REVOLT21',\n\t\t\t'RBRB': 'RBRBNL21'\n\t\t};\n\n\t\treturn nlBicCodes[bankCode] || null;\n\t}\n\n\tgetBankNameFromIBAN(iban) {\n\t\tif (!iban) return null;\n\n\t\tconst cleanIBAN = iban.replace(/\\s/g, '').toUpperCase();\n\n\t\tif (!cleanIBAN.startsWith('NL') || cleanIBAN.length < 8) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst bankCode = cleanIBAN.substring(4, 8);\n\t\tconst bankNames = {\n\t\t\t'INGB': 'ING',\n\t\t\t'ABNA': 'ABN AMRO',\n\t\t\t'RABO': 'Rabobank',\n\t\t\t'TRIO': 'Triodos Bank',\n\t\t\t'SNSB': 'SNS Bank',\n\t\t\t'ASNB': 'ASN Bank',\n\t\t\t'KNAB': 'Knab',\n\t\t\t'BUNQ': 'Bunq',\n\t\t\t'RBRB': 'RegioBank'\n\t\t};\n\n\t\treturn bankNames[bankCode] || null;\n\t}\n\n\t// Legacy method for compatibility\n\tcollectAllData() {\n\t\treturn this.getAllFormData();\n\t}\n\n\tgetAdditionalFormData() {\n\t\t// Collect any additional form data not handled by step manager\n\t\treturn {\n\t\t\tselected_membership_type: this.state.get('selected_membership_type') || '',\n\t\t\tcustom_contribution_fee: this.state.get('custom_contribution_fee') || 0,\n\t\t\tuses_custom_amount: this.state.get('uses_custom_amount') || false,\n\t\t\tpayment_method: this.getPaymentMethod() || ''\n\t\t};\n\t}\n\n\t// Helper methods for state management\n\tsetPaymentMethod(method) {\n\t\tthis.paymentMethod = method;\n\t\tthis.state.set('payment_method', method);\n\t\tif (this.storageService) {\n\t\t\tthis.storageService.markDirty(); // Mark for auto-save\n\t\t}\n\t}\n\n\tgetPaymentMethod() {\n\t\treturn this.paymentMethod || this.state.get('payment_method') || '';\n\t}\n\n\t// Auto-save now handled by StorageService\n\tasync saveDraft() {\n\t\ttry {\n\t\t\tconst data = this.getAllFormData();\n\t\t\tconst result = this.storageService ? await this.storageService.saveDraft(data) : { success: false, message: 'Storage service not available' };\n\t\t\tconsole.log('Draft saved:', result);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tconsole.warn('Draft save failed:', error);\n\t\t\tif (this.errorHandler && typeof this.errorHandler.handleError === 'function') {\n\t\t\t\tthis.errorHandler.handleError(error, { context: 'draft_save' });\n\t\t\t}\n\t\t\treturn { success: false, error: error.message };\n\t\t}\n\t}\n\n\tasync loadExistingDraft() {\n\t\tif (!this.storageService) return;\n\n\t\ttry {\n\t\t\tconst result = await this.storageService.loadDraft();\n\t\t\tif (result.success && result.data) {\n\t\t\t\tconsole.log('Loading existing draft:', result);\n\t\t\t\tthis.populateFormWithData(result.data);\n\n\t\t\t\t// Show notification about loaded draft\n\t\t\t\tif (result.source === 'local' && this.errorHandler && typeof this.errorHandler.showNotification === 'function') {\n\t\t\t\t\tthis.errorHandler.showNotification('info', 'Draft Loaded',\n\t\t\t\t\t\t'Your previous application progress has been restored.');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.warn('Failed to load draft:', error);\n\t\t\t// Don't show error to user as this is not critical\n\t\t}\n\t}\n\n\tpopulateFormWithData(data) {\n\t\t// Populate form fields with loaded data\n\t\tObject.entries(data).forEach(([key, value]) => {\n\t\t\tconst $field = $(`[name=\"${key}\"], #${key}`);\n\t\t\tif ($field.length) {\n\t\t\t\tif ($field.attr('type') === 'checkbox') {\n\t\t\t\t\t$field.prop('checked', Boolean(value));\n\t\t\t\t} else if ($field.attr('type') === 'radio') {\n\t\t\t\t\t$field.filter(`[value=\"${value}\"]`).prop('checked', true);\n\t\t\t\t} else {\n\t\t\t\t\t$field.val(value);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Update state\n\t\tObject.entries(data).forEach(([key, value]) => {\n\t\t\tthis.state.set(key, value);\n\t\t});\n\n\t\t// Trigger change events to update UI\n\t\tsetTimeout(() => {\n\t\t\t$('input, select, textarea').trigger('change');\n\t\t}, 100);\n\t}\n\n\t// Enhanced submit method using new services\n\tasync submitApplication(data = null) {\n\t\tconsole.log('Application submission started');\n\n\t\ttry {\n\t\t\t// Get form data\n\t\t\tconst formData = data || this.getAllFormData();\n\t\t\tconsole.log('Submitting application data:', formData);\n\n\t\t\t// Validate we have required data\n\t\t\tif (!formData.first_name || !formData.last_name || !formData.email) {\n\t\t\t\tthrow new Error('Missing required fields: name and email are required');\n\t\t\t}\n\n\t\t\tif (!formData.selected_membership_type) {\n\t\t\t\tthrow new Error('No membership type selected');\n\t\t\t}\n\n\t\t\tconsole.log('Form data validation passed. API Service:', this.apiService);\n\n\t\t\t// Show loading state\n\t\t\tthis.showSubmissionLoading(true);\n\n\t\t\t// Submit via API service\n\t\t\tconst result = await this.apiService.submitApplication(formData);\n\t\t\tconsole.log('Application submitted successfully:', result);\n\n\t\t\t// Handle successful submission\n\t\t\tthis.handleSubmissionSuccess(result);\n\n\t\t\t// Clear draft after successful submission\n\t\t\tif (this.storageService) {\n\t\t\t\tthis.storageService.clearAllDrafts();\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Application submission failed:', error);\n\t\t\tthis.handleSubmissionError(error);\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tthis.showSubmissionLoading(false);\n\t\t}\n\t}\n\n\thandleSubmissionSuccess(result) {\n\t\t// Store application ID\n\t\tif (result.application_id && this.storageService) {\n\t\t\tthis.storageService.setSessionData('last_application_id', result.application_id);\n\t\t}\n\n\t\t// Show success message\n\t\tthis.showSuccessMessage(result);\n\n\t\t// Redirect to payment if needed\n\t\tif (result.payment_url) {\n\t\t\tthis.redirectToPayment(result.payment_url);\n\t\t}\n\t}\n\n\thandleSubmissionError(error) {\n\t\tif (this.errorHandler && typeof this.errorHandler.handleAPIError === 'function') {\n\t\t\tthis.errorHandler.handleAPIError(error, 'submit_application', {\n\t\t\t\tonRetry: () => this.submitApplication()\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.error('Submission error:', error);\n\t\t\tif (typeof frappe !== 'undefined' && frappe.msgprint) {\n\t\t\t\tfrappe.msgprint({\n\t\t\t\t\ttitle: 'Submission Error',\n\t\t\t\t\tmessage: error.message || 'An error occurred while submitting your application',\n\t\t\t\t\tindicator: 'red'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tshowSubmissionLoading(isLoading) {\n\t\tconst $submitBtn = $('#btn-submit, #submit-btn');\n\t\tif (isLoading) {\n\t\t\t$submitBtn.prop('disabled', true)\n\t\t\t\t.html('<i class=\"fa fa-spinner fa-spin\"></i> Processing...');\n\t\t} else {\n\t\t\t$submitBtn.prop('disabled', false)\n\t\t\t\t.html('Submit Application');\n\t\t}\n\t}\n\n\tshowSuccessMessage(result) {\n\t\tlet successHTML = '<div class=\"text-center py-5\">';\n\t\tsuccessHTML += '<div class=\"success-icon mb-4\">';\n\t\tsuccessHTML += '<i class=\"fa fa-check-circle text-success\" style=\"font-size: 4rem;\"></i>';\n\t\tsuccessHTML += '</div>';\n\t\tsuccessHTML += '<h2 class=\"text-success\">Application Submitted Successfully!</h2>';\n\n\t\tif (result.application_id) {\n\t\t\tsuccessHTML += '<div class=\"alert alert-info mx-auto\" style=\"max-width: 500px;\">';\n\t\t\tsuccessHTML += '<h4>Your Application ID: <strong>' + result.application_id + '</strong></h4>';\n\t\t\tsuccessHTML += '<p>Please save this ID for future reference.</p>';\n\t\t\tsuccessHTML += '</div>';\n\t\t}\n\n\t\tsuccessHTML += '<p class=\"lead\">Thank you for your application.</p>';\n\t\tsuccessHTML += '</div>';\n\n\t\t// Fix: Use ID selector instead of class selector\n\t\t$('#membership-application-form').html(successHTML);\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\tredirectToPayment(paymentUrl) {\n\t\tif (this.errorHandler && typeof this.errorHandler.showNotification === 'function') {\n\t\t\tthis.errorHandler.showNotification('info', 'Redirecting to Payment',\n\t\t\t\t'You will be redirected to complete payment in 3 seconds.');\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\twindow.location.href = paymentUrl;\n\t\t}, 3000);\n\t}\n\t// ====================\n\t// NEW METHODS FOR REFACTORED SYSTEM\n\t// ====================\n\n\tsetupFieldValidation() {\n\t\t// Set up real-time validation for form fields\n\t\tif (!this.validationService || typeof this.validationService.setupRealTimeValidation !== 'function') {\n\t\t\tconsole.log('ValidationService not available, skipping real-time validation setup');\n\t\t\treturn;\n\t\t}\n\n\t\tconst fieldMappings = {\n\t\t\t'first_name': 'firstName',\n\t\t\t'last_name': 'lastName',\n\t\t\t'email': 'email',\n\t\t\t'birth_date': 'birthDate',\n\t\t\t'address_line1': 'address',\n\t\t\t'city': 'city',\n\t\t\t'postal_code': 'postalCode',\n\t\t\t'country': 'country',\n\t\t\t'mobile_no': 'phone'\n\t\t};\n\n\t\tObject.entries(fieldMappings).forEach(([fieldId, validationKey]) => {\n\t\t\tconst $field = $(`#${fieldId}`);\n\t\t\tif ($field.length) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.validationService.setupRealTimeValidation($field[0], validationKey, {\n\t\t\t\t\t\tcountry: () => $('#country').val() || 'Netherlands'\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn(`Failed to setup validation for ${fieldId}:`, error);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tbindCustomValidationEvents() {\n\t\t// Email validation on blur\n\t\t$('#email').on('blur', async () => {\n\t\t\tconst email = $('#email').val();\n\t\t\tif (email) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await this.apiService.validateEmail(email);\n\t\t\t\t\tif (!result.valid) {\n\t\t\t\t\t\tif (this.errorHandler && typeof this.errorHandler.handleValidationError === 'function') {\n\t\t\t\t\t\t\tthis.errorHandler.handleValidationError('email', result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('Email validation failed:', result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn('Email validation failed:', error);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Postal code validation with chapter suggestion\n\t\t$('#postal_code').on('blur', async () => {\n\t\t\tconst postalCode = $('#postal_code').val();\n\t\t\tconst country = $('#country').val() || 'Netherlands';\n\n\t\t\tif (postalCode) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await this.apiService.validatePostalCode(postalCode, country);\n\t\t\t\t\tif (result.suggested_chapters && result.suggested_chapters.length > 0) {\n\t\t\t\t\t\tthis.showChapterSuggestion(result.suggested_chapters[0]);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn('Postal code validation failed:', error);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tbindAgeCalculation() {\n\t\t// Direct binding for birth date age calculation\n\t\t$(document).on('change blur', '#birth_date', () => {\n\t\t\tconsole.log('Birth date changed, calculating age...');\n\t\t\tthis.validateAndShowAge();\n\t\t});\n\t}\n\n\tvalidateAndShowAge() {\n\t\tconst birthDateField = $('#birth_date');\n\t\tif (birthDateField.length === 0) {\n\t\t\tconsole.warn('Birth date field not found');\n\t\t\treturn;\n\t\t}\n\n\t\tconst birthDate = birthDateField.val();\n\t\tif (!birthDate) {\n\t\t\t// Clear any existing warning and collapse the space\n\t\t\tconst warningDiv = $('#age-warning');\n\t\t\tif (warningDiv.length > 0) {\n\t\t\t\twarningDiv.css({\n\t\t\t\t\t'visibility': 'hidden',\n\t\t\t\t\t'height': '0px',\n\t\t\t\t\t'min-height': '0px',\n\t\t\t\t\t'padding': '0px',\n\t\t\t\t\t'margin': '0px'\n\t\t\t\t}).removeClass('alert-info alert-warning alert-danger');\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst age = this.calculateAge(birthDate);\n\t\tlet warningDiv = $('#age-warning');\n\n\t\t// Create warning div if it doesn't exist with reserved space to prevent layout shift\n\t\tif (warningDiv.length === 0) {\n\t\t\tbirthDateField.after('<div id=\"age-warning\" class=\"alert mt-2\" style=\"min-height: 20px; visibility: hidden;\"></div>');\n\t\t\twarningDiv = $('#age-warning');\n\t\t}\n\n\t\t// Clear previous states\n\t\tbirthDateField.removeClass('is-invalid is-valid');\n\t\tbirthDateField.siblings('.invalid-feedback').remove();\n\t\twarningDiv.css('visibility', 'hidden').removeClass('alert-info alert-warning alert-danger');\n\n\t\tif (age < 0) {\n\t\t\tbirthDateField.addClass('is-invalid');\n\t\t\tbirthDateField.after('<div class=\"invalid-feedback\">Birth date cannot be in the future</div>');\n\t\t\treturn;\n\t\t}\n\n\t\tbirthDateField.addClass('is-valid');\n\n\t\t// Show warnings for edge cases (only for ages under 12)\n\t\tif (age < 12) {\n\t\t\twarningDiv\n\t\t\t\t.addClass('alert-info')\n\t\t\t\t.html('<i class=\"fa fa-info-circle\"></i> Applicants under 12 may require parental consent')\n\t\t\t\t.css({\n\t\t\t\t\t'visibility': 'visible',\n\t\t\t\t\t'height': 'auto',\n\t\t\t\t\t'min-height': '20px'\n\t\t\t\t});\n\t\t} else {\n\t\t\t// For ages 12 and above, completely collapse the warning div\n\t\t\twarningDiv.css({\n\t\t\t\t'visibility': 'hidden',\n\t\t\t\t'height': '0px',\n\t\t\t\t'min-height': '0px',\n\t\t\t\t'padding': '0px',\n\t\t\t\t'margin': '0px'\n\t\t\t});\n\t\t}\n\n\t\tconsole.log(`Age calculated: ${age} years`);\n\t}\n\n\tcalculateAge(birthDate) {\n\t\tif (!birthDate) return 0;\n\n\t\ttry {\n\t\t\tconst birth = new Date(birthDate);\n\t\t\tconst today = new Date();\n\n\t\t\t// Check for invalid dates\n\t\t\tif (isNaN(birth.getTime())) {\n\t\t\t\tconsole.warn('Invalid birth date:', birthDate);\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (birth > today) {\n\t\t\t\treturn -1; // Future date\n\t\t\t}\n\n\t\t\tlet age = today.getFullYear() - birth.getFullYear();\n\n\t\t\t// Adjust for birthday not yet reached this year\n\t\t\tif (today.getMonth() < birth.getMonth() ||\n                (today.getMonth() === birth.getMonth() && today.getDate() < birth.getDate())) {\n\t\t\t\tage--;\n\t\t\t}\n\n\t\t\treturn Math.max(0, age); // Ensure non-negative age\n\t\t} catch (error) {\n\t\t\tconsole.error('Error calculating age:', error);\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tshowChapterSuggestion(chapter) {\n\t\t$('#suggested-chapter-name').text(chapter.name);\n\t\t$('#suggested-chapter').show();\n\n\t\t$('#accept-suggestion').off('click').on('click', () => {\n\t\t\t$('#selected_chapter').val(chapter.name);\n\t\t\t$('#suggested-chapter').hide();\n\t\t});\n\t}\n\n\tsetupPersonalInfoStep() {\n\t\tconsole.log('Setting up personal info step');\n\t\t// Any specific setup for personal info step\n\t}\n\n\tsetupAddressStep() {\n\t\tconsole.log('Setting up address step');\n\t\t// Ensure country dropdown is populated\n\t\tif ($('#country option').length <= 1) {\n\t\t\tconst countries = this.state.get('countries');\n\t\t\tthis.loadCountries(countries);\n\t\t}\n\t}\n\n\tsetupMembershipStep() {\n\t\tconsole.log('Setting up membership step');\n\n\t\t// Show chapter selection\n\t\t$('#chapter-selection').show();\n\n\t\t// Ensure membership types are loaded\n\t\tif ($('.membership-type-card').length === 0) {\n\t\t\tthis.loadMembershipTypes(this.membershipTypes);\n\t\t}\n\n\t\t// Set up income calculator if enabled\n\t\tthis.setupIncomeCalculator();\n\t}\n\n\tsetupVolunteerStep() {\n\t\tconsole.log('Setting up volunteer step');\n\t\t// Set up volunteer interest toggle\n\t\t$('#interested_in_volunteering').off('change').on('change', function() {\n\t\t\t$('#volunteer-details').toggle($(this).is(':checked'));\n\t\t});\n\n\t\t// Set up volunteer skill add button\n\t\tthis.setupVolunteerSkills();\n\t}\n\n\tsetupVolunteerSkills() {\n\t\t// Add event handler for the add skill button\n\t\t$(document).off('click', '.add-skill').on('click', '.add-skill', (e) => {\n\t\t\te.preventDefault();\n\t\t\tthis.addSkillRow();\n\t\t});\n\n\t\t// Add event handler for remove skill buttons\n\t\t$(document).off('click', '.remove-skill').on('click', '.remove-skill', (e) => {\n\t\t\te.preventDefault();\n\t\t\t$(e.target).closest('.skill-row').remove();\n\t\t});\n\t}\n\n\taddSkillRow() {\n\t\tconst skillContainer = $('.skill-row').parent();\n\t\tconst newSkillRow = `\n            <div class=\"skill-row\" style=\"margin-bottom: 10px;\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" class=\"form-control\" name=\"skill_name[]\"\n                               placeholder=\"${frappe._('Skill name (e.g. Event Planning, IT Support)')}\" />\n                    </div>\n                    <div class=\"col-md-4\">\n                        <select class=\"form-control\" name=\"skill_level[]\">\n                            <option value=\"\">${frappe._('Level')}</option>\n                            <option value=\"Beginner\">${frappe._('Beginner')}</option>\n                            <option value=\"Intermediate\">${frappe._('Intermediate')}</option>\n                            <option value=\"Advanced\">${frappe._('Advanced')}</option>\n                            <option value=\"Expert\">${frappe._('Expert')}</option>\n                        </select>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <button type=\"button\" class=\"btn btn-sm btn-danger remove-skill\">−</button>\n                    </div>\n                </div>\n            </div>\n        `;\n\n\t\t// Find the existing skill rows and add after the last one\n\t\tconst lastSkillRow = $('.skill-row').last();\n\t\tlastSkillRow.after(newSkillRow);\n\n\t\tconsole.log('Added new skill row');\n\t}\n\n\tsetupPaymentStep() {\n\t\t// Setup payment method selection and bind events for showing/hiding payment details\n\t\tthis.bindPaymentMethodEvents();\n\n\t\tif ($('.payment-method-option').length === 0) {\n\t\t\tconst paymentMethods = this.state.get('paymentMethods');\n\t\t\tthis.loadPaymentMethods(paymentMethods);\n\t\t}\n\n\t\t// Add a small delay to ensure DOM is ready, then set up field switching\n\t\tsetTimeout(() => {\n\t\t\tconsole.log('SetupPaymentStep: Checking for existing elements');\n\t\t\tconsole.log('SetupPaymentStep: Payment method radios found:', $('input[name=\"payment_method_selection\"]').length);\n\t\t\tconsole.log('SetupPaymentStep: Payment method options found:', $('.payment-method-option').length);\n\t\t\tconsole.log('SetupPaymentStep: Bank account details section found:', $('#bank-account-details').length);\n\t\t\tconsole.log('SetupPaymentStep: Bank account details section found:', $('#bank-account-details').length);\n\t\t\tconsole.log('SetupPaymentStep: Bank transfer notice section found:', $('#bank-transfer-notice').length);\n\t\t\tconsole.log('SetupPaymentStep: Bank transfer details section found:', $('#bank-transfer-details').length);\n\n\t\t\t// Ensure any pre-selected payment method shows the correct form fields\n\t\t\tconst selectedMethod = $('input[name=\"payment_method_selection\"]:checked').val() || $('#payment_method').val();\n\t\t\tif (selectedMethod) {\n\t\t\t\tconsole.log('Setting up payment step with pre-selected method:', selectedMethod);\n\t\t\t\t// Use the new handlePaymentMethodChange method for consistency\n\t\t\t\tthis.handlePaymentMethodChange(selectedMethod);\n\t\t\t} else {\n\t\t\t\tconsole.log('SetupPaymentStep: No pre-selected payment method found');\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\tsetupConfirmationStep() {\n\t\tconsole.log('Setting up confirmation step');\n\t\t// Update confirmation step with form data\n\t\tthis.updateConfirmationDisplay();\n\n\t\t// Ensure the summary is updated after a short delay to handle any async state updates\n\t\tsetTimeout(() => {\n\t\t\tthis.updateConfirmationDisplay();\n\t\t}, 100);\n\t}\n\n\tsetupIncomeCalculator() {\n\t\tconsole.log('Setting up income calculator');\n\n\t\t// Check if income calculator is enabled and available\n\t\tif (!$('#income-calculator').length) {\n\t\t\tconsole.log('Income calculator not available in this form');\n\t\t\treturn;\n\t\t}\n\n\t\t// Calculator is always visible when enabled, so just set up functionality\n\t\tthis.bindIncomeCalculatorEvents();\n\t}\n\n\tbindIncomeCalculatorEvents() {\n\t\t// Income calculator variables\n\t\tconst calculatorSettings = {\n\t\t\tenabled: true,\n\t\t\tpercentage: parseFloat($('#calc-income-percentage').text()) || 0.5\n\t\t};\n\t\tlet calculatedAmount = 0;\n\n\t\tfunction calculateContribution() {\n\t\t\tconst monthlyIncome = parseFloat($('#calc-monthly-income').val()) || 0;\n\t\t\tconst paymentInterval = $('#calc-payment-interval').val();\n\n\t\t\tif (monthlyIncome <= 0) {\n\t\t\t\t$('#calc-result').hide();\n\t\t\t\t$('#apply-calculated-amount').hide();\n\t\t\t\tcalculatedAmount = 0;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Calculate based on percentage of monthly income\n\t\t\tconst monthlyContribution = monthlyIncome * (calculatorSettings.percentage / 100);\n\t\t\tlet displayAmount, displayFrequency;\n\n\t\t\tif (paymentInterval === 'quarterly') {\n\t\t\t\tdisplayAmount = monthlyContribution * 3; // 3 months worth\n\t\t\t\tdisplayFrequency = 'per quarter';\n\t\t\t} else if (paymentInterval === 'annually') {\n\t\t\t\tdisplayAmount = monthlyContribution * 12; // 12 months worth\n\t\t\t\tdisplayFrequency = 'per year';\n\t\t\t} else {\n\t\t\t\tdisplayAmount = monthlyContribution;\n\t\t\t\tdisplayFrequency = 'per month';\n\t\t\t}\n\n\t\t\tcalculatedAmount = displayAmount;\n\n\t\t\t// Format currency\n\t\t\tconst formattedAmount = '€' + displayAmount.toFixed(2);\n\n\t\t\t// Update display\n\t\t\t$('#calc-suggested-amount').text(formattedAmount);\n\t\t\t$('#calc-payment-frequency').text(' ' + displayFrequency);\n\t\t\t$('#calc-result').show();\n\t\t\t$('#apply-calculated-amount').show();\n\t\t}\n\n\t\t// Bind calculator events\n\t\t$('#calc-monthly-income, #calc-payment-interval').on('input change', calculateContribution);\n\n\t\t// Apply calculated amount to main form\n\t\t$('#apply-calculated-amount').on('click', () => {\n\t\t\tif (calculatedAmount > 0) {\n\t\t\t\tthis.applyCalculatedAmount(calculatedAmount, $('#calc-payment-interval').val());\n\t\t\t}\n\t\t});\n\t}\n\n\tapplyCalculatedAmount(amount, paymentInterval) {\n\t\tconsole.log('Applying calculated amount:', amount, 'with interval:', paymentInterval);\n\n\t\t// Find the first applicable membership type based on payment interval\n\t\tconst targetMembershipType = this.findMembershipTypeByInterval(paymentInterval);\n\n\t\tif (targetMembershipType) {\n\t\t\t// Select the matching membership type card\n\t\t\tconst membershipCard = $(`.membership-type-card[data-type=\"${targetMembershipType.name}\"]`);\n\t\t\tconsole.log('Found membership card:', membershipCard.length > 0, 'for type:', targetMembershipType.name);\n\n\t\t\tif (membershipCard.length) {\n\t\t\t\t// First select the membership type by clicking the standard select button\n\t\t\t\tconst selectButton = membershipCard.find('.select-membership');\n\t\t\t\tif (selectButton.length) {\n\t\t\t\t\tselectButton.click();\n\t\t\t\t\tconsole.log('Clicked select button for membership type:', targetMembershipType.name);\n\t\t\t\t} else {\n\t\t\t\t\t// Fallback: click the card itself\n\t\t\t\t\tmembershipCard.click();\n\t\t\t\t\tconsole.log('Clicked membership card for type:', targetMembershipType.name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Wait a moment for the membership type selection to process\n\t\t\tsetTimeout(() => {\n\t\t\t\t// Look for \"Choose Amount\" button (toggle-custom class) in the selected membership card\n\t\t\t\tconst chooseAmountButton = membershipCard.find('.toggle-custom');\n\t\t\t\tconsole.log('Found choose amount button:', chooseAmountButton.length > 0);\n\n\t\t\t\tif (chooseAmountButton.length) {\n\t\t\t\t\t// Click the \"Choose Amount\" button to show custom amount section\n\t\t\t\t\tchooseAmountButton.click();\n\t\t\t\t\tconsole.log('Clicked choose amount button');\n\n\t\t\t\t\t// Wait for custom amount section to appear\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Set the calculated amount in the custom input\n\t\t\t\t\t\tconst customInput = membershipCard.find('.custom-amount-input');\n\t\t\t\t\t\tconsole.log('Found custom input:', customInput.length > 0);\n\n\t\t\t\t\t\tif (customInput.length) {\n\t\t\t\t\t\t\tcustomInput.val(amount.toFixed(2)).trigger('input');\n\t\t\t\t\t\t\tconsole.log('Set custom amount:', amount.toFixed(2));\n\n\t\t\t\t\t\t\t// Trigger selection with the custom amount\n\t\t\t\t\t\t\tthis.selectMembershipType(membershipCard, true, amount);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show confirmation message\n\t\t\t\t\t\tif (typeof frappe !== 'undefined' && frappe.show_alert) {\n\t\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\t\tmessage: `Calculated amount (€${amount.toFixed(2)}) applied to ${targetMembershipType.name} membership`,\n\t\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Scroll to the membership selection area\n\t\t\t\t\t\t$('html, body').animate({\n\t\t\t\t\t\t\tscrollTop: $('#membership-types').offset().top - 100\n\t\t\t\t\t\t}, 500);\n\n\t\t\t\t\t}, 300);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('Could not find choose amount button for membership type');\n\t\t\t\t\t// Fallback: try to set any custom amount input directly\n\t\t\t\t\tconst customInput = membershipCard.find('.custom-amount-input');\n\t\t\t\t\tif (customInput.length) {\n\t\t\t\t\t\tcustomInput.val(amount.toFixed(2)).trigger('input');\n\t\t\t\t\t\tthis.selectMembershipType(membershipCard, true, amount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 400);\n\t\t} else {\n\t\t\tconsole.warn('Could not find matching membership type for payment interval:', paymentInterval);\n\n\t\t\t// Fallback: Try to apply to first available membership type with custom amount support\n\t\t\tconst firstCardWithCustom = $('.membership-type-card').filter((index, card) => {\n\t\t\t\treturn $(card).find('.toggle-custom').length > 0;\n\t\t\t}).first();\n\n\t\t\tif (firstCardWithCustom.length) {\n\t\t\t\tconsole.log('Using fallback: first membership type with custom amount support');\n\n\t\t\t\t// Select the membership type first\n\t\t\t\tconst selectButton = firstCardWithCustom.find('.select-membership');\n\t\t\t\tif (selectButton.length) {\n\t\t\t\t\tselectButton.click();\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst chooseAmountButton = firstCardWithCustom.find('.toggle-custom');\n\t\t\t\t\tif (chooseAmountButton.length) {\n\t\t\t\t\t\tchooseAmountButton.click();\n\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tconst customInput = firstCardWithCustom.find('.custom-amount-input');\n\t\t\t\t\t\t\tif (customInput.length) {\n\t\t\t\t\t\t\t\tcustomInput.val(amount.toFixed(2)).trigger('input');\n\t\t\t\t\t\t\t\tthis.selectMembershipType(firstCardWithCustom, true, amount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 300);\n\t\t\t\t\t}\n\t\t\t\t}, 400);\n\n\t\t\t\tif (typeof frappe !== 'undefined' && frappe.show_alert) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: `Calculated amount (€${amount.toFixed(2)}) applied to available membership type`,\n\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Last resort fallback\n\t\t\t\tif (typeof frappe !== 'undefined' && frappe.show_alert) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: `Calculated amount (€${amount.toFixed(2)}) ready - please select a membership type and choose custom amount`,\n\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfindMembershipTypeByInterval(paymentInterval) {\n\t\tconsole.log('Finding membership type for interval:', paymentInterval);\n\n\t\t// Get available membership types from state\n\t\tconst membershipTypes = this.state.get('membershipTypes') || this.membershipTypes || [];\n\t\tconsole.log('Available membership types:', membershipTypes.length, membershipTypes);\n\n\t\t// Updated to use billing_period mapping\n\t\tconst billingPeriodMapping = {\n\t\t\t'monthly': 'Monthly',\n\t\t\t'quarterly': 'Quarterly',\n\t\t\t'annually': 'Annual'\n\t\t};\n\n\t\t// Uses billing_period instead of legacy subscription_period\n\t\tconst targetPeriod = billingPeriodMapping[paymentInterval];\n\t\tif (targetPeriod) {\n\t\t\tfor (const membershipType of membershipTypes) {\n\t\t\t\t// Updated to use billing_period\n\t\t\t\tconst billingPeriod = membershipType.billing_period || membershipType.legacy_period;\n\t\t\t\tif (billingPeriod && billingPeriod.toLowerCase() === targetPeriod.toLowerCase()) {\n\t\t\t\t\tconsole.log('Found matching membership type by billing_period:', membershipType);\n\t\t\t\t\treturn membershipType;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Second try: Fallback to name/description matching for legacy support\n\t\tconst intervalMatchers = {\n\t\t\t'monthly': ['month', 'maand', 'monthly'],\n\t\t\t'quarterly': ['quarter', 'kwartaal', 'quarterly', 'driemaandelijk'],\n\t\t\t'annually': ['year', 'jaar', 'annual', 'yearly', 'jaarlijks']\n\t\t};\n\n\t\tconst matchers = intervalMatchers[paymentInterval] || [];\n\n\t\t// Find first membership type that matches the interval in name or description\n\t\tfor (const membershipType of membershipTypes) {\n\t\t\tconst name = (membershipType.name || membershipType.membership_type_name || '').toLowerCase();\n\t\t\tconst description = (membershipType.description || '').toLowerCase();\n\n\t\t\tfor (const matcher of matchers) {\n\t\t\t\tif (name.includes(matcher) || description.includes(matcher)) {\n\t\t\t\t\tconsole.log('Found matching membership type by name/description:', membershipType);\n\t\t\t\t\treturn membershipType;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Third try: Smart fallback based on interval preference\n\t\tif (membershipTypes.length > 0) {\n\t\t\t// For annually, prefer the type with highest amount (typically annual)\n\t\t\tif (paymentInterval === 'annually') {\n\t\t\t\tconst highestAmount = membershipTypes.reduce((prev, current) => {\n\t\t\t\t\tconst prevAmount = parseFloat(prev.amount || 0);\n\t\t\t\t\tconst currentAmount = parseFloat(current.amount || 0);\n\t\t\t\t\treturn currentAmount > prevAmount ? current : prev;\n\t\t\t\t});\n\t\t\t\tconsole.log('Using highest amount membership type for annual:', highestAmount);\n\t\t\t\treturn highestAmount;\n\t\t\t}\n\n\t\t\t// For monthly/quarterly, use first available\n\t\t\tconsole.log('Using first available membership type:', membershipTypes[0]);\n\t\t\treturn membershipTypes[0];\n\t\t}\n\n\t\tconsole.warn('No membership types available');\n\t\treturn null;\n\t}\n\n\tloadCountries(countries) {\n\t\tif (!countries || countries.length === 0) return;\n\n\t\tconst select = $('#country');\n\t\tselect.empty().append('<option value=\"\">Select Country...</option>');\n\n\t\tcountries.forEach(country => {\n\t\t\tselect.append(`<option value=\"${country.name}\">${country.name}</option>`);\n\t\t});\n\n\t\tselect.val('Netherlands');\n\t}\n\n\tloadMembershipTypes(membershipTypes) {\n\t\tif (!membershipTypes || membershipTypes.length === 0) return;\n\n\t\tconst container = $('#membership-types');\n\t\tcontainer.empty();\n\n\t\t// Load detailed membership type information with custom amount support\n\t\tconst loadPromises = membershipTypes.map(type => {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tif (this.apiService && typeof this.apiService.call === 'function') {\n\t\t\t\t\tthis.apiService.call('verenigingen.api.membership_application.get_membership_type_details', { membership_type: type.name })\n\t\t\t\t\t\t.then(result => resolve(result || type))\n\t\t\t\t\t\t.catch(() => resolve(type)); // Fallback to basic type data\n\t\t\t\t} else {\n\t\t\t\t\t// Fallback - enhance basic type with custom amount support\n\t\t\t\t\tconst baseAmount = parseFloat(type.amount) || 50; // fallback to 50 if amount is invalid\n\t\t\t\t\tconst enhancedType = {\n\t\t\t\t\t\t...type,\n\t\t\t\t\t\tallow_custom_amount: true,\n\t\t\t\t\t\tminimum_amount: baseAmount * 0.5,\n\t\t\t\t\t\tmaximum_amount: baseAmount * 5,\n\t\t\t\t\t\tsuggested_amounts: [\n\t\t\t\t\t\t\t{ amount: baseAmount, label: 'Standard' },\n\t\t\t\t\t\t\t{ amount: baseAmount * 1.5, label: 'Supporter' },\n\t\t\t\t\t\t\t{ amount: baseAmount * 2, label: 'Patron' },\n\t\t\t\t\t\t\t{ amount: baseAmount * 3, label: 'Benefactor' }\n\t\t\t\t\t\t]\n\t\t\t\t\t};\n\t\t\t\t\tconsole.log('Enhanced type with suggested amounts:', enhancedType);\n\t\t\t\t\tresolve(enhancedType);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tPromise.all(loadPromises).then(detailedTypes => {\n\t\t\tdetailedTypes.forEach(type => {\n\t\t\t\tif (type.error) {\n\t\t\t\t\tconsole.error('Error loading membership type:', type.error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst card = this.createMembershipCard(type);\n\t\t\t\tcontainer.append(card);\n\t\t\t});\n\n\t\t\tthis.bindMembershipEvents();\n\t\t\tconsole.log('Loaded', detailedTypes.length, 'membership types with custom amount support');\n\t\t});\n\t}\n\n\tloadPaymentMethods(paymentMethods) {\n\t\tif (!paymentMethods || paymentMethods.length === 0) {\n\t\t\tthis.showPaymentMethodFallback();\n\t\t\treturn;\n\t\t}\n\n\t\tconst container = $('#payment-methods-list');\n\t\tcontainer.empty();\n\n\t\tpaymentMethods.forEach(method => {\n\t\t\tconst card = this.createPaymentMethodCard(method);\n\t\t\tcontainer.append(card);\n\t\t});\n\n\t\tthis.bindPaymentEvents();\n\n\t\t// Also bind the payment method field switching events after DOM is updated\n\t\tconsole.log('Main app: Re-binding payment method events after loading methods');\n\t\tthis.bindPaymentMethodEvents();\n\n\t\t// Auto-select first method to show appropriate fields\n\t\tif (paymentMethods.length > 0) {\n\t\t\tconsole.log('Main app: Auto-selecting first payment method:', paymentMethods[0].name);\n\t\t\tthis.selectPaymentMethod(paymentMethods[0].name);\n\t\t}\n\t}\n\n\tupdateApplicationSummary() {\n\t\tconst summary = $('#application-summary');\n\t\tif (summary.length === 0) {\n\t\t\tconsole.warn('Application summary element not found');\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = this.getAllFormData();\n\n\t\tlet content = '<div class=\"row\">';\n\n\t\t// Personal Information Column\n\t\tcontent += '<div class=\"col-md-6\">';\n\t\tcontent += '<h6>Personal Information</h6>';\n\t\tcontent += `<p><strong>Name:</strong> ${data.first_name || ''} ${data.last_name || ''}</p>`;\n\t\tcontent += `<p><strong>Email:</strong> ${data.email || ''}</p>`;\n\n\t\tif (data.birth_date) {\n\t\t\tcontent += `<p><strong>Birth Date:</strong> ${data.birth_date}</p>`;\n\t\t}\n\n\t\tif (data.contact_number) {\n\t\t\tcontent += `<p><strong>Contact:</strong> ${data.contact_number}</p>`;\n\t\t}\n\t\tcontent += '</div>';\n\n\t\t// Address Information Column\n\t\tcontent += '<div class=\"col-md-6\">';\n\t\tcontent += '<h6>Address</h6>';\n\t\tif (data.address_line1) {\n\t\t\tcontent += `<p><strong>Address:</strong> ${data.address_line1}</p>`;\n\t\t\tcontent += `<p>${data.city || ''} ${data.postal_code || ''}</p>`;\n\t\t\tcontent += `<p>${data.country || ''}</p>`;\n\t\t}\n\t\tcontent += '</div>';\n\n\t\tcontent += '</div>';\n\n\t\t// Membership Information Row\n\t\tcontent += '<div class=\"row mt-3\">';\n\t\tcontent += '<div class=\"col-md-6\">';\n\t\tcontent += '<h6>Membership</h6>';\n\n\t\tif (data.selected_membership_type) {\n\t\t\tconst membershipType = this.membershipTypes && this.membershipTypes.find(t => t.name === data.selected_membership_type);\n\n\t\t\tif (membershipType) {\n\t\t\t\tconst typeName = membershipType.membership_type_name || membershipType.name;\n\t\t\t\tcontent += `<p><strong>Type:</strong> ${typeName}</p>`;\n\n\t\t\t\t// Format amount with billing period\n\t\t\t\tconst amount = data.custom_contribution_fee || membershipType.amount;\n\t\t\t\tconst period = membershipType.billing_period || 'year';\n\t\t\t\t// Use simple currency formatting to avoid HTML structure issues\n\t\t\t\tconst currency = membershipType.currency || 'EUR';\n\t\t\t\tconst formattedAmount = `${currency} ${parseFloat(amount).toFixed(2)}`;\n\t\t\t\tconst periodText = period.toLowerCase() === 'quarterly' ? 'Quarterly' : `per ${period}`;\n\t\t\t\tcontent += `<p><strong>Amount:</strong> ${formattedAmount} ${periodText}</p>`;\n\n\t\t\t\tif (data.uses_custom_amount) {\n\t\t\t\t\tcontent += '<p><em>Custom contribution amount</em></p>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontent += `<p><strong>Type:</strong> ${data.selected_membership_type}</p>`;\n\t\t\t\tif (data.custom_contribution_fee) {\n\t\t\t\t\tconst formattedAmount = `EUR ${parseFloat(data.custom_contribution_fee).toFixed(2)}`;\n\t\t\t\t\tcontent += `<p><strong>Amount:</strong> ${formattedAmount}</p>`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcontent += '<p><em>No membership type selected</em></p>';\n\t\t}\n\n\t\tif (data.selected_chapter) {\n\t\t\tcontent += `<p><strong>Chapter:</strong> ${data.selected_chapter}</p>`;\n\t\t}\n\t\tcontent += '</div>';\n\n\t\t// Volunteer and Payment Information Column\n\t\tcontent += '<div class=\"col-md-6\">';\n\t\tcontent += '<h6>Additional Information</h6>';\n\n\t\tif (data.interested_in_volunteering) {\n\t\t\tcontent += '<p><strong>Volunteering:</strong> Yes</p>';\n\t\t\tif (data.volunteer_availability) {\n\t\t\t\tcontent += `<p><strong>Availability:</strong> ${data.volunteer_availability}</p>`;\n\t\t\t}\n\t\t}\n\n\t\tif (data.payment_method) {\n\t\t\tcontent += `<p><strong>Payment Method:</strong> ${data.payment_method}</p>`;\n\n\t\t\t// Show bank details for SEPA Direct Debit\n\t\t\tif (data.payment_method === 'SEPA Direct Debit') {\n\t\t\t\tif (data.iban) {\n\t\t\t\t\tcontent += `<p><strong>IBAN:</strong> ${data.iban}</p>`;\n\t\t\t\t}\n\t\t\t\tif (data.bank_account_name) {\n\t\t\t\t\tcontent += `<p><strong>Account Holder:</strong> ${data.bank_account_name}</p>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Show bank transfer account details for Bank Transfer\n\t\t\tif (data.payment_method === 'Bank Transfer') {\n\t\t\t\tif (data.transfer_iban) {\n\t\t\t\t\tcontent += `<p><strong>Transfer Account (IBAN):</strong> ${data.transfer_iban}</p>`;\n\t\t\t\t}\n\t\t\t\tif (data.transfer_account_name) {\n\t\t\t\t\tcontent += `<p><strong>Account Holder:</strong> ${data.transfer_account_name}</p>`;\n\t\t\t\t}\n\t\t\t\tif (!data.transfer_iban && !data.transfer_account_name) {\n\t\t\t\t\tcontent += '<p><em>Account details will be provided via email</em></p>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tcontent += '<p><em>No payment method selected</em></p>';\n\t\t}\n\n\t\tcontent += '</div>';\n\t\tcontent += '</div>';\n\n\t\tsummary.html(content);\n\t}\n\n\tbindPaymentMethodEvents() {\n\t\tconsole.log('Main app: Binding payment method events');\n\n\t\t// Bind events for payment method selection to show/hide appropriate form sections\n\t\t// Use a more robust selector to catch all payment method radio buttons\n\t\tconst self = this;\n\t\t$(document).off('change', 'input[name=\"payment_method_selection\"], .payment-method-radio').on('change', 'input[name=\"payment_method_selection\"], .payment-method-radio', function() {\n\t\t\tconst selectedMethod = $(this).val();\n\t\t\tconsole.log('Main app: Payment method selection changed to:', selectedMethod);\n\n\t\t\t// Use the new handlePaymentMethodChange method for consistent behavior\n\t\t\tself.handlePaymentMethodChange(selectedMethod);\n\t\t});\n\n\t\t// Format card number input\n\t\t$('#card_number').off('input').on('input', function() {\n\t\t\tlet value = $(this).val().replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\n\t\t\tlet formattedValue = value.match(/.{1,4}/g)?.join(' ') || value;\n\t\t\t$(this).val(formattedValue);\n\t\t});\n\n\t\t// Format IBAN inputs (for both direct debit and bank transfer)\n\t\t$('#iban, #transfer_iban').off('input').on('input', function() {\n\t\t\tlet value = $(this).val().replace(/\\s+/g, '').toUpperCase();\n\t\t\tlet formattedValue = value.match(/.{1,4}/g)?.join(' ') || value;\n\t\t\t$(this).val(formattedValue);\n\t\t});\n\t}\n\n\tupdateConfirmationDisplay() {\n\t\tconsole.log('Updating confirmation display');\n\t\tconst data = this.getAllFormData();\n\t\tconsole.log('Form data for confirmation:', data);\n\n\t\t// Personal Information\n\t\tconst fullName = `${data.first_name || ''} ${data.middle_name ? data.middle_name + ' ' : ''}${data.last_name || ''}`.trim();\n\t\t$('#confirm-name').text(fullName || 'Not provided');\n\t\t$('#confirm-email').text(data.email || 'Not provided');\n\t\t$('#confirm-phone').text(data.mobile_no || 'Not provided');\n\n\t\t// Address Information\n\t\tconst address = `${data.address_line1 || ''}, ${data.city || ''}, ${data.postal_code || ''}`.replace(/^,\\s*|,\\s*$/g, '');\n\t\t$('#confirm-address').text(address || 'Not provided');\n\t\t$('#confirm-city').text(`${data.city || ''}, ${data.postal_code || ''}`.replace(/^,\\s*|,\\s*$/g, '') || 'Not provided');\n\t\t$('#confirm-country').text(data.country || 'Not provided');\n\n\t\t// Membership Information\n\t\tconst membershipType = this.state.get('selected_membership_type') || 'Not selected';\n\t\tconst membershipAmount = this.state.get('custom_contribution_fee') || 0;\n\t\t$('#confirm-membership-type').text(membershipType);\n\t\t$('#confirm-membership-fee').text(membershipAmount ? `€${membershipAmount}` : 'Not set');\n\n\t\t// Payment Information\n\t\tconst paymentMethod = $('input[name=\"payment_method\"]:checked').val() || 'Not selected';\n\t\t$('#confirm-payment-method').text(paymentMethod.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase()));\n\n\t\t// Bank Details for bank transfer or SEPA direct debit\n\t\tif (paymentMethod === 'bank_transfer' || paymentMethod === 'sepa_direct_debit') {\n\t\t\tconst iban = data.iban || '';\n\t\t\t// Use bank_account_name since that's what gets stored in the database\n\t\t\tconst accountHolder = data.bank_account_name || '';\n\n\t\t\tif (iban || accountHolder) {\n\t\t\t\tlet bankInfo = '';\n\t\t\t\tif (iban) {\n\t\t\t\t\t// Validate IBAN when showing in confirmation\n\t\t\t\t\tconst validation = this.performIBANValidation(iban);\n\t\t\t\t\tif (validation.valid) {\n\t\t\t\t\t\t// Show formatted IBAN with bank info\n\t\t\t\t\t\tconst bankName = this.getBankNameFromIBAN(iban);\n\t\t\t\t\t\tbankInfo += `IBAN: ${validation.formatted}`;\n\t\t\t\t\t\tif (bankName) {\n\t\t\t\t\t\t\tbankInfo += ` (${bankName})`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Also show BIC if derivable\n\t\t\t\t\t\tconst bic = this.deriveBICFromIBAN(iban);\n\t\t\t\t\t\tif (bic) {\n\t\t\t\t\t\t\tbankInfo += `<br>BIC: ${bic}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Show IBAN with error indication\n\t\t\t\t\t\tbankInfo += `<span class=\"text-danger\">IBAN: ${iban} - ${validation.error}</span>`;\n\t\t\t\t\t\t// Optionally, you could prevent form submission here\n\t\t\t\t\t\tif (typeof frappe !== 'undefined' && frappe.msgprint) {\n\t\t\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\t\t\ttitle: 'Invalid IBAN',\n\t\t\t\t\t\t\t\tmessage: `The IBAN you entered is invalid: ${validation.error}. Please go back to the payment step to correct it.`,\n\t\t\t\t\t\t\t\tindicator: 'red'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (accountHolder) {\n\t\t\t\t\tif (bankInfo) bankInfo += '<br>';\n\t\t\t\t\tbankInfo += `Account Holder: ${accountHolder}`;\n\t\t\t\t}\n\t\t\t\t$('#confirm-bank-info').html(bankInfo);\n\t\t\t\t$('#confirm-bank-details').show();\n\t\t\t} else {\n\t\t\t\t$('#confirm-bank-details').hide();\n\t\t\t}\n\t\t} else {\n\t\t\t$('#confirm-bank-details').hide();\n\t\t}\n\n\t\t// Volunteering Information\n\t\tconst volunteering = $('#interested_in_volunteering').is(':checked') ? 'Yes, interested in volunteering' : 'Not interested in volunteering';\n\t\t$('#confirm-volunteering').text(volunteering);\n\t}\n\n\tupdateFinalApplicationSummary() {\n\t\t// Legacy function - now redirects to new confirmation display\n\t\tthis.updateConfirmationDisplay();\n\t}\n\n\t// Legacy method implementations for compatibility\n\tcreateMembershipCard(type) {\n\t\t// Ensure we have a valid amount\n\t\tconst amount = type.amount || 0;\n\t\tconst membershipTypeName = type.membership_type_name || type.name || 'Unknown';\n\t\tconst billingPeriod = type.billing_period || 'year';\n\n\t\tconsole.log('Creating membership card for:', { name: type.name, amount, type });\n\n\t\tlet cardHTML = '<div class=\"membership-type-card\" data-type=\"' + (type.name || '') + '\" data-amount=\"' + amount + '\">';\n\t\tcardHTML += '<h5>' + membershipTypeName + '</h5>';\n\t\tcardHTML += '<div class=\"membership-price\">';\n\t\tcardHTML += frappe.format(amount, {fieldtype: 'Currency'}) + ' / ' + billingPeriod;\n\t\tcardHTML += '</div>';\n\t\tcardHTML += '<p class=\"membership-description\">' + (type.description || '') + '</p>';\n\n\t\t// Add custom amount section if allowed\n\t\tif (type.allow_custom_amount) {\n\t\t\tcardHTML += '<div class=\"custom-amount-section\" style=\"display: none;\">';\n\t\t\tcardHTML += '<label>Choose Your Contribution:</label>';\n\t\t\tcardHTML += '<div class=\"amount-suggestion-pills\">';\n\n\t\t\tif (type.suggested_amounts && type.suggested_amounts.length > 0) {\n\t\t\t\ttype.suggested_amounts.forEach(function(suggestion) {\n\t\t\t\t\tconst suggestionAmount = parseFloat(suggestion.amount) || 0;\n\t\t\t\t\tconsole.log('Creating amount pill:', { label: suggestion.label, amount: suggestionAmount });\n\t\t\t\t\tcardHTML += '<span class=\"amount-pill\" data-amount=\"' + suggestionAmount + '\">';\n\t\t\t\t\tcardHTML += frappe.format(suggestionAmount, {fieldtype: 'Currency'});\n\t\t\t\t\tcardHTML += '<br><small>' + suggestion.label + '</small>';\n\t\t\t\t\tcardHTML += '</span>';\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcardHTML += '</div>';\n\t\t\tcardHTML += '<div class=\"mt-3\">';\n\t\t\tcardHTML += '<label>Or enter custom amount:</label>';\n\t\t\tconst minAmount = type.minimum_amount || amount;\n\t\t\tcardHTML += '<input type=\"number\" class=\"form-control custom-amount-input\" ';\n\t\t\tcardHTML += 'min=\"' + minAmount + '\" step=\"0.01\" placeholder=\"Enter amount\">';\n\t\t\tcardHTML += '<small class=\"text-muted\">Minimum: ' + frappe.format(minAmount, {fieldtype: 'Currency'}) + '</small>';\n\t\t\tcardHTML += '</div>';\n\t\t\tcardHTML += '</div>';\n\t\t}\n\n\t\tcardHTML += '<div class=\"btn-group mt-3\">';\n\t\tcardHTML += '<button type=\"button\" class=\"btn btn-primary select-membership\">';\n\t\tcardHTML += 'Select' + (type.allow_custom_amount ? ' Standard' : '');\n\t\tcardHTML += '</button>';\n\n\t\tif (type.allow_custom_amount) {\n\t\t\tcardHTML += '<button type=\"button\" class=\"btn btn-outline-secondary toggle-custom\">';\n\t\t\tcardHTML += 'Choose Amount';\n\t\t\tcardHTML += '</button>';\n\t\t}\n\t\tcardHTML += '</div>';\n\n\t\tif (type.allow_custom_amount && type.custom_amount_note) {\n\t\t\tcardHTML += '<div class=\"mt-2\">';\n\t\t\tcardHTML += '<small class=\"text-muted\">' + type.custom_amount_note + '</small>';\n\t\t\tcardHTML += '</div>';\n\t\t}\n\n\t\tcardHTML += '</div>';\n\n\t\treturn $(cardHTML);\n\t}\n\n\tcreatePaymentMethodCard(method) {\n\t\tlet methodCardHTML = '<div class=\"payment-method-option\" data-method=\"' + method.name + '\">';\n\t\tmethodCardHTML += '<div class=\"d-flex align-items-center\">';\n\t\tmethodCardHTML += '<div class=\"payment-method-icon\">';\n\t\tmethodCardHTML += '<i class=\"fa ' + (method.icon || 'fa-university') + '\"></i>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '<div class=\"payment-method-info flex-grow-1\">';\n\t\tmethodCardHTML += '<h6>' + method.name + '</h6>';\n\t\tmethodCardHTML += '<div class=\"text-muted\">';\n\t\tmethodCardHTML += method.description + '<br>';\n\t\tmethodCardHTML += '<small><strong>Processing:</strong> ' + method.processing_time + '</small>';\n\n\t\tif (method.requires_mandate) {\n\t\t\tmethodCardHTML += '<br><small class=\"text-warning\"><strong>Note:</strong> ' + method.note + '</small>';\n\t\t}\n\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '<div class=\"payment-method-selector\">';\n\t\tmethodCardHTML += '<div class=\"form-check\">';\n\n\t\tconst radioId = 'payment_' + method.name.replace(/\\s+/g, '_').toLowerCase();\n\t\tmethodCardHTML += '<input class=\"form-check-input payment-method-radio\" type=\"radio\" ';\n\t\tmethodCardHTML += 'name=\"payment_method_selection\" value=\"' + method.name + '\" id=\"' + radioId + '\">';\n\t\tmethodCardHTML += '<label class=\"form-check-label\" for=\"' + radioId + '\">';\n\t\tmethodCardHTML += 'Select';\n\t\tmethodCardHTML += '</label>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '</div>';\n\n\t\treturn $(methodCardHTML);\n\t}\n\n\tbindMembershipEvents() {\n\t\tconsole.log('Binding membership type events - START');\n\t\tconsole.trace('bindMembershipEvents called from:');\n\n\t\t// Standard selection\n\t\t$('.select-membership').off('click').on('click', (e) => {\n\t\t\tconst card = $(e.target).closest('.membership-type-card');\n\t\t\tthis.selectMembershipType(card, false);\n\t\t});\n\n\t\t// Toggle custom amount section\n\t\t$('.toggle-custom').off('click').on('click', (e) => {\n\t\t\tconst card = $(e.target).closest('.membership-type-card');\n\t\t\tconst customSection = card.find('.custom-amount-section');\n\t\t\tconst button = $(e.target);\n\n\t\t\tif (customSection.is(':visible')) {\n\t\t\t\tcustomSection.hide();\n\t\t\t\tbutton.text('Choose Amount');\n\t\t\t\tcard.find('.custom-amount-input').val('');\n\t\t\t\tcard.find('.amount-pill').removeClass('selected');\n\t\t\t\tthis.selectMembershipType(card, false);\n\t\t\t} else {\n\t\t\t\t$('.custom-amount-section').hide();\n\t\t\t\t$('.toggle-custom').text('Choose Amount');\n\n\t\t\t\tcustomSection.show();\n\t\t\t\tbutton.text('Standard Amount');\n\n\t\t\t\tconst standardAmount = parseFloat(card.data('amount'));\n\t\t\t\tif (!isNaN(standardAmount) && standardAmount > 0) {\n\t\t\t\t\tcard.find(`.amount-pill[data-amount=\"${standardAmount}\"]`).addClass('selected');\n\t\t\t\t\tcard.find('.custom-amount-input').val(standardAmount);\n\t\t\t\t\tthis.selectMembershipType(card, true, standardAmount);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Amount pill selection\n\t\t$(document).off('click', '.amount-pill').on('click', '.amount-pill', (e) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tconsole.log('Amount pill clicked');\n\t\t\tconst pill = $(e.target).closest('.amount-pill'); // Use closest to handle clicks on nested elements\n\t\t\tconst card = pill.closest('.membership-type-card');\n\t\t\tconst rawAmount = pill.data('amount');\n\t\t\tconst amount = parseFloat(rawAmount);\n\n\t\t\tconsole.log('Pill selection details:', {\n\t\t\t\tpillText: pill.text().trim(),\n\t\t\t\trawAmount,\n\t\t\t\tparsedAmount: amount,\n\t\t\t\tisValid: !isNaN(amount),\n\t\t\t\tcardType: card.data('type'),\n\t\t\t\tpillHtml: pill[0].outerHTML\n\t\t\t});\n\n\t\t\tif (isNaN(amount) || amount <= 0) {\n\t\t\t\tconsole.error('Invalid amount from pill:', rawAmount, 'pill:', pill[0]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcard.find('.amount-pill').removeClass('selected');\n\t\t\tpill.addClass('selected');\n\n\t\t\t// Set input value with the valid amount\n\t\t\tcard.find('.custom-amount-input').val(amount);\n\n\t\t\tthis.selectMembershipType(card, true, amount);\n\t\t});\n\n\t\t// Custom amount input\n\t\t$('.custom-amount-input').off('input blur').on('input blur', (e) => {\n\t\t\tconst input = $(e.target);\n\t\t\tconst card = input.closest('.membership-type-card');\n\t\t\tconst amount = parseFloat(input.val());\n\t\t\tconst minAmount = parseFloat(input.attr('min'));\n\n\t\t\tcard.find('.amount-pill').removeClass('selected');\n\n\t\t\tif (isNaN(amount) || amount <= 0) {\n\t\t\t\tinput.addClass('is-invalid');\n\t\t\t\tinput.siblings('.invalid-feedback').remove();\n\t\t\t\tinput.after('<div class=\"invalid-feedback\">Please enter a valid amount</div>');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (amount < minAmount) {\n\t\t\t\tinput.addClass('is-invalid');\n\t\t\t\tinput.siblings('.invalid-feedback').remove();\n\t\t\t\tinput.after(`<div class=\"invalid-feedback\">Amount must be at least ${frappe.format(minAmount, {fieldtype: 'Currency'})}</div>`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tinput.removeClass('is-invalid').addClass('is-valid');\n\t\t\tinput.siblings('.invalid-feedback').remove();\n\n\t\t\tthis.selectMembershipType(card, true, amount);\n\t\t});\n\t}\n\n\tselectMembershipType(card, isCustom = false, customAmount = null) {\n\t\tconst membershipType = card.data('type');\n\t\tconst cardAmount = card.data('amount');\n\n\t\tconsole.log('selectMembershipType called with:', {\n\t\t\tmembershipType,\n\t\t\tcardAmount,\n\t\t\tisCustom,\n\t\t\tcustomAmount\n\t\t});\n\n\t\t// Handle null/undefined amounts\n\t\tif (!cardAmount && cardAmount !== 0) {\n\t\t\tconsole.error('Card amount is null/undefined for type:', membershipType);\n\t\t\treturn;\n\t\t}\n\n\t\tconst standardAmount = parseFloat(cardAmount);\n\t\tif (isNaN(standardAmount)) {\n\t\t\tconsole.error('Invalid standard amount for type:', membershipType, 'amount:', cardAmount);\n\t\t\treturn;\n\t\t}\n\n\t\tlet finalAmount = standardAmount;\n\t\tlet usesCustomAmount = false;\n\n\t\tif (isCustom && customAmount !== null && customAmount !== undefined) {\n\t\t\tconst parsedCustomAmount = parseFloat(customAmount);\n\t\t\tif (!isNaN(parsedCustomAmount) && parsedCustomAmount > 0) {\n\t\t\t\tfinalAmount = parsedCustomAmount;\n\t\t\t\tusesCustomAmount = finalAmount !== standardAmount;\n\t\t\t} else {\n\t\t\t\tconsole.error('Invalid custom amount:', customAmount, 'parsed:', parsedCustomAmount);\n\t\t\t\tconsole.error('Falling back to standard amount:', standardAmount);\n\t\t\t\t// Fall back to standard amount instead of returning early\n\t\t\t\tfinalAmount = standardAmount;\n\t\t\t\tusesCustomAmount = false;\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('Selecting membership type:', { membershipType, finalAmount, usesCustomAmount });\n\n\t\t$('.membership-type-card').removeClass('selected');\n\t\tcard.addClass('selected');\n\n\t\t// Update state - both new and legacy formats\n\t\tthis.state.set('membership', {\n\t\t\ttype: membershipType,\n\t\t\tamount: finalAmount,\n\t\t\tisCustom: usesCustomAmount\n\t\t});\n\n\t\t// Legacy compatibility\n\t\tthis.state.set('selected_membership_type', membershipType);\n\t\tthis.state.set('custom_contribution_fee', finalAmount);\n\t\tthis.state.set('uses_custom_amount', usesCustomAmount);\n\n\t\t$('#membership-type-error').hide();\n\n\t\t// Update membership fee display\n\t\tthis.updateMembershipFeeDisplay(membershipType, finalAmount, usesCustomAmount);\n\n\t\tif (usesCustomAmount) {\n\t\t\tthis.validateCustomAmount(membershipType, finalAmount);\n\t\t}\n\t}\n\n\tupdateMembershipFeeDisplay(membershipType, amount, isCustom) {\n\t\tconst feeDisplay = $('#membership-fee-display');\n\t\tconst feeDetails = $('#fee-details');\n\n\t\tif (!membershipType || !amount) {\n\t\t\tfeeDisplay.hide();\n\t\t\treturn;\n\t\t}\n\n\t\t// Find the membership type details\n\t\tconst membershipTypeDetails = this.membershipTypes && this.membershipTypes.find(t => t.name === membershipType);\n\t\tconst membershipTypeName = membershipTypeDetails ?\n\t\t\t(membershipTypeDetails.membership_type_name || membershipTypeDetails.name) :\n\t\t\tmembershipType;\n\n\t\tconst billingPeriod = membershipTypeDetails ?\n\t\t\t(membershipTypeDetails.billing_period || 'year') :\n\t\t\t'year';\n\n\t\tconst periodText = billingPeriod.toLowerCase() === 'quarterly' ? 'Quarterly' : `per ${billingPeriod}`;\n\n\t\t// Format the amount\n\t\tconst formattedAmount = `EUR ${parseFloat(amount).toFixed(2)}`;\n\n\t\t// Build the display content\n\t\tlet content = `<p><strong>Type:</strong> ${membershipTypeName}</p>`;\n\t\tcontent += `<p><strong>Amount:</strong> ${formattedAmount} ${periodText}`;\n\n\t\tif (isCustom) {\n\t\t\tcontent += ' <span class=\"badge badge-secondary\">Custom Amount</span>';\n\t\t}\n\n\t\tcontent += '</p>';\n\n\t\tif (membershipTypeDetails && membershipTypeDetails.description) {\n\t\t\tcontent += `<p><strong>Description:</strong> ${membershipTypeDetails.description}</p>`;\n\t\t}\n\n\t\tfeeDetails.html(content);\n\t\tfeeDisplay.show();\n\n\t\tconsole.log('Updated membership fee display:', { membershipType, amount, isCustom });\n\t}\n\n\tasync validateCustomAmount(membershipType, amount) {\n\t\ttry {\n\t\t\tconst result = await this.apiService.validateCustomAmount(membershipType, amount);\n\t\t\tif (result && !result.valid) {\n\t\t\t\t$('#membership-type-error').show().text(result.message);\n\t\t\t} else {\n\t\t\t\t$('#membership-type-error').hide();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Custom amount validation error:', error);\n\t\t}\n\t}\n\n\tbindPaymentEvents() {\n\t\t$('.payment-method-option').off('click').on('click', (e) => {\n\t\t\tconst methodName = $(e.target).closest('.payment-method-option').data('method');\n\t\t\tthis.selectPaymentMethod(methodName);\n\t\t});\n\n\t\t$('.payment-method-radio').off('change').on('change', (e) => {\n\t\t\tif ($(e.target).is(':checked')) {\n\t\t\t\tthis.selectPaymentMethod($(e.target).val());\n\t\t\t}\n\t\t});\n\t}\n\n\tselectPaymentMethod(methodName) {\n\t\tif (!methodName) return;\n\n\t\tconsole.log('Selecting payment method:', methodName);\n\n\t\t// Update state\n\t\tthis.setPaymentMethod(methodName);\n\n\t\t// Update UI\n\t\tif ($('#payment-method-fallback').is(':visible')) {\n\t\t\t$('#payment_method').val(methodName);\n\t\t} else {\n\t\t\t$('.payment-method-option').removeClass('selected');\n\t\t\t$(`.payment-method-option[data-method=\"${methodName}\"]`).addClass('selected');\n\n\t\t\t// Update radio button and trigger change event for field switching\n\t\t\tconst radioButton = $(`.payment-method-radio[value=\"${methodName}\"]`);\n\t\t\tconsole.log('Main app: Found radio button for', methodName, ':', radioButton.length);\n\t\t\tradioButton.prop('checked', true).trigger('change');\n\t\t}\n\n\t\t// Apply the working pattern from member doctype for dynamic field switching\n\t\tthis.handlePaymentMethodChange(methodName);\n\n\t\t// Show/hide SEPA notice\n\t\tif (methodName === 'SEPA Direct Debit') {\n\t\t\t$('#sepa-mandate-notice').show();\n\t\t} else {\n\t\t\t$('#sepa-mandate-notice').hide();\n\t\t}\n\t}\n\n\t// Implement payment method field switching similar to member doctype UIUtils.handle_payment_method_change\n\thandlePaymentMethodChange(methodName) {\n\t\tconst is_direct_debit = methodName === 'SEPA Direct Debit';\n\t\tconst is_bank_transfer = methodName === 'Bank Transfer';\n\t\tconst show_bank_details = ['SEPA Direct Debit', 'Bank Transfer'].includes(methodName);\n\n\t\tconsole.log('Main app: Handling payment method change to:', methodName);\n\t\tconsole.log('Main app: is_direct_debit:', is_direct_debit, 'is_bank_transfer:', is_bank_transfer);\n\n\t\t// Hide all payment detail sections first\n\t\t$('#bank-account-details').hide();\n\t\t$('#bank-transfer-notice').hide();\n\t\t$('#bank-transfer-details').hide();\n\n\t\t// Show appropriate section based on payment method\n\t\tif (is_direct_debit) {\n\t\t\tconsole.log('Main app: Showing bank account details for SEPA Direct Debit');\n\t\t\t$('#bank-account-details').show();\n\n\t\t\t// Set required attributes for bank account fields\n\t\t\t$('#iban, #bank_account_name, #account_holder_name').prop('required', true);\n\t\t} else if (is_bank_transfer) {\n\t\t\tconsole.log('Main app: Showing bank transfer details with account fields');\n\t\t\t$('#bank-transfer-details').show();\n\n\t\t\t// Bank transfer fields are optional (for payment matching purposes)\n\t\t\t$('#iban, #bank_account_name, #account_holder_name').prop('required', false);\n\t\t\t$('#transfer_iban, #transfer_account_name').prop('required', false);\n\t\t}\n\n\t\t// Clear validation errors when switching payment methods\n\t\t$('#bank-account-details input, #bank-transfer-details input').removeClass('is-invalid is-valid');\n\t\t$('.invalid-feedback').hide();\n\t}\n\n\tshowPaymentMethodFallback() {\n\t\tconst container = $('#payment-methods-list');\n\t\tconst fallback = $('#payment-method-fallback');\n\n\t\tcontainer.hide();\n\t\tfallback.show();\n\n\t\tconst select = $('#payment_method');\n\t\tselect.empty();\n\n\t\tconst fallbackMethods = [\n\t\t\t{\n\t\t\t\tname: 'Bank Transfer',\n\t\t\t\tdescription: 'One-time bank transfer',\n\t\t\t\ticon: 'fa-university',\n\t\t\t\tprocessing_time: '1-3 business days',\n\t\t\t\trequires_mandate: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SEPA Direct Debit',\n\t\t\t\tdescription: 'SEPA Direct Debit (recurring)',\n\t\t\t\ticon: 'fa-repeat',\n\t\t\t\tprocessing_time: '5-7 days first collection',\n\t\t\t\trequires_mandate: true\n\t\t\t}\n\t\t];\n\n\t\tfallbackMethods.forEach(method => {\n\t\t\tselect.append(`<option value=\"${method.name}\">${method.name} - ${method.description}</option>`);\n\t\t});\n\n\t\t// Bind change event\n\t\tselect.off('change').on('change', (e) => {\n\t\t\tconst selectedMethod = $(e.target).val();\n\t\t\tif (selectedMethod) {\n\t\t\t\tthis.selectPaymentMethod(selectedMethod);\n\t\t\t}\n\t\t});\n\n\t\t// Auto-select first option\n\t\tif (fallbackMethods.length > 0) {\n\t\t\tconst defaultMethod = fallbackMethods[0].name;\n\t\t\tselect.val(defaultMethod);\n\t\t\tthis.selectPaymentMethod(defaultMethod);\n\t\t}\n\t}\n}\n\n\n// ===================================\n// 2. STATE MANAGEMENT (LEGACY COMPATIBILITY)\n// ===================================\n\nclass ApplicationState {\n\tconstructor() {\n\t\tthis.data = {\n\t\t\tcurrentStep: 1,\n\t\t\tpersonalInfo: {},\n\t\t\taddress: {},\n\t\t\tmembership: {},\n\t\t\tvolunteer: {},\n\t\t\tpayment: {},\n\t\t\t// Legacy compatibility\n\t\t\tselected_membership_type: '',\n\t\t\tcustom_contribution_fee: 0,\n\t\t\tuses_custom_amount: false\n\t\t};\n\n\t\tthis.listeners = [];\n\t}\n\n\tsubscribe(listener) {\n\t\tthis.listeners.push(listener);\n\t}\n\n\tnotify(change) {\n\t\tthis.listeners.forEach(listener => {\n\t\t\ttry {\n\t\t\t\tlistener(change);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('State listener error:', error);\n\t\t\t}\n\t\t});\n\t}\n\n\tset(key, value) {\n\t\tconst oldValue = this.data[key];\n\t\tthis.data[key] = value;\n\t\tthis.notify({ key, oldValue, newValue: value });\n\t}\n\n\tget(key) {\n\t\treturn this.data[key];\n\t}\n\n\tgetData() {\n\t\treturn { ...this.data };\n\t}\n\n\tsetInitialData(data) {\n\t\tthis.data.membershipTypes = data.membership_types || [];\n\t\tthis.data.countries = data.countries || [];\n\t\tthis.data.chapters = data.chapters || [];\n\t\tthis.data.volunteerAreas = data.volunteer_areas || [];\n\t\tthis.data.paymentMethods = data.payment_methods || [];\n\t}\n\n\tget currentStep() {\n\t\treturn this.data.currentStep;\n\t}\n\n\tincrementStep() {\n\t\tif (this.data.currentStep < 5) {\n\t\t\tthis.set('currentStep', this.data.currentStep + 1);\n\t\t}\n\t}\n\n\tdecrementStep() {\n\t\tif (this.data.currentStep > 1) {\n\t\t\tthis.set('currentStep', this.data.currentStep - 1);\n\t\t}\n\t}\n}\n\n// ===================================\n// 3. UTILITY CLASSES FOR COMPATIBILITY\n// ===================================\n\n// FormValidator already defined at the top of the file\n\nclass PersonalInfoStep extends BaseStep {\n\tconstructor() {\n\t\tsuper('personal-info');\n\t}\n\n\trender(state) {\n\t\t// Ensure age warning element exists only if birth_date field exists\n\t\tconst birthDateField = $('#birth_date');\n\t\tif (birthDateField.length > 0 && $('#age-warning').length === 0) {\n\t\t\tbirthDateField.after('<div id=\"age-warning\" class=\"alert mt-2\" style=\"display: none;\"></div>');\n\t\t}\n\t}\n\n\tbindEvents() {\n\t\t// Use delegated event handlers to avoid null reference errors\n\t\t$(document).off('blur', '#email').on('blur', '#email', () => this.validateEmail());\n\t\t$(document).off('change blur', '#birth_date').on('change blur', '#birth_date', () => this.validateAge());\n\t}\n\n\tasync validateEmail() {\n\t\tconst emailField = $('#email');\n\t\tif (emailField.length === 0) {\n\t\t\tconsole.warn('Email field not found');\n\t\t\treturn true;\n\t\t}\n\n\t\tconst email = emailField.val();\n\t\tif (!email) return true;\n\n\t\ttry {\n\t\t\t// Check if membershipApp and its API are available\n\t\t\tif (typeof membershipApp === 'undefined' || !membershipApp.apiService) {\n\t\t\t\tconsole.warn('MembershipApp API not available, skipping email validation');\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst result = await membershipApp.apiService.validateEmail(email);\n\n\t\t\tif (!result.valid) {\n\t\t\t\tif (this.validator) {\n\t\t\t\t\tthis.validator.showError('#email', result.message);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.validator) {\n\t\t\t\tthis.validator.showSuccess('#email');\n\t\t\t}\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tconsole.error('Email validation error:', error);\n\t\t\treturn true; // Don't block on API errors\n\t\t}\n\t}\n\n\tvalidateAge() {\n\t\tconst birthDateField = $('#birth_date');\n\t\tif (birthDateField.length === 0) {\n\t\t\tconsole.warn('Birth date field not found');\n\t\t\treturn true;\n\t\t}\n\n\t\tconst birthDate = birthDateField.val();\n\t\tif (!birthDate) return true;\n\n\t\tconst age = this.calculateAge(birthDate);\n\t\tlet warningDiv = $('#age-warning');\n\n\t\t// Create warning div if it doesn't exist\n\t\tif (warningDiv.length === 0) {\n\t\t\tbirthDateField.after('<div id=\"age-warning\" class=\"alert mt-2\" style=\"display: none;\"></div>');\n\t\t\twarningDiv = $('#age-warning');\n\t\t}\n\n\t\t// Clear previous states\n\t\tbirthDateField.removeClass('is-invalid is-valid');\n\t\tbirthDateField.siblings('.invalid-feedback').remove();\n\t\twarningDiv.hide().removeClass('alert-info alert-warning alert-danger');\n\n\t\tif (age < 0) {\n\t\t\tif (this.validator) {\n\t\t\t\tthis.validator.showError('#birth_date', 'Birth date cannot be in the future');\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tbirthDateField.addClass('is-valid');\n\n\t\t// Show warnings for edge cases\n\t\tif (age < 12) {\n\t\t\twarningDiv\n\t\t\t\t.addClass('alert-info')\n\t\t\t\t.html('<i class=\"fa fa-info-circle\"></i> Applicants under 12 may require parental consent')\n\t\t\t\t.show();\n\t\t} else if (age > 100) {\n\t\t\twarningDiv\n\t\t\t\t.addClass('alert-warning')\n\t\t\t\t.html(`<i class=\"fa fa-exclamation-triangle\"></i> Please verify birth date - applicant would be ${age} years old`)\n\t\t\t\t.show();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tcalculateAge(birthDate) {\n\t\tif (!birthDate) return 0;\n\n\t\ttry {\n\t\t\tconst birth = new Date(birthDate);\n\t\t\tconst today = new Date();\n\n\t\t\t// Check for invalid dates\n\t\t\tif (isNaN(birth.getTime())) {\n\t\t\t\tconsole.warn('Invalid birth date:', birthDate);\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (birth > today) {\n\t\t\t\treturn -1; // Future date\n\t\t\t}\n\n\t\t\tlet age = today.getFullYear() - birth.getFullYear();\n\n\t\t\t// Adjust for birthday not yet reached this year\n\t\t\tif (today.getMonth() < birth.getMonth() ||\n                (today.getMonth() === birth.getMonth() && today.getDate() < birth.getDate())) {\n\t\t\t\tage--;\n\t\t\t}\n\n\t\t\treturn Math.max(0, age); // Ensure non-negative age\n\t\t} catch (error) {\n\t\t\tconsole.error('Error calculating age:', error);\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tasync validate() {\n\t\tconst fields = ['first_name', 'last_name', 'email', 'birth_date'];\n\t\tlet valid = true;\n\n\t\tfor (const field of fields) {\n\t\t\tif (!this.validator.validateRequired(`#${field}`)) {\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t}\n\n\t\tif ($('#email').val() && !await this.validateEmail()) {\n\t\t\tvalid = false;\n\t\t}\n\n\t\tif ($('#birth_date').val() && !this.validateAge()) {\n\t\t\tvalid = false;\n\t\t}\n\n\t\treturn valid;\n\t}\n\n\tgetData() {\n\t\treturn {\n\t\t\tfirst_name: $('#first_name').val() || '',\n\t\t\tmiddle_name: $('#middle_name').val() || '',\n\t\t\tlast_name: $('#last_name').val() || '',\n\t\t\temail: $('#email').val() || '',\n\t\t\tmobile_no: $('#mobile_no').val() || '',\n\t\t\tphone: $('#phone').val() || '',\n\t\t\tbirth_date: $('#birth_date').val() || '',\n\t\t\tpronouns: $('#pronouns').val() || ''\n\t\t};\n\t}\n}\n\nclass AddressStep extends BaseStep {\n\tconstructor() {\n\t\tsuper('address');\n\t}\n\n\trender(state) {\n\t\t// Load countries into dropdown\n\t\tif (state.get('countries')) {\n\t\t\tthis.loadCountries(state.get('countries'));\n\t\t}\n\t}\n\n\tloadCountries(countries) {\n\t\tconst select = $('#country');\n\n\t\t// Only populate if empty (avoid duplicate loading)\n\t\tif (select.children().length <= 1) {\n\t\t\tselect.empty().append('<option value=\"\">Select Country...</option>');\n\n\t\t\tcountries.forEach(country => {\n\t\t\t\tselect.append(`<option value=\"${country.name}\">${country.name}</option>`);\n\t\t\t});\n\n\t\t\t// Set Netherlands as default\n\t\t\tselect.val('Netherlands');\n\t\t}\n\t}\n\n\tbindEvents() {\n\t\t$('#postal_code').off('blur').on('blur', () => this.suggestChapter());\n\t}\n\n\tasync suggestChapter() {\n\t\tconst postalCode = $('#postal_code').val();\n\t\tconst country = $('#country').val() || 'Netherlands';\n\n\t\tif (!postalCode) return;\n\n\t\ttry {\n\t\t\tif (typeof membershipApp === 'undefined' || !membershipApp.apiService) {\n\t\t\t\tconsole.warn('MembershipApp API not available, skipping postal code validation');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst result = await membershipApp.apiService.validatePostalCode(postalCode, country);\n\n\t\t\tif (result.suggested_chapters && result.suggested_chapters.length > 0) {\n\t\t\t\tconst suggestion = result.suggested_chapters[0];\n\t\t\t\t$('#suggested-chapter-name').text(suggestion.name);\n\t\t\t\t$('#suggested-chapter').show();\n\n\t\t\t\t$('#accept-suggestion').off('click').on('click', function() {\n\t\t\t\t\t$('#selected_chapter').val(suggestion.name);\n\t\t\t\t\t$('#suggested-chapter').hide();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$('#suggested-chapter').hide();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Chapter suggestion error:', error);\n\t\t}\n\t}\n\n\tasync validate() {\n\t\tconst fields = ['address_line1', 'city', 'postal_code', 'country'];\n\t\tlet valid = true;\n\n\t\tfor (const field of fields) {\n\t\t\tif (!this.validator.validateRequired(`#${field}`)) {\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t}\n\n\t\treturn valid;\n\t}\n\n\tgetData() {\n\t\treturn {\n\t\t\taddress_line1: $('#address_line1').val() || '',\n\t\t\taddress_line2: $('#address_line2').val() || '',\n\t\t\tcity: $('#city').val() || '',\n\t\t\tstate: $('#state').val() || '',\n\t\t\tpostal_code: $('#postal_code').val() || '',\n\t\t\tcountry: $('#country').val() || '',\n\t\t\tselected_chapter: $('#selected_chapter').val() || ''\n\t\t};\n\t}\n}\n\nclass MembershipStep extends BaseStep {\n\tconstructor() {\n\t\tsuper('membership');\n\t}\n\n\trender(state) {\n\t\tif (state.get('membershipTypes')) {\n\t\t\tthis.renderMembershipTypes(state.get('membershipTypes'));\n\t\t}\n\t}\n\n\trenderMembershipTypes(membershipTypes) {\n\t\tconst container = $('#membership-types');\n\t\tcontainer.empty();\n\n\t\t// Get detailed information for each membership type\n\t\tconst loadPromises = membershipTypes.map(type => {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'verenigingen.api.membership_application.get_membership_type_details',\n\t\t\t\t\targs: { membership_type: type.name },\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tresolve(r.message || type);\n\t\t\t\t\t},\n\t\t\t\t\terror: function() {\n\t\t\t\t\t\tresolve(type); // Fallback to basic type data\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tPromise.all(loadPromises).then(detailedTypes => {\n\t\t\tdetailedTypes.forEach(type => {\n\t\t\t\tif (type.error) {\n\t\t\t\t\tconsole.error('Error loading membership type:', type.error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst card = this.createMembershipCard(type);\n\t\t\t\tcontainer.append(card);\n\t\t\t});\n\n\t\t\tthis.bindMembershipEvents();\n\t\t});\n\t}\n}\n\nclass VolunteerStep extends BaseStep {\n\tconstructor() {\n\t\tsuper('volunteer');\n\t}\n\n\trender(state) {\n\t\tif (state.get('volunteerAreas')) {\n\t\t\tthis.renderVolunteerAreas(state.get('volunteerAreas'));\n\t\t}\n\n\t\t// Load chapters into dropdown\n\t\tif (state.get('chapters')) {\n\t\t\tthis.loadChapters(state.get('chapters'));\n\t\t}\n\t}\n\n\tloadChapters(chapters) {\n\t\tconst select = $('#selected_chapter');\n\n\t\t// Only populate if empty (avoid duplicate loading)\n\t\tif (select.children().length <= 1) {\n\t\t\tselect.empty().append('<option value=\"\">Select a chapter...</option>');\n\n\t\t\tchapters.forEach(chapter => {\n\t\t\t\tconst displayText = chapter.region ? `${chapter.name} - ${chapter.region}` : chapter.name;\n\t\t\t\tselect.append(`<option value=\"${chapter.name}\">${displayText}</option>`);\n\t\t\t});\n\n\t\t\t// Show chapter selection section if chapters are available\n\t\t\tif (chapters.length > 0) {\n\t\t\t\t$('#chapter-selection').show();\n\t\t\t}\n\t\t}\n\t}\n\n\trenderVolunteerAreas(areas) {\n\t\tconst container = $('#volunteer-interests');\n\t\tcontainer.empty();\n\n\t\tareas.forEach(area => {\n\t\t\tconst checkboxId = 'interest_' + area.name.replace(/\\s+/g, '_');\n\t\t\tlet checkboxHTML = '<div class=\"form-check\">';\n\t\t\tcheckboxHTML += '<input class=\"form-check-input\" type=\"checkbox\" ';\n\t\t\tcheckboxHTML += 'value=\"' + area.name + '\" id=\"' + checkboxId + '\">';\n\t\t\tcheckboxHTML += '<label class=\"form-check-label\" for=\"' + checkboxId + '\">';\n\t\t\tcheckboxHTML += area.name;\n\n\t\t\tif (area.description) {\n\t\t\t\tcheckboxHTML += '<small class=\"text-muted d-block\">' + area.description + '</small>';\n\t\t\t}\n\n\t\t\tcheckboxHTML += '</label>';\n\t\t\tcheckboxHTML += '</div>';\n\n\t\t\tcontainer.append($(checkboxHTML));\n\t\t});\n\t}\n\n\tbindEvents() {\n\t\t$('#interested_in_volunteering').off('change').on('change', function() {\n\t\t\t$('#volunteer-details').toggle($(this).is(':checked'));\n\t\t});\n\n\t\t$('#application_source').off('change').on('change', function() {\n\t\t\t$('#source-details-container').toggle($(this).val() === 'Other');\n\t\t});\n\t}\n\n\tasync validate() {\n\t\t// Volunteer step is mostly optional, just return true\n\t\treturn true;\n\t}\n\n\tgetData() {\n\t\tconst interests = [];\n\t\t$('#volunteer-interests input[type=\"checkbox\"]:checked').each(function() {\n\t\t\tinterests.push($(this).val());\n\t\t});\n\n\t\treturn {\n\t\t\tinterested_in_volunteering: $('#interested_in_volunteering').is(':checked'),\n\t\t\tvolunteer_availability: $('#volunteer_availability').val() || '',\n\t\t\tvolunteer_experience_level: $('#volunteer_experience_level').val() || '',\n\t\t\tvolunteer_interests: interests,\n\t\t\tnewsletter_opt_in: $('#newsletter_opt_in').is(':checked'),\n\t\t\tapplication_source: $('#application_source').val() || '',\n\t\t\tapplication_source_details: $('#application_source_details').val() || ''\n\t\t};\n\t}\n}\n\nclass PaymentStep extends BaseStep {\n\tconstructor() {\n\t\tsuper('payment');\n\t}\n\n\trender(state) {\n\t\tif (state.get('paymentMethods')) {\n\t\t\tthis.renderPaymentMethods(state.get('paymentMethods'));\n\t\t}\n\t\tthis.updateSummary(state);\n\t}\n\n\trenderPaymentMethods(paymentMethods) {\n\t\tconst container = $('#payment-methods-list');\n\t\tconst fallback = $('#payment-method-fallback');\n\n\t\tif (!paymentMethods || paymentMethods.length === 0) {\n\t\t\tthis.showPaymentMethodFallback();\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.empty().show();\n\t\tfallback.hide();\n\n\t\tpaymentMethods.forEach(method => {\n\t\t\tconst methodCard = this.createPaymentMethodCard(method);\n\t\t\tcontainer.append(methodCard);\n\t\t});\n\n\t\tthis.bindPaymentEvents();\n\n\t\t// Also ensure main app payment method events are bound after DOM update\n\t\tif (typeof membershipApp !== 'undefined' && membershipApp.bindPaymentMethodEvents) {\n\t\t\tconsole.log('PaymentStep: Re-binding main app payment method events after loading methods');\n\t\t\tmembershipApp.bindPaymentMethodEvents();\n\t\t}\n\n\t\t// Auto-select first method\n\t\tif (paymentMethods.length > 0) {\n\t\t\tthis.selectPaymentMethod(paymentMethods[0].name);\n\t\t}\n\t}\n\n\tcreatePaymentMethodCard(method) {\n\t\tlet methodCardHTML = '<div class=\"payment-method-option\" data-method=\"' + method.name + '\">';\n\t\tmethodCardHTML += '<div class=\"d-flex align-items-center\">';\n\t\tmethodCardHTML += '<div class=\"payment-method-icon\">';\n\t\tmethodCardHTML += '<i class=\"fa ' + (method.icon || 'fa-university') + '\"></i>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '<div class=\"payment-method-info flex-grow-1\">';\n\t\tmethodCardHTML += '<h6>' + method.name + '</h6>';\n\t\tmethodCardHTML += '<div class=\"text-muted\">';\n\t\tmethodCardHTML += method.description + '<br>';\n\t\tmethodCardHTML += '<small><strong>Processing:</strong> ' + method.processing_time + '</small>';\n\n\t\tif (method.requires_mandate) {\n\t\t\tmethodCardHTML += '<br><small class=\"text-warning\"><strong>Note:</strong> ' + method.note + '</small>';\n\t\t}\n\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '<div class=\"payment-method-selector\">';\n\t\tmethodCardHTML += '<div class=\"form-check\">';\n\n\t\tconst radioId = 'payment_' + method.name.replace(/\\s+/g, '_').toLowerCase();\n\t\tmethodCardHTML += '<input class=\"form-check-input payment-method-radio\" type=\"radio\" ';\n\t\tmethodCardHTML += 'name=\"payment_method_selection\" value=\"' + method.name + '\" id=\"' + radioId + '\">';\n\t\tmethodCardHTML += '<label class=\"form-check-label\" for=\"' + radioId + '\">';\n\t\tmethodCardHTML += 'Select';\n\t\tmethodCardHTML += '</label>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '</div>';\n\t\tmethodCardHTML += '</div>';\n\n\t\treturn $(methodCardHTML);\n\t}\n\n\tshowPaymentMethodFallback() {\n\t\tconst container = $('#payment-methods-list');\n\t\tconst fallback = $('#payment-method-fallback');\n\n\t\tcontainer.hide();\n\t\tfallback.show();\n\n\t\tconst select = $('#payment_method');\n\t\tselect.empty();\n\n\t\tconst fallbackMethods = [\n\t\t\t{\n\t\t\t\tname: 'Bank Transfer',\n\t\t\t\tdescription: 'One-time bank transfer',\n\t\t\t\ticon: 'fa-university',\n\t\t\t\tprocessing_time: '1-3 business days',\n\t\t\t\trequires_mandate: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'SEPA Direct Debit',\n\t\t\t\tdescription: 'SEPA Direct Debit (recurring)',\n\t\t\t\ticon: 'fa-repeat',\n\t\t\t\tprocessing_time: '5-7 days first collection',\n\t\t\t\trequires_mandate: true\n\t\t\t}\n\t\t];\n\n\t\tfallbackMethods.forEach(method => {\n\t\t\tselect.append(`<option value=\"${method.name}\">${method.name} - ${method.description}</option>`);\n\t\t});\n\n\t\t// Bind change event\n\t\tselect.off('change').on('change', (e) => {\n\t\t\tconst selectedMethod = $(e.target).val();\n\t\t\tif (selectedMethod) {\n\t\t\t\tthis.selectPaymentMethod(selectedMethod);\n\t\t\t}\n\t\t});\n\n\t\t// Auto-select first option\n\t\tif (fallbackMethods.length > 0) {\n\t\t\tconst defaultMethod = fallbackMethods[0].name;\n\t\t\tselect.val(defaultMethod);\n\t\t\tthis.selectPaymentMethod(defaultMethod);\n\t\t}\n\t}\n\n\tbindEvents() {\n\t\t// Main binding happens in bindPaymentEvents after rendering\n\t}\n\n\tbindPaymentEvents() {\n\t\tconsole.log('PaymentStep: Binding payment events');\n\n\t\t$('.payment-method-option').off('click').on('click', (e) => {\n\t\t\tconst target = $(e.target).closest('.payment-method-option');\n\t\t\tconst methodName = target.data('method');\n\t\t\tconsole.log('PaymentStep: Payment method clicked:', methodName, 'Target:', target);\n\t\t\tthis.selectPaymentMethod(methodName);\n\t\t});\n\n\t\t$('.payment-method-radio').off('change').on('change', (e) => {\n\t\t\tif ($(e.target).is(':checked')) {\n\t\t\t\tconsole.log('PaymentStep: Payment method radio changed:', $(e.target).val());\n\t\t\t\tthis.selectPaymentMethod($(e.target).val());\n\t\t\t}\n\t\t});\n\n\t\t// Also bind to the main app's payment method events for field switching\n\t\tif (typeof membershipApp !== 'undefined' && membershipApp.bindPaymentMethodEvents) {\n\t\t\tconsole.log('PaymentStep: Calling main app bindPaymentMethodEvents');\n\t\t\tmembershipApp.bindPaymentMethodEvents();\n\t\t}\n\n\t\tconsole.log('PaymentStep: Found payment method options:', $('.payment-method-option').length);\n\t\tconsole.log('PaymentStep: Found payment method radios:', $('.payment-method-radio').length);\n\t}\n\n\tselectPaymentMethod(methodName) {\n\t\tif (!methodName) return;\n\n\t\tconsole.log('Selecting payment method:', methodName);\n\n\t\t// Update state\n\t\tmembershipApp.setPaymentMethod(methodName);\n\n\t\t// Update UI\n\t\tif ($('#payment-method-fallback').is(':visible')) {\n\t\t\t$('#payment_method').val(methodName);\n\t\t} else {\n\t\t\t$('.payment-method-option').removeClass('selected');\n\t\t\t$(`.payment-method-option[data-method=\"${methodName}\"]`).addClass('selected');\n\n\t\t\t// Update radio button and trigger change event\n\t\t\tconst radioButton = $(`.payment-method-radio[value=\"${methodName}\"]`);\n\t\t\tconsole.log('PaymentStep: Found radio button for', methodName, ':', radioButton.length);\n\t\t\tradioButton.prop('checked', true).trigger('change');\n\t\t}\n\n\t\t// Use the main app's handlePaymentMethodChange for consistent behavior\n\t\tif (typeof membershipApp !== 'undefined' && membershipApp.handlePaymentMethodChange) {\n\t\t\tconsole.log('PaymentStep: Using main app handlePaymentMethodChange for:', methodName);\n\t\t\tmembershipApp.handlePaymentMethodChange(methodName);\n\t\t} else {\n\t\t\t// Fallback for standalone operation\n\t\t\tconsole.log('PaymentStep: Fallback - showing fields for payment method:', methodName);\n\t\t\t// Payment method sections hidden by default\n\t\t\t$('#bank-account-details').hide();\n\t\t\t$('#bank-transfer-notice').hide();\n\t\t\t$('#bank-transfer-details').hide();\n\n\t\t\tif (methodName === 'SEPA Direct Debit') {\n\t\t\t\tconsole.log('PaymentStep: Showing bank account fields');\n\t\t\t\t$('#bank-account-details').show();\n\t\t\t} else if (methodName === 'Bank Transfer') {\n\t\t\t\tconsole.log('PaymentStep: Showing bank transfer details with account fields');\n\t\t\t\t$('#bank-transfer-details').show();\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateSummary(state) {\n\t\t// Use the main application's comprehensive updateApplicationSummary method\n\t\t// which includes detailed financial information and proper data handling\n\t\tif (typeof membershipApp !== 'undefined' && membershipApp.updateApplicationSummary) {\n\t\t\tmembershipApp.updateApplicationSummary();\n\t\t} else {\n\t\t\t// Fallback to basic summary if main app method is not available\n\t\t\tthis.updateBasicSummary(state);\n\t\t}\n\t}\n\n\tupdateBasicSummary(state) {\n\t\tconst summary = $('#application-summary');\n\n\t\tlet content = '<div class=\"row\">';\n\t\tcontent += '<div class=\"col-md-6\">';\n\t\tcontent += '<h6>Personal Information</h6>';\n\t\tcontent += '<p><strong>Name:</strong> ' + ($('#first_name').val() || '') + ' ' + ($('#last_name').val() || '') + '</p>';\n\t\tcontent += '<p><strong>Email:</strong> ' + ($('#email').val() || '') + '</p>';\n\n\t\tconst age = this.calculateAge($('#birth_date').val());\n\t\tif (age > 0) {\n\t\t\tcontent += '<p><strong>Age:</strong> ' + age + ' years</p>';\n\t\t}\n\n\t\tcontent += '</div>';\n\t\tcontent += '<div class=\"col-md-6\">';\n\t\tcontent += '<h6>Membership</h6>';\n\n\t\tconst membership = state.get('membership');\n\t\tif (membership && membership.type) {\n\t\t\tconst membershipTypes = state.get('membershipTypes') || [];\n\t\t\tconst membershipType = membershipTypes.find(t => t.name === membership.type);\n\t\t\tif (membershipType) {\n\t\t\t\tcontent += '<p><strong>Type:</strong> ' + membershipType.membership_type_name + '</p>';\n\t\t\t\tcontent += '<p><strong>Amount:</strong> ' + frappe.format(membership.amount, {fieldtype: 'Currency'}) + '</p>';\n\t\t\t\tif (membership.isCustom) {\n\t\t\t\t\tcontent += '<p><em>Custom contribution selected</em></p>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcontent += '</div>';\n\t\tcontent += '</div>';\n\n\t\tif ($('#selected_chapter').val()) {\n\t\t\tcontent += '<p><strong>Chapter:</strong> ' + $('#selected_chapter option:selected').text() + '</p>';\n\t\t}\n\n\t\tif ($('#interested_in_volunteering').is(':checked')) {\n\t\t\tcontent += '<p><strong>Interested in volunteering:</strong> Yes</p>';\n\t\t}\n\n\t\tconst paymentMethod = $('input[name=\"payment_method_selection\"]:checked').val() || $('#payment_method').val();\n\t\tif (paymentMethod) {\n\t\t\tcontent += '<p><strong>Payment Method:</strong> ' + paymentMethod + '</p>';\n\t\t}\n\n\t\tsummary.html(content);\n\t}\n\n\tcalculateAge(birthDate) {\n\t\tif (!birthDate) return 0;\n\n\t\ttry {\n\t\t\tconst birth = new Date(birthDate);\n\t\t\tconst today = new Date();\n\n\t\t\tif (isNaN(birth.getTime())) {\n\t\t\t\tconsole.warn('Invalid birth date in PaymentStep:', birthDate);\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet age = today.getFullYear() - birth.getFullYear();\n\n\t\t\tif (today.getMonth() < birth.getMonth() ||\n                (today.getMonth() === birth.getMonth() && today.getDate() < birth.getDate())) {\n\t\t\t\tage--;\n\t\t\t}\n\n\t\t\treturn Math.max(0, age);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error calculating age in PaymentStep:', error);\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tasync validate() {\n\t\tlet valid = true;\n\n\t\t// Clear previous validation\n\t\t$('.invalid-feedback').remove();\n\t\t$('.is-invalid').removeClass('is-invalid');\n\n\t\t// Payment method validation\n\t\tconst paymentMethod = $('input[name=\"payment_method_selection\"]:checked').val() || $('#payment_method').val();\n\t\tif (!paymentMethod) {\n\t\t\tif ($('#payment-method-fallback').is(':visible')) {\n\t\t\t\t$('#payment_method').addClass('is-invalid');\n\t\t\t\t$('#payment_method').after('<div class=\"invalid-feedback\">Please select a payment method</div>');\n\t\t\t} else {\n\t\t\t\tconst errorDiv = $('<div class=\"invalid-feedback d-block text-danger mb-3\">Please select a payment method</div>');\n\t\t\t\t$('#payment-methods-list').after(errorDiv);\n\t\t\t}\n\t\t\tvalid = false;\n\t\t} else {\n\t\t\t// Validate payment-specific fields based on selected method\n\t\t\tif (paymentMethod === 'SEPA Direct Debit') {\n\t\t\t\t// Bank account validation\n\t\t\t\tif (!$('#iban').val()) {\n\t\t\t\t\t$('#iban').addClass('is-invalid');\n\t\t\t\t\t$('#iban').after('<div class=\"invalid-feedback\">IBAN is required</div>');\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\n\t\t\t\tconst bankAccountName = $('#bank_account_name').val() || $('#account_holder_name').val();\n\t\t\t\tif (!bankAccountName) {\n\t\t\t\t\tconst $field = $('#bank_account_name').length ? $('#bank_account_name') : $('#account_holder_name');\n\t\t\t\t\t$field.addClass('is-invalid');\n\t\t\t\t\t$field.after('<div class=\"invalid-feedback\">Account holder name is required</div>');\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\n\t\t\t\t// Basic IBAN validation (at least country code + 2 check digits + account identifier)\n\t\t\t\tconst iban = $('#iban').val().replace(/\\s/g, '');\n\t\t\t\tif (iban && (iban.length < 15 || iban.length > 34 || !/^[A-Z]{2}[0-9]{2}[A-Z0-9]+$/i.test(iban))) {\n\t\t\t\t\t$('#iban').addClass('is-invalid');\n\t\t\t\t\t$('#iban').after('<div class=\"invalid-feedback\">Please enter a valid IBAN</div>');\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Bank Transfer doesn't require additional fields\n\t\t}\n\n\t\treturn valid;\n\t}\n\n\tgetData() {\n\t\treturn {\n\t\t\tpayment_method: membershipApp.getPaymentMethod() || '',\n\t\t\tadditional_notes: $('#additional_notes').val() || '',\n\t\t\tterms: $('#terms').is(':checked'),\n\t\t\tgdpr_consent: $('#gdpr_consent').is(':checked')\n\t\t};\n\t}\n}\n\n// ===================================\n// 4. UTILITY CLASSES\n// ===================================\n\n// FormValidator already defined above\n\nclass MembershipAPI {\n\tasync getFormData() {\n\t\treturn await this.call('verenigingen.api.membership_application.get_application_form_data');\n\t}\n\n\tasync validateEmail(email) {\n\t\treturn await this.call('verenigingen.api.membership_application.validate_email', { email });\n\t}\n\n\tasync validatePostalCode(postalCode, country) {\n\t\treturn await this.call('verenigingen.api.membership_application.validate_postal_code', {\n\t\t\tpostal_code: postalCode,\n\t\t\tcountry: country\n\t\t});\n\t}\n\n\tasync validateCustomAmount(membershipType, amount) {\n\t\treturn await this.call('verenigingen.api.membership_application.validate_custom_amount', {\n\t\t\tmembership_type: membershipType,\n\t\t\tamount: amount\n\t\t});\n\t}\n\n\tasync submitApplication(data) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconsole.log('Submitting application data:', data);\n\n\t\t\t// Use direct AJAX call instead of frappe.call to avoid URL issues\n\t\t\t$.ajax({\n\t\t\t\turl: '/api/method/verenigingen.api.membership_application.submit_application_with_tracking',\n\t\t\t\ttype: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\tdata: JSON.stringify(data)\n\t\t\t\t},\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Frappe-CSRF-Token': frappe.csrf_token || ''\n\t\t\t\t},\n\t\t\t\tdataType: 'json',\n\t\t\t\tsuccess: function(response) {\n\t\t\t\t\tconsole.log('Direct AJAX response:', response);\n\t\t\t\t\tif (response.message && response.message.success) {\n\t\t\t\t\t\tresolve(response.message);\n\t\t\t\t\t} else if (response.message) {\n\t\t\t\t\t\tconsole.log('Full error response:', response.message);\n\t\t\t\t\t\tconst errorMsg = response.message.message || response.message.error || 'Submission failed';\n\t\t\t\t\t\treject(new Error(errorMsg));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error('Unknown response format'));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function(xhr, status, error) {\n\t\t\t\t\tconsole.error('Direct AJAX error:', {xhr, status, error});\n\t\t\t\t\tlet errorMsg = 'Network error occurred';\n\n\t\t\t\t\tif (xhr.responseJSON && xhr.responseJSON.exc) {\n\t\t\t\t\t\terrorMsg = xhr.responseJSON.exc;\n\t\t\t\t\t} else if (xhr.responseText) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst parsed = JSON.parse(xhr.responseText);\n\t\t\t\t\t\t\terrorMsg = parsed.message || parsed.exc || errorMsg;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\terrorMsg = `Server error: ${xhr.status} ${xhr.statusText}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorMsg = `Server error: ${xhr.status} ${xhr.statusText}`;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(new Error(errorMsg));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tasync saveDraft(data) {\n\t\treturn await this.call('verenigingen.api.membership_application.save_draft_application', { data });\n\t}\n\n\tasync call(method, args = {}) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Add timeout to prevent hanging requests\n\t\t\tconst timeoutId = setTimeout(() => {\n\t\t\t\treject(new Error('Request timeout - server did not respond'));\n\t\t\t}, 30000); // 30 second timeout\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod,\n\t\t\t\targs,\n\t\t\t\tcallback: (r) => {\n\t\t\t\t\tclearTimeout(timeoutId);\n\n\t\t\t\t\tif (r.message !== undefined) {\n\t\t\t\t\t\tresolve(r.message);\n\t\t\t\t\t} else if (r.exc) {\n\t\t\t\t\t\treject(new Error(r.exc));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Sometimes frappe returns success with no message\n\t\t\t\t\t\tresolve(r);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: (r) => {\n\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\tconsole.error('API call error:', r);\n\n\t\t\t\t\tlet errorMsg = 'Network error';\n\t\t\t\t\tif (r.responseJSON?.exc) {\n\t\t\t\t\t\terrorMsg = r.responseJSON.exc;\n\t\t\t\t\t} else if (r.statusText) {\n\t\t\t\t\t\terrorMsg = `${r.status}: ${r.statusText}`;\n\t\t\t\t\t} else if (r.message) {\n\t\t\t\t\t\terrorMsg = r.message;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(new Error(errorMsg));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// Alternative submit method using direct AJAX if frappe.call continues to fail\n\tasync submitApplicationDirect(data) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconsole.log('Using direct AJAX submission');\n\n\t\t\t$.ajax({\n\t\t\t\turl: '/api/method/verenigingen.api.membership_application.submit_application_with_tracking',\n\t\t\t\ttype: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\tdata: JSON.stringify(data)\n\t\t\t\t},\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Frappe-CSRF-Token': frappe.csrf_token\n\t\t\t\t},\n\t\t\t\tsuccess: function(response) {\n\t\t\t\t\tconsole.log('Direct AJAX response:', response);\n\n\t\t\t\t\t// Check if response contains an error message (even in \"success\" response)\n\t\t\t\t\tif (response.error_message || (response.server_messages && response.server_messages.includes('does not have permission'))) {\n\t\t\t\t\t\tlet errorMsg = response.error_message || 'Permission denied';\n\n\t\t\t\t\t\t// Try to extract clean error from server_messages\n\t\t\t\t\t\tif (response.server_messages) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst messages = JSON.parse(response.server_messages);\n\t\t\t\t\t\t\t\tif (messages && messages.length > 0) {\n\t\t\t\t\t\t\t\t\tconst firstMessage = typeof messages[0] === 'string' ? JSON.parse(messages[0]) : messages[0];\n\t\t\t\t\t\t\t\t\tif (firstMessage.message) {\n\t\t\t\t\t\t\t\t\t\terrorMsg = firstMessage.message.replace(/<[^>]*>/g, ''); // Strip HTML\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tconsole.warn('Could not parse server messages:', e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treject(new Error(errorMsg));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (response.message && response.message.success) {\n\t\t\t\t\t\tresolve(response.message);\n\t\t\t\t\t} else if (response.message && response.message.error) {\n\t\t\t\t\t\treject(new Error(response.message.message || response.message.error));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(response.message || 'Unknown error occurred'));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function(xhr, status, error) {\n\t\t\t\t\tconsole.error('Direct AJAX error:', xhr, status, error);\n\t\t\t\t\tlet errorMsg = `Server error: ${xhr.status}`;\n\n\t\t\t\t\tif (xhr.responseJSON) {\n\t\t\t\t\t\tif (xhr.responseJSON.exc) {\n\t\t\t\t\t\t\terrorMsg = xhr.responseJSON.exc;\n\t\t\t\t\t\t} else if (xhr.responseJSON.error_message) {\n\t\t\t\t\t\t\terrorMsg = xhr.responseJSON.error_message;\n\t\t\t\t\t\t} else if (xhr.responseJSON.message && xhr.responseJSON.message.error) {\n\t\t\t\t\t\t\terrorMsg = xhr.responseJSON.message.error;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (error) {\n\t\t\t\t\t\terrorMsg = error;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(new Error(errorMsg));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nclass UIManager {\n\thideAllSteps() {\n\t\t$('.form-step').hide().removeClass('active');\n\t}\n\n\tshowStep(stepNumber) {\n\t\t$(`.form-step[data-step=\"${stepNumber}\"]`).show().addClass('active');\n\t}\n\n\tupdateProgress(current, total) {\n\t\tconst progress = (current / total) * 100;\n\t\t$('#form-progress').css('width', `${progress}%`);\n\n\t\t$('.step').removeClass('active completed');\n\t\tfor (let i = 1; i < current; i++) {\n\t\t\t$(`.step[data-step=\"${i}\"]`).addClass('completed');\n\t\t}\n\t\t$(`.step[data-step=\"${current}\"]`).addClass('active');\n\t}\n\n\tupdateNavigation(current, total) {\n\t\t$('#prev-btn').toggle(current > 1);\n\t\t$('#next-btn').toggle(current < total);\n\t\t$('#submit-btn').toggle(current === total);\n\t}\n\n\tsetSubmitting(isSubmitting) {\n\t\tconst btn = $('#submit-btn');\n\t\tif (isSubmitting) {\n\t\t\tbtn.prop('disabled', true).html('<i class=\"fa fa-spinner fa-spin\"></i> Processing...');\n\t\t} else {\n\t\t\tbtn.prop('disabled', false).html('Submit Application & Pay');\n\t\t}\n\t}\n\n\tshowSuccess(result) {\n\t\t// Create success message with application ID prominently displayed\n\t\tlet successHTML = '<div class=\"text-center py-5\">';\n\t\tsuccessHTML += '<div class=\"success-icon mb-4\">';\n\t\tsuccessHTML += '<i class=\"fa fa-check-circle text-success\" style=\"font-size: 4rem;\"></i>';\n\t\tsuccessHTML += '</div>';\n\t\tsuccessHTML += '<h2 class=\"text-success\">Application Submitted Successfully!</h2>';\n\n\t\t// Display application ID if available\n\t\tif (result.application_id) {\n\t\t\tsuccessHTML += '<div class=\"alert alert-info mx-auto\" style=\"max-width: 500px;\">';\n\t\t\tsuccessHTML += '<h4>Your Application ID: <strong>' + result.application_id + '</strong></h4>';\n\t\t\tsuccessHTML += '<p>Please save this ID for future reference.</p>';\n\t\t\tsuccessHTML += '</div>';\n\t\t}\n\n\t\tsuccessHTML += '<p class=\"lead\">Thank you for your application. ';\n\n\t\tif (result.payment_url) {\n\t\t\tsuccessHTML += 'You will be redirected to complete payment.</p>';\n\t\t\tsuccessHTML += '<div class=\"mt-4\">';\n\t\t\tsuccessHTML += '<div class=\"spinner-border text-primary\" role=\"status\">';\n\t\t\tsuccessHTML += '<span class=\"sr-only\">Loading...</span>';\n\t\t\tsuccessHTML += '</div>';\n\t\t\tsuccessHTML += '</div>';\n\t\t} else {\n\t\t\tsuccessHTML += 'You will receive an email with next steps.</p>';\n\t\t\tsuccessHTML += '<div class=\"mt-4\">';\n\t\t\tsuccessHTML += '<a href=\"/application-status?id=' + result.application_id + '\" class=\"btn btn-primary\">';\n\t\t\tsuccessHTML += 'Check Application Status';\n\t\t\tsuccessHTML += '</a>';\n\t\t\tsuccessHTML += '</div>';\n\t\t}\n\n\t\tsuccessHTML += '</div>';\n\n\t\t$('.membership-application-form').html(successHTML);\n\n\t\t// Scroll to top\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\tshowError(title, error) {\n\t\tconst message = error.message || error.toString();\n\t\tfrappe.msgprint({\n\t\t\ttitle: title,\n\t\t\tmessage: message,\n\t\t\tindicator: 'red'\n\t\t});\n\t}\n}\n\n// ===================================\n// 5. INITIALIZATION\n// ===================================\n\n// Global debug functions for beta testing (available after initialization)\nwindow.debugApp = () => {\n\tif (!window.membershipApp) {\n\t\tconsole.error('membershipApp not initialized yet');\n\t\treturn null;\n\t}\n\tconsole.log('=== APPLICATION DEBUG ===');\n\tconsole.log('State:', window.membershipApp.state.getData());\n\tconsole.log('Current step:', window.membershipApp.state.currentStep);\n\tconsole.log('Selected membership:', window.membershipApp.state.get('membership'));\n\tconsole.log('========================');\n\treturn window.membershipApp.state.getData();\n};\n\nwindow.debugMembershipSelection = () => {\n\tif (!window.membershipApp) {\n\t\tconsole.error('membershipApp not initialized yet');\n\t\treturn;\n\t}\n\tconsole.log('=== MEMBERSHIP SELECTION DEBUG ===');\n\tconst membership = window.membershipApp.state.get('membership');\n\tconsole.log('Membership data:', membership);\n\tconsole.log('Legacy compatibility:');\n\tconsole.log('  - selected_membership_type:', window.membershipApp.state.get('selected_membership_type'));\n\tconsole.log('  - custom_contribution_fee:', window.membershipApp.state.get('custom_contribution_fee'));\n\tconsole.log('  - uses_custom_amount:', window.membershipApp.state.get('uses_custom_amount'));\n\n\t// Check visible custom sections\n\t$('.custom-amount-section:visible').each(function() {\n\t\tconst card = $(this).closest('.membership-type-card');\n\t\tconsole.log('Visible custom section for:', card.data('type'));\n\t\tconsole.log('Input value:', $(this).find('.custom-amount-input').val());\n\t});\n\n\t// Check selected membership cards\n\t$('.membership-type-card.selected').each(function() {\n\t\tconsole.log('Selected card:', $(this).data('type'), 'amount:', $(this).data('amount'));\n\t});\n\n\t// Test form data collection\n\tconsole.log('All form data:', membershipApp.getAllFormData());\n\n\tconsole.log('=================================');\n\treturn membership;\n};\n\nwindow.debugAge = (birthDate) => {\n\ttry {\n\t\tconst testBirthDate = birthDate || $('#birth_date').val();\n\t\tconst age = membershipApp.calculateAge(testBirthDate);\n\t\tconsole.log('Age calculation:', { birthDate: testBirthDate, age });\n\n\t\tif (age > 100) {\n\t\t\tconsole.log('Should show >100 warning');\n\t\t} else if (age < 12) {\n\t\t\tconsole.log('Should show <12 warning');\n\t\t} else {\n\t\t\tconsole.log('No age warning needed');\n\t\t}\n\n\t\t// Test the validation display\n\t\tif (testBirthDate) {\n\t\t\t$('#birth_date').val(testBirthDate).trigger('change');\n\t\t}\n\n\t\treturn age;\n\t} catch (error) {\n\t\tconsole.error('Error in debugAge:', error);\n\t\treturn 0;\n\t}\n};\n\n// Debug commands available:\n// - debugApp() - Show full application state\n// - debugMembershipSelection() - Check membership selection\n// - debugAge(birthDate) - Test age validation\n\n// ConfirmationStep class for step 6\nclass ConfirmationStep extends BaseStep {\n\tconstructor() {\n\t\tsuper('confirmation');\n\t}\n\n\trender(state) {\n\t\t// Update final summary when rendered\n\t\tif (typeof membershipApp !== 'undefined' && membershipApp.updateFinalApplicationSummary) {\n\t\t\tmembershipApp.updateFinalApplicationSummary();\n\t\t}\n\t}\n\n\tasync validate() {\n\t\tlet valid = true;\n\n\t\t// Clear previous validation\n\t\t$('.invalid-feedback').remove();\n\t\t$('.is-invalid').removeClass('is-invalid');\n\n\t\t// Terms validation\n\t\tif (!$('#terms').is(':checked')) {\n\t\t\t$('#terms').addClass('is-invalid');\n\t\t\t$('#terms').closest('.form-check').after('<div class=\"invalid-feedback d-block\">You must accept the terms and conditions</div>');\n\t\t\tvalid = false;\n\t\t}\n\n\t\t// GDPR consent validation\n\t\tif (!$('#gdpr_consent').is(':checked')) {\n\t\t\t$('#gdpr_consent').addClass('is-invalid');\n\t\t\t$('#gdpr_consent').closest('.form-check').after('<div class=\"invalid-feedback d-block\">You must consent to data processing</div>');\n\t\t\tvalid = false;\n\t\t}\n\n\t\t// Accuracy confirmation validation\n\t\tif (!$('#confirm_accuracy').is(':checked')) {\n\t\t\t$('#confirm_accuracy').addClass('is-invalid');\n\t\t\t$('#confirm_accuracy').closest('.form-check').after('<div class=\"invalid-feedback d-block\">You must confirm the accuracy of your information</div>');\n\t\t\tvalid = false;\n\t\t}\n\n\t\treturn valid;\n\t}\n\n\tformatCurrency(amount) {\n\t\t// Format currency with EUR symbol and 2 decimal places\n\t\tif (typeof amount !== 'number' || isNaN(amount)) {\n\t\t\treturn '€0.00';\n\t\t}\n\t\treturn '€' + amount.toFixed(2);\n\t}\n}\n\n// Add this debug function to test the backend method\nwindow.testBackendMethod = async function() {\n\tconsole.log('Testing backend method availability...');\n\n\ttry {\n\t\tconst result = await new Promise((resolve, reject) => {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'verenigingen.api.membership_application.get_application_form_data',\n\t\t\t\tcallback: (r) => {\n\t\t\t\t\tif (r.message !== undefined) {\n\t\t\t\t\t\tresolve(r.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error('No response'));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: reject\n\t\t\t});\n\t\t});\n\n\t\tconsole.log('Backend method test successful:', result);\n\t\treturn result;\n\t} catch (error) {\n\t\tconsole.error('Backend method test failed:', error);\n\t\treturn null;\n\t}\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/mobile_dues_schedule.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'velocityThreshold' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":81,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":81,"endColumn":26},{"ruleId":"no-undef","severity":2,"message":"'loadFinancialData' is not defined.","line":851,"column":4,"nodeType":"Identifier","messageId":"undef","endLine":851,"endColumn":21}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Mobile-Specific Dues Schedule Functionality\n * Enhanced interactions for mobile devices\n */\n\nclass MobileDuesSchedule {\n\tconstructor() {\n\t\tthis.isMobile = window.innerWidth <= 768;\n\t\tthis.isTablet = window.innerWidth > 768 && window.innerWidth <= 1024;\n\t\tthis.isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.setupMobileDetection();\n\t\tthis.setupTouchEvents();\n\t\tthis.setupSwipeGestures();\n\t\tthis.setupVirtualKeyboard();\n\t\tthis.setupPullToRefresh();\n\t\tthis.setupMobileNavigation();\n\t\tthis.setupMobileModals();\n\t\tthis.setupMobileCalendar();\n\t\tthis.setupMobileAccessibility();\n\n\t\t// Initialize on DOM ready\n\t\tif (document.readyState === 'loading') {\n\t\t\tdocument.addEventListener('DOMContentLoaded', () => this.initializeMobileFeatures());\n\t\t} else {\n\t\t\tthis.initializeMobileFeatures();\n\t\t}\n\t}\n\n\tsetupMobileDetection() {\n\t\t// Update mobile detection on resize\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.isMobile = window.innerWidth <= 768;\n\t\t\tthis.isTablet = window.innerWidth > 768 && window.innerWidth <= 1024;\n\t\t\tthis.updateMobileClasses();\n\t\t});\n\n\t\tthis.updateMobileClasses();\n\t}\n\n\tupdateMobileClasses() {\n\t\tconst body = document.body;\n\t\tbody.classList.toggle('mobile', this.isMobile);\n\t\tbody.classList.toggle('tablet', this.isTablet);\n\t\tbody.classList.toggle('touch', this.isTouch);\n\t}\n\n\tsetupTouchEvents() {\n\t\t// Improve touch responsiveness\n\t\tif (this.isTouch) {\n\t\t\t// Add touch-friendly classes\n\t\t\tdocument.addEventListener('touchstart', (e) => {\n\t\t\t\tif (e.target.closest('.touch-friendly')) {\n\t\t\t\t\te.target.closest('.touch-friendly').classList.add('touched');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdocument.addEventListener('touchend', (e) => {\n\t\t\t\tif (e.target.closest('.touch-friendly')) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\te.target.closest('.touch-friendly').classList.remove('touched');\n\t\t\t\t\t}, 150);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetupSwipeGestures() {\n\t\tif (!this.isTouch) return;\n\n\t\tlet startX = 0;\n\t\tlet startY = 0;\n\t\tlet currentX = 0;\n\t\tlet currentY = 0;\n\n\t\tconst swipeThreshold = 50;\n\t\tconst velocityThreshold = 0.3;\n\n\t\t// Tab swiping\n\t\tconst tabContainer = document.querySelector('.tab-nav');\n\t\tif (tabContainer) {\n\t\t\ttabContainer.addEventListener('touchstart', (e) => {\n\t\t\t\tstartX = e.touches[0].clientX;\n\t\t\t\tstartY = e.touches[0].clientY;\n\t\t\t});\n\n\t\t\ttabContainer.addEventListener('touchmove', (e) => {\n\t\t\t\tif (!startX || !startY) return;\n\n\t\t\t\tcurrentX = e.touches[0].clientX;\n\t\t\t\tcurrentY = e.touches[0].clientY;\n\n\t\t\t\tconst deltaX = currentX - startX;\n\t\t\t\tconst deltaY = currentY - startY;\n\n\t\t\t\t// Prevent vertical scrolling if horizontal swipe\n\t\t\t\tif (Math.abs(deltaX) > Math.abs(deltaY)) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ttabContainer.addEventListener('touchend', (e) => {\n\t\t\t\tif (!startX || !startY) return;\n\n\t\t\t\tconst deltaX = currentX - startX;\n\t\t\t\tconst deltaY = currentY - startY;\n\n\t\t\t\t// Check if it's a horizontal swipe\n\t\t\t\tif (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > swipeThreshold) {\n\t\t\t\t\tthis.handleTabSwipe(deltaX > 0 ? 'right' : 'left');\n\t\t\t\t}\n\n\t\t\t\t// Reset values\n\t\t\t\tstartX = 0;\n\t\t\t\tstartY = 0;\n\t\t\t\tcurrentX = 0;\n\t\t\t\tcurrentY = 0;\n\t\t\t});\n\t\t}\n\n\t\t// Calendar month swiping\n\t\tconst calendarContainer = document.querySelector('.calendar-grid');\n\t\tif (calendarContainer) {\n\t\t\tthis.setupCalendarSwipe(calendarContainer);\n\t\t}\n\t}\n\n\tsetupCalendarSwipe(container) {\n\t\tlet startX = 0;\n\t\tlet startTime = 0;\n\n\t\tcontainer.addEventListener('touchstart', (e) => {\n\t\t\tstartX = e.touches[0].clientX;\n\t\t\tstartTime = Date.now();\n\t\t});\n\n\t\tcontainer.addEventListener('touchend', (e) => {\n\t\t\tif (!startX || !startTime) return;\n\n\t\t\tconst endX = e.changedTouches[0].clientX;\n\t\t\tconst endTime = Date.now();\n\t\t\tconst deltaX = endX - startX;\n\t\t\tconst deltaTime = endTime - startTime;\n\n\t\t\t// Check for swipe\n\t\t\tif (Math.abs(deltaX) > 50 && deltaTime < 500) {\n\t\t\t\tif (deltaX > 0) {\n\t\t\t\t\tthis.handleCalendarSwipe('prev');\n\t\t\t\t} else {\n\t\t\t\t\tthis.handleCalendarSwipe('next');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartX = 0;\n\t\t\tstartTime = 0;\n\t\t});\n\t}\n\n\thandleTabSwipe(direction) {\n\t\tconst activeTab = document.querySelector('.tab-button.active');\n\t\tif (!activeTab) return;\n\n\t\tconst tabs = Array.from(document.querySelectorAll('.tab-button'));\n\t\tconst currentIndex = tabs.indexOf(activeTab);\n\n\t\tlet newIndex;\n\t\tif (direction === 'left' && currentIndex > 0) {\n\t\t\tnewIndex = currentIndex - 1;\n\t\t} else if (direction === 'right' && currentIndex < tabs.length - 1) {\n\t\t\tnewIndex = currentIndex + 1;\n\t\t}\n\n\t\tif (newIndex !== undefined) {\n\t\t\ttabs[newIndex].click();\n\t\t\tthis.showSwipeIndicator(direction);\n\t\t}\n\t}\n\n\thandleCalendarSwipe(direction) {\n\t\tconst button = document.querySelector(direction === 'prev' ? '#prev-month' : '#next-month');\n\t\tif (button) {\n\t\t\tbutton.click();\n\t\t\tthis.showSwipeIndicator(direction === 'prev' ? 'right' : 'left');\n\t\t}\n\t}\n\n\tshowSwipeIndicator(direction) {\n\t\tconst indicator = document.createElement('div');\n\t\tindicator.className = 'swipe-indicator';\n\t\tindicator.innerHTML = direction === 'left' ? '←' : '→';\n\t\tindicator.style.cssText = `\n            position: fixed;\n            top: 50%;\n            ${direction === 'left' ? 'left: 20px' : 'right: 20px'};\n            transform: translateY(-50%);\n            background: var(--brand-primary);\n            color: white;\n            padding: 0.5rem 1rem;\n            border-radius: 2rem;\n            font-size: 1.5rem;\n            z-index: 1000;\n            animation: swipeIndicator 0.6s ease-out;\n        `;\n\n\t\tdocument.body.appendChild(indicator);\n\n\t\tsetTimeout(() => {\n\t\t\tindicator.remove();\n\t\t}, 600);\n\t}\n\n\tsetupVirtualKeyboard() {\n\t\tif (!this.isMobile) return;\n\n\t\t// Handle virtual keyboard appearance\n\t\tconst viewport = document.querySelector('meta[name=\"viewport\"]');\n\t\tlet originalViewport = viewport ? viewport.content : '';\n\n\t\tconst inputs = document.querySelectorAll('input, textarea, select');\n\t\tinputs.forEach(input => {\n\t\t\tinput.addEventListener('focus', () => {\n\t\t\t\t// Prevent zoom on iOS\n\t\t\t\tif (viewport) {\n\t\t\t\t\tviewport.content = originalViewport + ', user-scalable=no';\n\t\t\t\t}\n\n\t\t\t\t// Scroll input into view\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tinput.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t\t\t}, 300);\n\t\t\t});\n\n\t\t\tinput.addEventListener('blur', () => {\n\t\t\t\t// Restore original viewport\n\t\t\t\tif (viewport) {\n\t\t\t\t\tviewport.content = originalViewport;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Handle visual viewport changes\n\t\tif (window.visualViewport) {\n\t\t\twindow.visualViewport.addEventListener('resize', () => {\n\t\t\t\tconst focusedElement = document.activeElement;\n\t\t\t\tif (focusedElement && (focusedElement.tagName === 'INPUT' || focusedElement.tagName === 'TEXTAREA')) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tfocusedElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t\t\t\t}, 100);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetupPullToRefresh() {\n\t\tif (!this.isMobile || !this.isTouch) return;\n\n\t\tlet startY = 0;\n\t\tlet currentY = 0;\n\t\tlet isPulling = false;\n\t\tlet pullDistance = 0;\n\n\t\tconst pullThreshold = 80;\n\t\tconst pullIndicator = this.createPullIndicator();\n\n\t\tdocument.addEventListener('touchstart', (e) => {\n\t\t\tif (window.scrollY === 0) {\n\t\t\t\tstartY = e.touches[0].clientY;\n\t\t\t\tisPulling = true;\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener('touchmove', (e) => {\n\t\t\tif (!isPulling || window.scrollY > 0) return;\n\n\t\t\tcurrentY = e.touches[0].clientY;\n\t\t\tpullDistance = currentY - startY;\n\n\t\t\tif (pullDistance > 0) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.updatePullIndicator(pullIndicator, pullDistance, pullThreshold);\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener('touchend', (e) => {\n\t\t\tif (!isPulling) return;\n\n\t\t\tif (pullDistance > pullThreshold) {\n\t\t\t\tthis.performRefresh();\n\t\t\t}\n\n\t\t\tthis.resetPullIndicator(pullIndicator);\n\t\t\tisPulling = false;\n\t\t\tstartY = 0;\n\t\t\tcurrentY = 0;\n\t\t\tpullDistance = 0;\n\t\t});\n\t}\n\n\tcreatePullIndicator() {\n\t\tconst indicator = document.createElement('div');\n\t\tindicator.className = 'pull-to-refresh-indicator';\n\t\tindicator.innerHTML = `\n            <div class=\"pull-spinner\"></div>\n            <div class=\"pull-text\">Pull to refresh</div>\n        `;\n\t\tindicator.style.cssText = `\n            position: fixed;\n            top: -80px;\n            left: 50%;\n            transform: translateX(-50%);\n            background: white;\n            padding: 1rem;\n            border-radius: 2rem;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n            z-index: 1000;\n            transition: transform 0.3s ease;\n            display: flex;\n            align-items: center;\n            gap: 0.5rem;\n            color: #6b7280;\n            font-size: 0.875rem;\n        `;\n\n\t\tdocument.body.appendChild(indicator);\n\t\treturn indicator;\n\t}\n\n\tupdatePullIndicator(indicator, distance, threshold) {\n\t\tconst progress = Math.min(distance / threshold, 1);\n\t\tconst translateY = Math.min(distance * 0.5, 40);\n\n\t\tindicator.style.transform = `translateX(-50%) translateY(${translateY}px)`;\n\n\t\tconst spinner = indicator.querySelector('.pull-spinner');\n\t\tif (spinner) {\n\t\t\tspinner.style.transform = `rotate(${progress * 360}deg)`;\n\t\t}\n\n\t\tconst text = indicator.querySelector('.pull-text');\n\t\tif (text) {\n\t\t\ttext.textContent = progress >= 1 ? 'Release to refresh' : 'Pull to refresh';\n\t\t}\n\t}\n\n\tresetPullIndicator(indicator) {\n\t\tindicator.style.transform = 'translateX(-50%) translateY(-80px)';\n\t\tsetTimeout(() => {\n\t\t\tindicator.remove();\n\t\t}, 300);\n\t}\n\n\tperformRefresh() {\n\t\t// Show loading state\n\t\tthis.showLoadingState();\n\n\t\t// Reload page data\n\t\tif (window.location.reload) {\n\t\t\twindow.location.reload();\n\t\t} else {\n\t\t\t// Fallback: reload specific data\n\t\t\tthis.reloadDashboardData();\n\t\t}\n\t}\n\n\tshowLoadingState() {\n\t\tconst loadingIndicator = document.createElement('div');\n\t\tloadingIndicator.className = 'loading-indicator';\n\t\tloadingIndicator.innerHTML = `\n            <div class=\"loading-spinner\"></div>\n            <div class=\"loading-text\">Refreshing...</div>\n        `;\n\t\tloadingIndicator.style.cssText = `\n            position: fixed;\n            top: 20px;\n            left: 50%;\n            transform: translateX(-50%);\n            background: var(--brand-primary);\n            color: white;\n            padding: 0.75rem 1.5rem;\n            border-radius: 2rem;\n            z-index: 1000;\n            display: flex;\n            align-items: center;\n            gap: 0.5rem;\n        `;\n\n\t\tdocument.body.appendChild(loadingIndicator);\n\n\t\tsetTimeout(() => {\n\t\t\tloadingIndicator.remove();\n\t\t}, 2000);\n\t}\n\n\tsetupMobileNavigation() {\n\t\t// Add mobile navigation enhancements\n\t\tconst fab = this.createFloatingActionButton();\n\t\tthis.setupMobileMenu(fab);\n\t}\n\n\tcreateFloatingActionButton() {\n\t\tconst fab = document.createElement('button');\n\t\tfab.className = 'fab';\n\t\tfab.innerHTML = '<i class=\"fas fa-plus\"></i>';\n\t\tfab.setAttribute('aria-label', 'Quick actions');\n\n\t\tdocument.body.appendChild(fab);\n\t\treturn fab;\n\t}\n\n\tsetupMobileMenu(fab) {\n\t\tconst menu = document.createElement('div');\n\t\tmenu.className = 'fab-menu';\n\t\tmenu.innerHTML = `\n            <div class=\"fab-menu-item\" data-action=\"adjust-fee\">\n                <i class=\"fas fa-sliders-h\"></i>\n                <span>Adjust Fee</span>\n            </div>\n            <div class=\"fab-menu-item\" data-action=\"payment-history\">\n                <i class=\"fas fa-history\"></i>\n                <span>Payment History</span>\n            </div>\n            <div class=\"fab-menu-item\" data-action=\"bank-details\">\n                <i class=\"fas fa-university\"></i>\n                <span>Bank Details</span>\n            </div>\n            <div class=\"fab-menu-item\" data-action=\"help\">\n                <i class=\"fas fa-question-circle\"></i>\n                <span>Help</span>\n            </div>\n        `;\n\n\t\tmenu.style.cssText = `\n            position: fixed;\n            bottom: 5rem;\n            right: 1rem;\n            background: white;\n            border-radius: 1rem;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n            z-index: 49;\n            display: none;\n            padding: 0.5rem;\n            min-width: 200px;\n        `;\n\n\t\tdocument.body.appendChild(menu);\n\n\t\t// Toggle menu\n\t\tfab.addEventListener('click', () => {\n\t\t\tconst isVisible = menu.style.display === 'block';\n\t\t\tmenu.style.display = isVisible ? 'none' : 'block';\n\t\t\tfab.style.transform = isVisible ? 'rotate(0deg)' : 'rotate(45deg)';\n\t\t});\n\n\t\t// Handle menu items\n\t\tmenu.addEventListener('click', (e) => {\n\t\t\tconst item = e.target.closest('.fab-menu-item');\n\t\t\tif (item) {\n\t\t\t\tconst action = item.dataset.action;\n\t\t\t\tthis.handleFabAction(action);\n\t\t\t\tmenu.style.display = 'none';\n\t\t\t\tfab.style.transform = 'rotate(0deg)';\n\t\t\t}\n\t\t});\n\n\t\t// Close menu when clicking outside\n\t\tdocument.addEventListener('click', (e) => {\n\t\t\tif (!fab.contains(e.target) && !menu.contains(e.target)) {\n\t\t\t\tmenu.style.display = 'none';\n\t\t\t\tfab.style.transform = 'rotate(0deg)';\n\t\t\t}\n\t\t});\n\t}\n\n\thandleFabAction(action) {\n\t\tswitch (action) {\n\t\t\tcase 'adjust-fee':\n\t\t\t\twindow.location.href = '/membership_fee_adjustment';\n\t\t\t\tbreak;\n\t\t\tcase 'payment-history':\n\t\t\t\twindow.location.href = '/payment_dashboard';\n\t\t\t\tbreak;\n\t\t\tcase 'bank-details':\n\t\t\t\twindow.location.href = '/bank_details';\n\t\t\t\tbreak;\n\t\t\tcase 'help':\n\t\t\t\twindow.location.href = '/help';\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tsetupMobileModals() {\n\t\t// Enhance modal behavior for mobile\n\t\tconst modals = document.querySelectorAll('.modal');\n\t\tmodals.forEach(modal => {\n\t\t\tthis.enhanceModalForMobile(modal);\n\t\t});\n\t}\n\n\tenhanceModalForMobile(modal) {\n\t\t// Add swipe-to-close functionality\n\t\tlet startY = 0;\n\t\tlet currentY = 0;\n\n\t\tmodal.addEventListener('touchstart', (e) => {\n\t\t\tstartY = e.touches[0].clientY;\n\t\t});\n\n\t\tmodal.addEventListener('touchmove', (e) => {\n\t\t\tcurrentY = e.touches[0].clientY;\n\t\t\tconst deltaY = currentY - startY;\n\n\t\t\tif (deltaY > 0) {\n\t\t\t\tmodal.style.transform = `translateY(${deltaY * 0.5}px)`;\n\t\t\t}\n\t\t});\n\n\t\tmodal.addEventListener('touchend', (e) => {\n\t\t\tconst deltaY = currentY - startY;\n\n\t\t\tif (deltaY > 100) {\n\t\t\t\t// Close modal if swiped down enough\n\t\t\t\tmodal.style.display = 'none';\n\t\t\t} else {\n\t\t\t\t// Reset position\n\t\t\t\tmodal.style.transform = 'translateY(0)';\n\t\t\t}\n\n\t\t\tstartY = 0;\n\t\t\tcurrentY = 0;\n\t\t});\n\t}\n\n\tsetupMobileCalendar() {\n\t\t// Enhance calendar for mobile\n\t\tconst calendar = document.querySelector('.calendar-grid');\n\t\tif (calendar) {\n\t\t\tthis.enhanceCalendarForMobile(calendar);\n\t\t}\n\t}\n\n\tenhanceCalendarForMobile(calendar) {\n\t\t// Add haptic feedback for touch\n\t\tcalendar.addEventListener('touchstart', (e) => {\n\t\t\tconst day = e.target.closest('.calendar-day');\n\t\t\tif (day && navigator.vibrate) {\n\t\t\t\tnavigator.vibrate(10); // Short vibration\n\t\t\t}\n\t\t});\n\n\t\t// Improve touch targets\n\t\tconst days = calendar.querySelectorAll('.calendar-day');\n\t\tdays.forEach(day => {\n\t\t\tday.style.minHeight = '2.5rem';\n\t\t\tday.style.display = 'flex';\n\t\t\tday.style.alignItems = 'center';\n\t\t\tday.style.justifyContent = 'center';\n\t\t});\n\t}\n\n\tsetupMobileAccessibility() {\n\t\t// Enhance accessibility for mobile\n\n\t\t// Add skip links\n\t\tconst skipLink = document.createElement('a');\n\t\tskipLink.href = '#main-content';\n\t\tskipLink.textContent = 'Skip to main content';\n\t\tskipLink.className = 'sr-only focus:not-sr-only focus:absolute focus:top-0 focus:left-0 focus:z-50 focus:bg-primary focus:text-white focus:p-2';\n\t\tdocument.body.insertBefore(skipLink, document.body.firstChild);\n\n\t\t// Announce page changes\n\t\tthis.announcePageChanges();\n\n\t\t// Improve focus management\n\t\tthis.improveFocusManagement();\n\n\t\t// Add landmarks\n\t\tthis.addLandmarks();\n\t}\n\n\tannouncePageChanges() {\n\t\tconst announcer = document.createElement('div');\n\t\tannouncer.setAttribute('aria-live', 'polite');\n\t\tannouncer.setAttribute('aria-atomic', 'true');\n\t\tannouncer.className = 'sr-only';\n\t\tannouncer.id = 'page-announcer';\n\t\tdocument.body.appendChild(announcer);\n\n\t\t// Announce tab changes\n\t\tconst tabButtons = document.querySelectorAll('.tab-button');\n\t\ttabButtons.forEach(button => {\n\t\t\tbutton.addEventListener('click', () => {\n\t\t\t\tconst tabName = button.textContent.trim();\n\t\t\t\tannouncer.textContent = `Switched to ${tabName} tab`;\n\t\t\t});\n\t\t});\n\t}\n\n\timproveFocusManagement() {\n\t\t// Trap focus in modals\n\t\tconst modals = document.querySelectorAll('.modal');\n\t\tmodals.forEach(modal => {\n\t\t\tthis.trapFocusInModal(modal);\n\t\t});\n\n\t\t// Manage focus on page changes\n\t\tconst tabButtons = document.querySelectorAll('.tab-button');\n\t\ttabButtons.forEach(button => {\n\t\t\tbutton.addEventListener('click', () => {\n\t\t\t\t// Focus first interactive element in new tab\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst activeTab = document.querySelector('.tab-content:not(.hidden)');\n\t\t\t\t\tif (activeTab) {\n\t\t\t\t\t\tconst firstFocusable = activeTab.querySelector('button, a, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\t\t\t\t\t\tif (firstFocusable) {\n\t\t\t\t\t\t\tfirstFocusable.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t});\n\t\t});\n\t}\n\n\ttrapFocusInModal(modal) {\n\t\tconst focusableElements = modal.querySelectorAll('button, a, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\t\tconst firstFocusable = focusableElements[0];\n\t\tconst lastFocusable = focusableElements[focusableElements.length - 1];\n\n\t\tmodal.addEventListener('keydown', (e) => {\n\t\t\tif (e.key === 'Tab') {\n\t\t\t\tif (e.shiftKey) {\n\t\t\t\t\tif (document.activeElement === firstFocusable) {\n\t\t\t\t\t\tlastFocusable.focus();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (document.activeElement === lastFocusable) {\n\t\t\t\t\t\tfirstFocusable.focus();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\taddLandmarks() {\n\t\t// Add ARIA landmarks for better navigation\n\t\tconst main = document.querySelector('main') || document.querySelector('.main-content');\n\t\tif (main) {\n\t\t\tmain.setAttribute('role', 'main');\n\t\t\tmain.setAttribute('aria-label', 'Main content');\n\t\t}\n\n\t\tconst nav = document.querySelector('.tab-nav');\n\t\tif (nav) {\n\t\t\tnav.setAttribute('role', 'navigation');\n\t\t\tnav.setAttribute('aria-label', 'Dashboard navigation');\n\t\t}\n\n\t\tconst calendar = document.querySelector('.calendar-grid');\n\t\tif (calendar) {\n\t\t\tcalendar.setAttribute('role', 'application');\n\t\t\tcalendar.setAttribute('aria-label', 'Payment calendar');\n\t\t}\n\t}\n\n\tinitializeMobileFeatures() {\n\t\t// Initialize mobile-specific features after DOM is ready\n\t\tthis.optimizeForMobile();\n\t\tthis.setupMobileAnimations();\n\t\tthis.setupMobilePerformance();\n\t}\n\n\toptimizeForMobile() {\n\t\tif (!this.isMobile) return;\n\n\t\t// Optimize images\n\t\tconst images = document.querySelectorAll('img');\n\t\timages.forEach(img => {\n\t\t\tif (!img.loading) {\n\t\t\t\timg.loading = 'lazy';\n\t\t\t}\n\t\t});\n\n\t\t// Optimize large datasets\n\t\tthis.virtualizeDataTables();\n\n\t\t// Optimize animations\n\t\tthis.optimizeAnimations();\n\t}\n\n\tvirtualizeDataTables() {\n\t\tconst tables = document.querySelectorAll('table');\n\t\ttables.forEach(table => {\n\t\t\tconst rows = table.querySelectorAll('tbody tr');\n\t\t\tif (rows.length > 20) {\n\t\t\t\tthis.implementVirtualScrolling(table);\n\t\t\t}\n\t\t});\n\t}\n\n\timplementVirtualScrolling(table) {\n\t\t// Implement virtual scrolling for large tables\n\t\t// This is a simplified implementation\n\t\tconst tbody = table.querySelector('tbody');\n\t\tconst rows = Array.from(tbody.querySelectorAll('tr'));\n\t\tconst visibleRows = 10;\n\t\tlet startIndex = 0;\n\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.maxHeight = '400px';\n\t\tcontainer.style.overflowY = 'auto';\n\n\t\ttable.parentNode.insertBefore(container, table);\n\t\tcontainer.appendChild(table);\n\n\t\tconst renderRows = () => {\n\t\t\ttbody.innerHTML = '';\n\t\t\tconst endIndex = Math.min(startIndex + visibleRows, rows.length);\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\ttbody.appendChild(rows[i]);\n\t\t\t}\n\t\t};\n\n\t\tcontainer.addEventListener('scroll', () => {\n\t\t\tconst scrollTop = container.scrollTop;\n\t\t\tconst rowHeight = 50; // Approximate row height\n\t\t\tconst newStartIndex = Math.floor(scrollTop / rowHeight);\n\n\t\t\tif (newStartIndex !== startIndex) {\n\t\t\t\tstartIndex = newStartIndex;\n\t\t\t\trenderRows();\n\t\t\t}\n\t\t});\n\n\t\trenderRows();\n\t}\n\n\toptimizeAnimations() {\n\t\t// Disable animations on slower devices\n\t\tconst isSlowDevice = navigator.hardwareConcurrency < 4 || navigator.deviceMemory < 4;\n\n\t\tif (isSlowDevice) {\n\t\t\tconst style = document.createElement('style');\n\t\t\tstyle.textContent = `\n                *, *::before, *::after {\n                    animation-duration: 0.01ms !important;\n                    animation-iteration-count: 1 !important;\n                    transition-duration: 0.01ms !important;\n                }\n            `;\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\t}\n\n\tsetupMobileAnimations() {\n\t\t// Add mobile-specific animations\n\t\tconst observer = new IntersectionObserver((entries) => {\n\t\t\tentries.forEach(entry => {\n\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\tentry.target.classList.add('animate-in');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst animatedElements = document.querySelectorAll('.financial-card, .quick-action');\n\t\tanimatedElements.forEach(el => observer.observe(el));\n\t}\n\n\tsetupMobilePerformance() {\n\t\t// Optimize performance for mobile\n\n\t\t// Debounce resize events\n\t\tlet resizeTimer;\n\t\twindow.addEventListener('resize', () => {\n\t\t\tclearTimeout(resizeTimer);\n\t\t\tresizeTimer = setTimeout(() => {\n\t\t\t\tthis.handleResize();\n\t\t\t}, 250);\n\t\t});\n\n\t\t// Optimize scroll events\n\t\tlet scrollTimer;\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tclearTimeout(scrollTimer);\n\t\t\tscrollTimer = setTimeout(() => {\n\t\t\t\tthis.handleScroll();\n\t\t\t}, 16); // ~60fps\n\t\t});\n\n\t\t// Preload critical resources\n\t\tthis.preloadCriticalResources();\n\t}\n\n\thandleResize() {\n\t\t// Handle resize events\n\t\tthis.updateMobileClasses();\n\t\tthis.adjustLayoutForViewport();\n\t}\n\n\thandleScroll() {\n\t\t// Handle scroll events\n\t\tthis.updateScrollPosition();\n\t\tthis.manageScrollBasedElements();\n\t}\n\n\tadjustLayoutForViewport() {\n\t\t// Adjust layout based on viewport\n\t\tconst vh = window.innerHeight * 0.01;\n\t\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\t}\n\n\tupdateScrollPosition() {\n\t\t// Update scroll position for various elements\n\t\tconst scrollTop = window.pageYOffset;\n\t\tdocument.documentElement.style.setProperty('--scroll-top', `${scrollTop}px`);\n\t}\n\n\tmanageScrollBasedElements() {\n\t\t// Show/hide elements based on scroll\n\t\tconst fab = document.querySelector('.fab');\n\t\tif (fab) {\n\t\t\tconst scrollTop = window.pageYOffset;\n\t\t\tfab.style.display = scrollTop > 200 ? 'flex' : 'none';\n\t\t}\n\t}\n\n\tpreloadCriticalResources() {\n\t\t// Preload critical resources\n\t\tconst criticalUrls = [\n\t\t\t'/assets/verenigingen/css/mobile_dues_schedule.css',\n\t\t\t'/assets/verenigingen/js/dues_schedule_calendar.js'\n\t\t];\n\n\t\tcriticalUrls.forEach(url => {\n\t\t\tconst link = document.createElement('link');\n\t\t\tlink.rel = 'preload';\n\t\t\tlink.href = url;\n\t\t\tlink.as = url.endsWith('.css') ? 'style' : 'script';\n\t\t\tdocument.head.appendChild(link);\n\t\t});\n\t}\n\n\treloadDashboardData() {\n\t\t// Reload dashboard data without full page refresh\n\t\tif (typeof loadFinancialData === 'function') {\n\t\t\tloadFinancialData();\n\t\t}\n\t}\n}\n\n// Initialize mobile enhancements\nif (typeof window !== 'undefined') {\n\twindow.mobileDuesSchedule = new MobileDuesSchedule();\n}\n\n// Export for module usage\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = MobileDuesSchedule;\n}\n\n// Add CSS animation keyframes\nconst style = document.createElement('style');\nstyle.textContent = `\n    @keyframes swipeIndicator {\n        0% { opacity: 0; transform: translateY(-50%) scale(0.5); }\n        50% { opacity: 1; transform: translateY(-50%) scale(1.1); }\n        100% { opacity: 0; transform: translateY(-50%) scale(0.8); }\n    }\n\n    @keyframes animate-in {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n    }\n\n    .animate-in {\n        animation: animate-in 0.3s ease-out;\n    }\n\n    .fab-menu-item {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        padding: 0.75rem;\n        border-radius: 0.5rem;\n        cursor: pointer;\n        transition: background-color 0.2s ease;\n    }\n\n    .fab-menu-item:hover {\n        background-color: #f3f4f6;\n    }\n\n    .fab-menu-item i {\n        width: 1.25rem;\n        color: var(--brand-primary);\n    }\n\n    .fab-menu-item span {\n        font-size: 0.875rem;\n        color: #374151;\n    }\n\n    .pull-spinner {\n        width: 1rem;\n        height: 1rem;\n        border: 2px solid #e5e7eb;\n        border-top-color: var(--brand-primary);\n        border-radius: 50%;\n        transition: transform 0.2s ease;\n    }\n\n    .loading-spinner {\n        width: 1rem;\n        height: 1rem;\n        border: 2px solid rgba(255, 255, 255, 0.3);\n        border-top-color: white;\n        border-radius: 50%;\n        animation: spin 1s linear infinite;\n    }\n\n    @keyframes spin {\n        to { transform: rotate(360deg); }\n    }\n\n    .touched {\n        background-color: rgba(0, 0, 0, 0.05);\n        transform: scale(0.98);\n    }\n`;\ndocument.head.appendChild(style);\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/services/api-service.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/services/storage-service.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":77,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":77,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1667,1746],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":396,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":396,"endColumn":15,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[9412,9474],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Storage Service for Membership Application\n * Handles local storage, session storage, and draft saving functionality\n */\n\nclass StorageService {\n\tconstructor(apiService, options = {}) {\n\t\tthis.api = apiService;\n\t\tthis.options = {\n\t\t\tautoSaveInterval: 30000, // 30 seconds\n\t\t\tmaxDrafts: 5,\n\t\t\tstoragePrefix: 'membership_app_',\n\t\t\tencryptSensitive: true,\n\t\t\t...options\n\t\t};\n\n\t\tthis.autoSaveTimer = null;\n\t\tthis.isDirty = false;\n\t\tthis.lastSaved = null;\n\t\tthis.currentDraftId = null;\n\n\t\tthis._initializeStorage();\n\t}\n\n\t/**\n     * Initialize storage and check browser compatibility\n     */\n\t_initializeStorage() {\n\t\tthis.storageAvailable = {\n\t\t\tlocalStorage: this._storageAvailable('localStorage'),\n\t\t\tsessionStorage: this._storageAvailable('sessionStorage'),\n\t\t\tindexedDB: this._storageAvailable('indexedDB')\n\t\t};\n\n\t\t// Clean up old drafts on initialization\n\t\tthis._cleanupOldDrafts();\n\n\t\t// Set up beforeunload handler to save draft\n\t\twindow.addEventListener('beforeunload', (event) => {\n\t\t\tif (this.isDirty) {\n\t\t\t\tthis._saveToLocalStorage();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n     * Check if storage type is available\n     */\n\t_storageAvailable(type) {\n\t\ttry {\n\t\t\tconst storage = window[type];\n\t\t\tconst test = '__storage_test__';\n\t\t\tstorage.setItem(test, test);\n\t\t\tstorage.removeItem(test);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n     * Start auto-save functionality\n     */\n\tstartAutoSave(getData) {\n\t\tthis.getDataCallback = getData;\n\n\t\tif (this.autoSaveTimer) {\n\t\t\tclearInterval(this.autoSaveTimer);\n\t\t}\n\n\t\tthis.autoSaveTimer = setInterval(async () => {\n\t\t\tif (this.isDirty) {\n\t\t\t\tawait this.saveDraft();\n\t\t\t}\n\t\t}, this.options.autoSaveInterval);\n\n\t\tconsole.log('Auto-save started with interval:', this.options.autoSaveInterval);\n\t}\n\n\t/**\n     * Stop auto-save functionality\n     */\n\tstopAutoSave() {\n\t\tif (this.autoSaveTimer) {\n\t\t\tclearInterval(this.autoSaveTimer);\n\t\t\tthis.autoSaveTimer = null;\n\t\t}\n\t}\n\n\t/**\n     * Mark data as dirty (changed)\n     */\n\tmarkDirty() {\n\t\tthis.isDirty = true;\n\t}\n\n\t/**\n     * Mark data as clean (saved)\n     */\n\tmarkClean() {\n\t\tthis.isDirty = false;\n\t\tthis.lastSaved = new Date();\n\t}\n\n\t/**\n     * Save draft to local storage and optionally to server\n     */\n\tasync saveDraft(data = null, saveToServer = true) {\n\t\ttry {\n\t\t\tconst draftData = data || (this.getDataCallback ? this.getDataCallback() : {});\n\n\t\t\tif (!draftData || Object.keys(draftData).length === 0) {\n\t\t\t\treturn { success: false, message: 'No data to save' };\n\t\t\t}\n\n\t\t\t// Save to local storage first (instant)\n\t\t\tconst localResult = this._saveToLocalStorage(draftData);\n\n\t\t\tlet serverResult = { success: true };\n\n\t\t\t// Save to server if requested and API is available\n\t\t\tif (saveToServer && this.api) {\n\t\t\t\ttry {\n\t\t\t\t\tserverResult = await this.api.saveDraft(draftData);\n\t\t\t\t\tif (serverResult.success && serverResult.draft_id) {\n\t\t\t\t\t\tthis.currentDraftId = serverResult.draft_id;\n\t\t\t\t\t\tthis._saveMetadata('currentDraftId', this.currentDraftId);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn('Server draft save failed, using local storage only:', error);\n\t\t\t\t\tserverResult = { success: false, error: error.message };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markClean();\n\n\t\t\treturn {\n\t\t\t\tsuccess: localResult.success || serverResult.success,\n\t\t\t\tlocal: localResult,\n\t\t\t\tserver: serverResult,\n\t\t\t\ttimestamp: new Date(),\n\t\t\t\tdraftId: this.currentDraftId\n\t\t\t};\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Draft save failed:', error);\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: error.message,\n\t\t\t\ttimestamp: new Date()\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n     * Load draft from local storage or server\n     */\n\tasync loadDraft(draftId = null) {\n\t\ttry {\n\t\t\t// Try to load from server first if draft ID is provided\n\t\t\tif (draftId && this.api) {\n\t\t\t\ttry {\n\t\t\t\t\tconst serverResult = await this.api.loadDraft(draftId);\n\t\t\t\t\tif (serverResult.success) {\n\t\t\t\t\t\tthis.currentDraftId = draftId;\n\t\t\t\t\t\tthis._saveMetadata('currentDraftId', draftId);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\t\tdata: serverResult.data,\n\t\t\t\t\t\t\tsource: 'server',\n\t\t\t\t\t\t\tdraftId: draftId\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn('Server draft load failed, trying local storage:', error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back to local storage\n\t\t\tconst localResult = this._loadFromLocalStorage();\n\t\t\tif (localResult.success) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tdata: localResult.data,\n\t\t\t\t\tsource: 'local',\n\t\t\t\t\ttimestamp: localResult.timestamp\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn { success: false, message: 'No draft found' };\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Draft load failed:', error);\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: error.message\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n     * Get all available draft versions\n     */\n\tgetAllDrafts() {\n\t\tconst drafts = [];\n\n\t\t// Get local drafts\n\t\tif (this.storageAvailable.localStorage) {\n\t\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\t\tconst key = localStorage.key(i);\n\t\t\t\tif (key.startsWith(this.options.storagePrefix + 'draft_')) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst data = JSON.parse(localStorage.getItem(key));\n\t\t\t\t\t\tdrafts.push({\n\t\t\t\t\t\t\tid: key.replace(this.options.storagePrefix + 'draft_', ''),\n\t\t\t\t\t\t\ttimestamp: new Date(data.timestamp),\n\t\t\t\t\t\t\tsource: 'local',\n\t\t\t\t\t\t\tsize: JSON.stringify(data).length\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.warn('Invalid draft data in localStorage:', key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Sort by timestamp (newest first)\n\t\treturn drafts.sort((a, b) => b.timestamp - a.timestamp);\n\t}\n\n\t/**\n     * Delete a specific draft\n     */\n\tdeleteDraft(draftId) {\n\t\tif (this.storageAvailable.localStorage) {\n\t\t\tconst key = this.options.storagePrefix + 'draft_' + draftId;\n\t\t\tlocalStorage.removeItem(key);\n\t\t}\n\n\t\t// If this was the current draft, clear the reference\n\t\tif (this.currentDraftId === draftId) {\n\t\t\tthis.currentDraftId = null;\n\t\t\tthis._saveMetadata('currentDraftId', null);\n\t\t}\n\t}\n\n\t/**\n     * Clear all drafts\n     */\n\tclearAllDrafts() {\n\t\tif (this.storageAvailable.localStorage) {\n\t\t\tconst keysToRemove = [];\n\t\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\t\tconst key = localStorage.key(i);\n\t\t\t\tif (key.startsWith(this.options.storagePrefix)) {\n\t\t\t\t\tkeysToRemove.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\tkeysToRemove.forEach(key => localStorage.removeItem(key));\n\t\t}\n\n\t\tthis.currentDraftId = null;\n\t}\n\n\t/**\n     * Save to local storage\n     */\n\t_saveToLocalStorage(data = null) {\n\t\tif (!this.storageAvailable.localStorage) {\n\t\t\treturn { success: false, message: 'localStorage not available' };\n\t\t}\n\n\t\ttry {\n\t\t\tconst draftData = data || (this.getDataCallback ? this.getDataCallback() : {});\n\t\t\tconst timestamp = new Date().toISOString();\n\t\t\tconst draftId = this._generateDraftId();\n\n\t\t\tconst saveData = {\n\t\t\t\tdata: this._sanitizeData(draftData),\n\t\t\t\ttimestamp: timestamp,\n\t\t\t\tversion: '1.0',\n\t\t\t\tuserAgent: navigator.userAgent.substring(0, 100)\n\t\t\t};\n\n\t\t\tconst key = this.options.storagePrefix + 'draft_' + draftId;\n\t\t\tlocalStorage.setItem(key, JSON.stringify(saveData));\n\n\t\t\t// Update current draft reference\n\t\t\tthis._saveMetadata('currentDraftId', draftId);\n\t\t\tthis._saveMetadata('lastSaved', timestamp);\n\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\tdraftId: draftId,\n\t\t\t\ttimestamp: timestamp,\n\t\t\t\tsize: JSON.stringify(saveData).length\n\t\t\t};\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Local storage save failed:', error);\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: error.message\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n     * Load from local storage\n     */\n\t_loadFromLocalStorage() {\n\t\tif (!this.storageAvailable.localStorage) {\n\t\t\treturn { success: false, message: 'localStorage not available' };\n\t\t}\n\n\t\ttry {\n\t\t\tconst currentDraftId = this._loadMetadata('currentDraftId');\n\t\t\tif (!currentDraftId) {\n\t\t\t\treturn { success: false, message: 'No current draft ID' };\n\t\t\t}\n\n\t\t\tconst key = this.options.storagePrefix + 'draft_' + currentDraftId;\n\t\t\tconst savedData = localStorage.getItem(key);\n\n\t\t\tif (!savedData) {\n\t\t\t\treturn { success: false, message: 'Draft not found in localStorage' };\n\t\t\t}\n\n\t\t\tconst parsedData = JSON.parse(savedData);\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\tdata: parsedData.data,\n\t\t\t\ttimestamp: parsedData.timestamp,\n\t\t\t\tdraftId: currentDraftId\n\t\t\t};\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Local storage load failed:', error);\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: error.message\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n     * Save/load metadata\n     */\n\t_saveMetadata(key, value) {\n\t\tif (this.storageAvailable.localStorage) {\n\t\t\tconst metaKey = this.options.storagePrefix + 'meta_' + key;\n\t\t\tlocalStorage.setItem(metaKey, JSON.stringify(value));\n\t\t}\n\t}\n\n\t_loadMetadata(key) {\n\t\tif (this.storageAvailable.localStorage) {\n\t\t\tconst metaKey = this.options.storagePrefix + 'meta_' + key;\n\t\t\tconst value = localStorage.getItem(metaKey);\n\t\t\treturn value ? JSON.parse(value) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n     * Utility functions\n     */\n\t_generateDraftId() {\n\t\treturn 'local_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n\t}\n\n\t_sanitizeData(data) {\n\t\t// Remove sensitive data before storing locally\n\t\tconst sanitized = { ...data };\n\n\t\tif (this.options.encryptSensitive) {\n\t\t\t// Remove or encrypt sensitive fields\n\t\t\tdelete sanitized.bankAccount;\n\t\t\tdelete sanitized.ssn;\n\t\t}\n\n\t\treturn sanitized;\n\t}\n\n\t_cleanupOldDrafts() {\n\t\tif (!this.storageAvailable.localStorage) return;\n\n\t\tconst drafts = this.getAllDrafts();\n\t\tif (drafts.length > this.options.maxDrafts) {\n\t\t\t// Remove oldest drafts\n\t\t\tconst draftsToRemove = drafts.slice(this.options.maxDrafts);\n\t\t\tdraftsToRemove.forEach(draft => {\n\t\t\t\tthis.deleteDraft(draft.id);\n\t\t\t});\n\n\t\t\tconsole.log(`Cleaned up ${draftsToRemove.length} old drafts`);\n\t\t}\n\t}\n\n\t/**\n     * Storage statistics and debugging\n     */\n\tgetStorageStats() {\n\t\tlet usedSpace = 0;\n\t\tlet draftCount = 0;\n\n\t\tif (this.storageAvailable.localStorage) {\n\t\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\t\tconst key = localStorage.key(i);\n\t\t\t\tif (key.startsWith(this.options.storagePrefix)) {\n\t\t\t\t\tconst value = localStorage.getItem(key);\n\t\t\t\t\tusedSpace += key.length + value.length;\n\t\t\t\t\tif (key.includes('draft_')) {\n\t\t\t\t\t\tdraftCount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tavailable: this.storageAvailable,\n\t\t\tusedSpace: usedSpace,\n\t\t\tdraftCount: draftCount,\n\t\t\tlastSaved: this.lastSaved,\n\t\t\tcurrentDraftId: this.currentDraftId,\n\t\t\tisDirty: this.isDirty,\n\t\t\tautoSaveActive: !!this.autoSaveTimer\n\t\t};\n\t}\n\n\t/**\n     * Session storage methods for temporary data\n     */\n\tsetSessionData(key, value) {\n\t\tif (this.storageAvailable.sessionStorage) {\n\t\t\tconst fullKey = this.options.storagePrefix + 'session_' + key;\n\t\t\tsessionStorage.setItem(fullKey, JSON.stringify(value));\n\t\t}\n\t}\n\n\tgetSessionData(key) {\n\t\tif (this.storageAvailable.sessionStorage) {\n\t\t\tconst fullKey = this.options.storagePrefix + 'session_' + key;\n\t\t\tconst value = sessionStorage.getItem(fullKey);\n\t\t\treturn value ? JSON.parse(value) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tclearSessionData(key = null) {\n\t\tif (!this.storageAvailable.sessionStorage) return;\n\n\t\tif (key) {\n\t\t\tconst fullKey = this.options.storagePrefix + 'session_' + key;\n\t\t\tsessionStorage.removeItem(fullKey);\n\t\t} else {\n\t\t\t// Clear all session data for this app\n\t\t\tconst keysToRemove = [];\n\t\t\tfor (let i = 0; i < sessionStorage.length; i++) {\n\t\t\t\tconst storageKey = sessionStorage.key(i);\n\t\t\t\tif (storageKey.startsWith(this.options.storagePrefix + 'session_')) {\n\t\t\t\t\tkeysToRemove.push(storageKey);\n\t\t\t\t}\n\t\t\t}\n\t\t\tkeysToRemove.forEach(storageKey => sessionStorage.removeItem(storageKey));\n\t\t}\n\t}\n}\n\n// Export for use in other modules\nwindow.StorageService = StorageService;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/services/validation-service.js","messages":[{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":30,"column":30,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":30,"endColumn":31,"suggestions":[{"messageId":"removeEscape","fix":{"range":[657,658],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[657,657],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\..","line":30,"column":32,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":30,"endColumn":33,"suggestions":[{"messageId":"removeEscape","fix":{"range":[659,660],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[659,659],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":36,"column":30,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":36,"endColumn":31,"suggestions":[{"messageId":"removeEscape","fix":{"range":[773,774],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[773,773],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\..","line":36,"column":32,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":36,"endColumn":33,"suggestions":[{"messageId":"removeEscape","fix":{"range":[775,776],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[775,775],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\+.","line":51,"column":17,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":51,"endColumn":18,"suggestions":[{"messageId":"removeEscape","fix":{"range":[1088,1089],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[1088,1088],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\(.","line":51,"column":29,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":51,"endColumn":30,"suggestions":[{"messageId":"removeEscape","fix":{"range":[1100,1101],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[1100,1100],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\).","line":51,"column":31,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":51,"endColumn":32,"suggestions":[{"messageId":"removeEscape","fix":{"range":[1102,1103],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[1102,1102],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":62,"column":30,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":62,"endColumn":31,"suggestions":[{"messageId":"removeEscape","fix":{"range":[1295,1296],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[1295,1295],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\..","line":62,"column":32,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":62,"endColumn":33,"suggestions":[{"messageId":"removeEscape","fix":{"range":[1297,1298],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[1297,1297],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'$feedback' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":298,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":298,"endColumn":18}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Validation Service for Membership Application\n * Handles all form validation with consistent error handling and UI feedback\n */\n\nclass ValidationService {\n\tconstructor(apiService) {\n\t\tthis.api = apiService;\n\t\tthis.validationRules = this._initializeRules();\n\t\tthis.validationCache = new Map();\n\t\tthis.debounceTimers = new Map();\n\t}\n\n\t/**\n     * Initialize validation rules\n     */\n\t_initializeRules() {\n\t\treturn {\n\t\t\temail: {\n\t\t\t\trequired: true,\n\t\t\t\tpattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n\t\t\t\tminLength: 5,\n\t\t\t\tmaxLength: 255,\n\t\t\t\tasync: true\n\t\t\t},\n\t\t\tfirstName: {\n\t\t\t\trequired: true,\n\t\t\t\tminLength: 2,\n\t\t\t\tmaxLength: 50,\n\t\t\t\tpattern: /^[a-zA-ZÀ-ÿ\\s\\-\\'\\.]+$/\n\t\t\t},\n\t\t\tlastName: {\n\t\t\t\trequired: true,\n\t\t\t\tminLength: 2,\n\t\t\t\tmaxLength: 50,\n\t\t\t\tpattern: /^[a-zA-ZÀ-ÿ\\s\\-\\'\\.]+$/\n\t\t\t},\n\t\t\tbirthDate: {\n\t\t\t\trequired: true,\n\t\t\t\tasync: true,\n\t\t\t\tcustomValidation: this._validateAge.bind(this)\n\t\t\t},\n\t\t\tpostalCode: {\n\t\t\t\trequired: true,\n\t\t\t\tasync: true,\n\t\t\t\tcustomValidation: this._validatePostalCodeFormat.bind(this)\n\t\t\t},\n\t\t\tphone: {\n\t\t\t\trequired: false,\n\t\t\t\tasync: true,\n\t\t\t\tpattern: /^[\\+]?[0-9\\s\\-\\(\\)]{8,20}$/\n\t\t\t},\n\t\t\taddress: {\n\t\t\t\trequired: true,\n\t\t\t\tminLength: 5,\n\t\t\t\tmaxLength: 255\n\t\t\t},\n\t\t\tcity: {\n\t\t\t\trequired: true,\n\t\t\t\tminLength: 2,\n\t\t\t\tmaxLength: 100,\n\t\t\t\tpattern: /^[a-zA-ZÀ-ÿ\\s\\-\\'\\.]+$/\n\t\t\t},\n\t\t\tcountry: {\n\t\t\t\trequired: true,\n\t\t\t\tminLength: 2\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n     * Validate a single field\n     */\n\tasync validateField(fieldName, value, context = {}) {\n\t\tconst rule = this.validationRules[fieldName];\n\t\tif (!rule) {\n\t\t\treturn { valid: true };\n\t\t}\n\n\t\t// Basic validations\n\t\tconst basicValidation = this._validateBasic(fieldName, value, rule);\n\t\tif (!basicValidation.valid) {\n\t\t\treturn basicValidation;\n\t\t}\n\n\t\t// Async validation with debouncing\n\t\tif (rule.async) {\n\t\t\treturn await this._validateAsync(fieldName, value, rule, context);\n\t\t}\n\n\t\treturn { valid: true };\n\t}\n\n\t/**\n     * Validate multiple fields\n     */\n\tasync validateFields(data, fieldNames = null) {\n\t\tconst fieldsToValidate = fieldNames || Object.keys(this.validationRules);\n\t\tconst results = {};\n\t\tconst errors = [];\n\n\t\tfor (const fieldName of fieldsToValidate) {\n\t\t\tconst result = await this.validateField(fieldName, data[fieldName], data);\n\t\t\tresults[fieldName] = result;\n\n\t\t\tif (!result.valid) {\n\t\t\t\terrors.push({\n\t\t\t\t\tfield: fieldName,\n\t\t\t\t\tmessage: result.message,\n\t\t\t\t\tvalue: data[fieldName]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tvalid: errors.length === 0,\n\t\t\tresults,\n\t\t\terrors,\n\t\t\tsummary: this._generateValidationSummary(results)\n\t\t};\n\t}\n\n\t/**\n     * Validate a complete step\n     */\n\tasync validateStep(stepNumber, data) {\n\t\tconst stepFields = this._getStepFields(stepNumber);\n\t\treturn await this.validateFields(data, stepFields);\n\t}\n\n\t/**\n     * Basic synchronous validation\n     */\n\t_validateBasic(fieldName, value, rule) {\n\t\t// Required check\n\t\tif (rule.required && (!value || value.toString().trim() === '')) {\n\t\t\treturn {\n\t\t\t\tvalid: false,\n\t\t\t\tmessage: `${this._getFieldLabel(fieldName)} is required`,\n\t\t\t\ttype: 'required'\n\t\t\t};\n\t\t}\n\n\t\t// Skip other validations if field is empty and not required\n\t\tif (!value && !rule.required) {\n\t\t\treturn { valid: true };\n\t\t}\n\n\t\tconst stringValue = value.toString().trim();\n\n\t\t// Length validations\n\t\tif (rule.minLength && stringValue.length < rule.minLength) {\n\t\t\treturn {\n\t\t\t\tvalid: false,\n\t\t\t\tmessage: `${this._getFieldLabel(fieldName)} must be at least ${rule.minLength} characters`,\n\t\t\t\ttype: 'minLength'\n\t\t\t};\n\t\t}\n\n\t\tif (rule.maxLength && stringValue.length > rule.maxLength) {\n\t\t\treturn {\n\t\t\t\tvalid: false,\n\t\t\t\tmessage: `${this._getFieldLabel(fieldName)} must not exceed ${rule.maxLength} characters`,\n\t\t\t\ttype: 'maxLength'\n\t\t\t};\n\t\t}\n\n\t\t// Pattern validation\n\t\tif (rule.pattern && !rule.pattern.test(stringValue)) {\n\t\t\treturn {\n\t\t\t\tvalid: false,\n\t\t\t\tmessage: this._getPatternErrorMessage(fieldName),\n\t\t\t\ttype: 'pattern'\n\t\t\t};\n\t\t}\n\n\t\treturn { valid: true };\n\t}\n\n\t/**\n     * Async validation with debouncing and caching\n     */\n\tasync _validateAsync(fieldName, value, rule, context) {\n\t\tconst cacheKey = `${fieldName}:${value}`;\n\n\t\t// Return cached result if available\n\t\tif (this.validationCache.has(cacheKey)) {\n\t\t\treturn this.validationCache.get(cacheKey);\n\t\t}\n\n\t\t// Debounce async validations\n\t\treturn new Promise((resolve) => {\n\t\t\t// Clear existing timer\n\t\t\tif (this.debounceTimers.has(fieldName)) {\n\t\t\t\tclearTimeout(this.debounceTimers.get(fieldName));\n\t\t\t}\n\n\t\t\t// Set new timer\n\t\t\tconst timer = setTimeout(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tlet result;\n\n\t\t\t\t\t// Custom validation function\n\t\t\t\t\tif (rule.customValidation) {\n\t\t\t\t\t\tresult = await rule.customValidation(value, context);\n\t\t\t\t\t}\n\t\t\t\t\t// API validation\n\t\t\t\t\telse {\n\t\t\t\t\t\tresult = await this._performAPIValidation(fieldName, value, context);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Cache successful results\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tthis.validationCache.set(cacheKey, result);\n\t\t\t\t\t\t// Clear cache after 5 minutes\n\t\t\t\t\t\tsetTimeout(() => this.validationCache.delete(cacheKey), 300000);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(result || { valid: true });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(`Async validation failed for ${fieldName}:`, error);\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tvalid: false,\n\t\t\t\t\t\tmessage: 'Validation temporarily unavailable',\n\t\t\t\t\t\ttype: 'network'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 500); // 500ms debounce\n\n\t\t\tthis.debounceTimers.set(fieldName, timer);\n\t\t});\n\t}\n\n\t/**\n     * Perform API-based validation\n     */\n\tasync _performAPIValidation(fieldName, value, context) {\n\t\tswitch (fieldName) {\n\t\t\tcase 'email':\n\t\t\t\treturn await this.api.validateEmail(value);\n\n\t\t\tcase 'postalCode':\n\t\t\t\treturn await this.api.validatePostalCode(value, context.country);\n\n\t\t\tcase 'phone':\n\t\t\t\treturn await this.api.validatePhoneNumber(value, context.country);\n\n\t\t\tcase 'birthDate':\n\t\t\t\treturn await this.api.validateBirthDate(value);\n\n\t\t\tdefault:\n\t\t\t\treturn { valid: true };\n\t\t}\n\t}\n\n\t/**\n     * Custom validation functions\n     */\n\tasync _validateAge(birthDate, context) {\n\t\tconst result = await this.api.validateBirthDate(birthDate);\n\n\t\tif (!result.valid) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// Additional age-specific checks\n\t\tif (result.age !== undefined) {\n\t\t\tif (result.age < 12) {\n\t\t\t\treturn {\n\t\t\t\t\tvalid: true,\n\t\t\t\t\tmessage: 'Valid birth date',\n\t\t\t\t\twarning: 'Applicants under 12 may require parental consent',\n\t\t\t\t\tage: result.age\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (result.age > 100) {\n\t\t\t\treturn {\n\t\t\t\t\tvalid: true,\n\t\t\t\t\tmessage: 'Valid birth date',\n\t\t\t\t\tage: result.age\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t_validatePostalCodeFormat(postalCode, context) {\n\t\treturn this.api.validatePostalCode(postalCode, context.country);\n\t}\n\n\t/**\n     * Real-time validation for UI\n     */\n\tsetupRealTimeValidation(element, fieldName, context = {}) {\n\t\tconst $element = $(element);\n\t\tconst $feedback = this._ensureFeedbackElement($element);\n\n\t\t// Store validation state\n\t\t$element.data('validation-state', 'pending');\n\n\t\t// Validation on input/change\n\t\t$element.on('input change blur', async (event) => {\n\t\t\tconst value = $element.val();\n\n\t\t\t// Show loading state on blur\n\t\t\tif (event.type === 'blur' && value) {\n\t\t\t\tthis._showValidationState($element, 'validating');\n\t\t\t}\n\n\t\t\tconst result = await this.validateField(fieldName, value, context);\n\t\t\tthis._showValidationResult($element, result);\n\t\t});\n\n\t\treturn $element;\n\t}\n\n\t/**\n     * Show validation result in UI\n     */\n\t_showValidationResult(element, result) {\n\t\tconst $element = $(element);\n\t\tconst $feedback = this._ensureFeedbackElement($element);\n\n\t\t// Remove existing classes\n\t\t$element.removeClass('is-valid is-invalid is-validating');\n\t\t$feedback.removeClass('valid-feedback invalid-feedback text-warning');\n\n\t\tif (result.valid) {\n\t\t\t$element.addClass('is-valid');\n\t\t\t$feedback.addClass('valid-feedback').text(result.message || 'Looks good!');\n\n\t\t\t// Show warnings if any\n\t\t\tif (result.warning) {\n\t\t\t\t$feedback.removeClass('valid-feedback').addClass('text-warning');\n\t\t\t\t$feedback.text(result.warning);\n\t\t\t}\n\t\t} else {\n\t\t\t$element.addClass('is-invalid');\n\t\t\t$feedback.addClass('invalid-feedback').text(result.message);\n\t\t}\n\n\t\t$element.data('validation-state', result.valid ? 'valid' : 'invalid');\n\t\t$element.data('validation-result', result);\n\t}\n\n\t_showValidationState(element, state) {\n\t\tconst $element = $(element);\n\n\t\t$element.removeClass('is-valid is-invalid is-validating');\n\n\t\tif (state === 'validating') {\n\t\t\t$element.addClass('is-validating');\n\t\t\tconst $feedback = this._ensureFeedbackElement($element);\n\t\t\t$feedback.removeClass('valid-feedback invalid-feedback text-warning');\n\t\t\t$feedback.addClass('text-muted').text('Validating...');\n\t\t}\n\t}\n\n\t_ensureFeedbackElement($element) {\n\t\tlet $feedback = $element.siblings('.feedback');\n\n\t\tif ($feedback.length === 0) {\n\t\t\t$feedback = $('<div class=\"feedback\"></div>');\n\t\t\t$element.after($feedback);\n\t\t}\n\n\t\treturn $feedback;\n\t}\n\n\t/**\n     * Utility functions\n     */\n\t_getStepFields(stepNumber) {\n\t\tconst stepFieldMap = {\n\t\t\t1: ['firstName', 'lastName', 'email', 'birthDate'], // Personal Info\n\t\t\t2: ['address', 'city', 'postalCode', 'country'], // Address\n\t\t\t3: [], // Membership (validated separately)\n\t\t\t4: [], // Volunteer (optional)\n\t\t\t5: [] // Payment (handled by payment processor)\n\t\t};\n\n\t\treturn stepFieldMap[stepNumber] || [];\n\t}\n\n\t_getFieldLabel(fieldName) {\n\t\tconst labels = {\n\t\t\temail: 'Email address',\n\t\t\tfirstName: 'First name',\n\t\t\tlastName: 'Last name',\n\t\t\tbirthDate: 'Birth date',\n\t\t\tpostalCode: 'Postal code',\n\t\t\tphone: 'Phone number',\n\t\t\taddress: 'Address',\n\t\t\tcity: 'City',\n\t\t\tcountry: 'Country'\n\t\t};\n\n\t\treturn labels[fieldName] || fieldName;\n\t}\n\n\t_getPatternErrorMessage(fieldName) {\n\t\tconst messages = {\n\t\t\temail: 'Please enter a valid email address',\n\t\t\tfirstName: 'Name can only contain letters, spaces, hyphens, and apostrophes',\n\t\t\tlastName: 'Name can only contain letters, spaces, hyphens, and apostrophes',\n\t\t\tphone: 'Please enter a valid phone number',\n\t\t\tcity: 'City name can only contain letters, spaces, hyphens, and apostrophes'\n\t\t};\n\n\t\treturn messages[fieldName] || `Please enter a valid ${this._getFieldLabel(fieldName).toLowerCase()}`;\n\t}\n\n\t_generateValidationSummary(results) {\n\t\tconst summary = {\n\t\t\ttotal: Object.keys(results).length,\n\t\t\tvalid: 0,\n\t\t\tinvalid: 0,\n\t\t\twarnings: 0\n\t\t};\n\n\t\tObject.values(results).forEach(result => {\n\t\t\tif (result.valid) {\n\t\t\t\tsummary.valid++;\n\t\t\t\tif (result.warning) {\n\t\t\t\t\tsummary.warnings++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsummary.invalid++;\n\t\t\t}\n\t\t});\n\n\t\treturn summary;\n\t}\n\n\t/**\n     * Clear validation cache\n     */\n\tclearCache(pattern = null) {\n\t\tif (pattern) {\n\t\t\tfor (const key of this.validationCache.keys()) {\n\t\t\t\tif (key.includes(pattern)) {\n\t\t\t\t\tthis.validationCache.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.validationCache.clear();\n\t\t}\n\t}\n\n\t/**\n     * Get validation statistics\n     */\n\tgetValidationStats() {\n\t\treturn {\n\t\t\tcacheSize: this.validationCache.size,\n\t\t\tactiveTimers: this.debounceTimers.size,\n\t\t\trules: Object.keys(this.validationRules).length\n\t\t};\n\t}\n}\n\n// Export for use in other modules\nwindow.ValidationService = ValidationService;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/termination_dashboard.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":57,"column":7,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { AlertTriangle, Users, FileText, CheckCircle, XCircle, Clock, TrendingUp } from 'lucide-react';\n\nconst TerminationDashboard = () => {\n  const [stats, setStats] = useState(null);\n  const [pendingRequests, setPendingRequests] = useState([]);\n  const [recentActivity, setRecentActivity] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const fetchDashboardData = async () => {\n    try {\n      // Simulate API calls that would be made to Frappe\n      const statsResponse = await frappe.call({\n        method: 'verenigingen.verenigingen.doctype.membership_termination_request.membership_termination_request.get_termination_statistics'\n      });\n\n      const pendingResponse = await frappe.call({\n        method: 'frappe.client.get_list',\n        args: {\n          doctype: 'Membership Termination Request',\n          filters: { status: 'Pending Approval' },\n          fields: ['name', 'member_name', 'termination_type', 'request_date', 'requested_by'],\n          limit: 10,\n          order_by: 'request_date desc'\n        }\n      });\n\n      const recentResponse = await frappe.call({\n        method: 'frappe.client.get_list',\n        args: {\n          doctype: 'Membership Termination Request',\n          filters: { status: 'Executed' },\n          fields: ['name', 'member_name', 'termination_type', 'execution_date', 'executed_by'],\n          limit: 5,\n          order_by: 'execution_date desc'\n        }\n      });\n\n      setStats(statsResponse.message);\n      setPendingRequests(pendingResponse.message || []);\n      setRecentActivity(recentResponse.message || []);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  const getStatusColor = (status) => {\n    const colors = {\n      'Draft': 'bg-blue-100 text-blue-800',\n      'Pending Approval': 'bg-yellow-100 text-yellow-800',\n      'Approved': 'bg-green-100 text-green-800',\n      'Rejected': 'bg-red-100 text-red-800',\n      'Executed': 'bg-gray-100 text-gray-800'\n    };\n    return colors[status] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getTypeColor = (type) => {\n    const disciplinaryTypes = ['Policy Violation', 'Disciplinary Action', 'Expulsion'];\n    return disciplinaryTypes.includes(type)\n      ? 'bg-red-100 text-red-800'\n      : 'bg-blue-100 text-blue-800';\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Membership Termination Dashboard</h1>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={() => frappe.set_route('List', 'Membership Termination Request')}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            View All Requests\n          </button>\n          <button\n            onClick={() => frappe.set_route('Form', 'Membership Termination Request', 'new')}\n            className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n          >\n            New Termination\n          </button>\n        </div>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Approvals</CardTitle>\n            <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-yellow-600\">\n              {stats?.pending_approvals || 0}\n            </div>\n            <p className=\"text-xs text-gray-600\">\n              Requiring immediate attention\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Requests</CardTitle>\n            <FileText className=\"h-4 w-4 text-blue-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {stats?.total_requests || 0}\n            </div>\n            <p className=\"text-xs text-gray-600\">\n              All time\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Recent Activity</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">\n              {stats?.recent_activity?.requests || 0}\n            </div>\n            <p className=\"text-xs text-gray-600\">\n              Last 30 days\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Executions</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-gray-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-gray-600\">\n              {stats?.recent_activity?.executions || 0}\n            </div>\n            <p className=\"text-xs text-gray-600\">\n              Last 30 days\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Status Breakdown */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Requests by Status</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {stats?.status_counts && Object.entries(stats.status_counts).map(([status, count]) => (\n                <div key={status} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Badge className={getStatusColor(status)}>\n                      {status}\n                    </Badge>\n                  </div>\n                  <span className=\"font-semibold\">{count}</span>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Requests by Type</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {stats?.type_counts && Object.entries(stats.type_counts)\n                .filter(([_, count]) => count > 0)\n                .map(([type, count]) => (\n                <div key={type} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Badge className={getTypeColor(type)}>\n                      {type}\n                    </Badge>\n                  </div>\n                  <span className=\"font-semibold\">{count}</span>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Pending Approvals */}\n      {pendingRequests.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"h-5 w-5 text-yellow-600\" />\n              <span>Pending Approvals ({pendingRequests.length})</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {pendingRequests.map((request) => (\n                <div key={request.name} className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-3\">\n                      <h4 className=\"font-medium\">{request.member_name}</h4>\n                      <Badge className={getTypeColor(request.termination_type)}>\n                        {request.termination_type}\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mt-1\">\n                      Requested by {request.requested_by} on {new Date(request.request_date).toLocaleDateString()}\n                    </p>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => frappe.set_route('Form', 'Membership Termination Request', request.name)}\n                      className=\"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700\"\n                    >\n                      Review\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Recent Activity */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Executions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {recentActivity.length > 0 ? (\n            <div className=\"space-y-4\">\n              {recentActivity.map((activity) => (\n                <div key={activity.name} className=\"flex items-center justify-between p-3 border-l-4 border-gray-300 bg-gray-50\">\n                  <div>\n                    <h4 className=\"font-medium\">{activity.member_name}</h4>\n                    <div className=\"flex items-center space-x-2 mt-1\">\n                      <Badge className={getTypeColor(activity.termination_type)}>\n                        {activity.termination_type}\n                      </Badge>\n                      <span className=\"text-sm text-gray-600\">\n                        Executed by {activity.executed_by} on {new Date(activity.execution_date).toLocaleDateString()}\n                      </span>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => frappe.set_route('Form', 'Membership Termination Request', activity.name)}\n                    className=\"text-blue-600 hover:text-blue-800 text-sm\"\n                  >\n                    View Details\n                  </button>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"text-gray-600 italic\">No recent executions</p>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Quick Actions */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Quick Actions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <button\n              onClick={() => frappe.set_route('query-report', 'Termination Audit Report')}\n              className=\"p-4 border rounded-lg hover:bg-gray-50 text-left\"\n            >\n              <FileText className=\"h-6 w-6 text-blue-600 mb-2\" />\n              <h3 className=\"font-medium\">Audit Report</h3>\n              <p className=\"text-sm text-gray-600\">Generate comprehensive audit trail</p>\n            </button>\n\n            <button\n              onClick={() => frappe.set_route('query-report', 'Expulsion Governance Report')}\n              className=\"p-4 border rounded-lg hover:bg-gray-50 text-left\"\n            >\n              <AlertTriangle className=\"h-6 w-6 text-red-600 mb-2\" />\n              <h3 className=\"font-medium\">Expulsion Report</h3>\n              <p className=\"text-sm text-gray-600\">Review disciplinary actions</p>\n            </button>\n\n            <button\n              onClick={() => frappe.msgprint('Bulk processing functionality coming soon')}\n              className=\"p-4 border rounded-lg hover:bg-gray-50 text-left\"\n            >\n              <Users className=\"h-6 w-6 text-green-600 mb-2\" />\n              <h3 className=\"font-medium\">Bulk Operations</h3>\n              <p className=\"text-sm text-gray-600\">Process multiple requests</p>\n            </button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default TerminationDashboard;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/home/frappe/frappe-bench/apps/verenigingen/verenigingen/public/js/utils/iban-validator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"vue/component-tags-order","replacedBy":["block-order"]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]}]
